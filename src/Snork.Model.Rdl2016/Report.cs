//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.566.0 using the following command:
// xmlschemaclassgenerator.console ReportDefinition2016.xsd --namespace =Snork.Model.Rdl2016 --collectionType System.Collections.Generic.List`1 --collectionImplementationType System.Collections.Generic.List`1
namespace Snork.Model.Rdl2016
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportSectionsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportSectionsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportSectionType> _reportSection;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ReportSection")]
        public System.Collections.Generic.List<ReportSectionType> ReportSection
        {
            get
            {
                return this._reportSection;
            }
            private set
            {
                this._reportSection = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportSectionsType" /> class.</para>
        /// </summary>
        public ReportSectionsType()
        {
            this._reportSection = new System.Collections.Generic.List<ReportSectionType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportSectionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportSectionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BodyType> _body;

        [System.Xml.Serialization.XmlElementAttribute("Body")]
        public System.Collections.Generic.List<BodyType> Body
        {
            get
            {
                return this._body;
            }
            private set
            {
                this._body = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Body collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BodySpecified
        {
            get
            {
                return (this.Body.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportSectionType" /> class.</para>
        /// </summary>
        public ReportSectionType()
        {
            this._body = new System.Collections.Generic.List<BodyType>();
            this._width = new System.Collections.Generic.List<string>();
            this._page = new System.Collections.Generic.List<PageType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<ReportSectionTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageType> _page;

        [System.Xml.Serialization.XmlElementAttribute("Page")]
        public System.Collections.Generic.List<PageType> Page
        {
            get
            {
                return this._page;
            }
            private set
            {
                this._page = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Page collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageSpecified
        {
            get
            {
                return (this.Page.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportSectionTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<ReportSectionTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BodyType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BodyType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportItemsType> _reportItems;

        [System.Xml.Serialization.XmlElementAttribute("ReportItems")]
        public System.Collections.Generic.List<ReportItemsType> ReportItems
        {
            get
            {
                return this._reportItems;
            }
            private set
            {
                this._reportItems = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReportItems collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportItemsSpecified
        {
            get
            {
                return (this.ReportItems.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BodyType" /> class.</para>
        /// </summary>
        public BodyType()
        {
            this._reportItems = new System.Collections.Generic.List<ReportItemsType>();
            this._height = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportItemsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportItemsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LineType> _line;

        [System.Xml.Serialization.XmlElementAttribute("Line")]
        public System.Collections.Generic.List<LineType> Line
        {
            get
            {
                return this._line;
            }
            private set
            {
                this._line = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Line collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LineSpecified
        {
            get
            {
                return (this.Line.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportItemsType" /> class.</para>
        /// </summary>
        public ReportItemsType()
        {
            this._line = new System.Collections.Generic.List<LineType>();
            this._rectangle = new System.Collections.Generic.List<RectangleType>();
            this._textbox = new System.Collections.Generic.List<TextboxType>();
            this._image = new System.Collections.Generic.List<ImageType>();
            this._subreport = new System.Collections.Generic.List<SubreportType>();
            this._chart = new System.Collections.Generic.List<ChartType>();
            this._gaugePanel = new System.Collections.Generic.List<GaugePanelType>();
            this._map = new System.Collections.Generic.List<MapType>();
            this._tablix = new System.Collections.Generic.List<TablixType>();
            this._customReportItem = new System.Collections.Generic.List<CustomReportItemType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RectangleType> _rectangle;

        [System.Xml.Serialization.XmlElementAttribute("Rectangle")]
        public System.Collections.Generic.List<RectangleType> Rectangle
        {
            get
            {
                return this._rectangle;
            }
            private set
            {
                this._rectangle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Rectangle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RectangleSpecified
        {
            get
            {
                return (this.Rectangle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TextboxType> _textbox;

        [System.Xml.Serialization.XmlElementAttribute("Textbox")]
        public System.Collections.Generic.List<TextboxType> Textbox
        {
            get
            {
                return this._textbox;
            }
            private set
            {
                this._textbox = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Textbox collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextboxSpecified
        {
            get
            {
                return (this.Textbox.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ImageType> _image;

        [System.Xml.Serialization.XmlElementAttribute("Image")]
        public System.Collections.Generic.List<ImageType> Image
        {
            get
            {
                return this._image;
            }
            private set
            {
                this._image = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Image collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageSpecified
        {
            get
            {
                return (this.Image.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SubreportType> _subreport;

        [System.Xml.Serialization.XmlElementAttribute("Subreport")]
        public System.Collections.Generic.List<SubreportType> Subreport
        {
            get
            {
                return this._subreport;
            }
            private set
            {
                this._subreport = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Subreport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubreportSpecified
        {
            get
            {
                return (this.Subreport.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartType> _chart;

        [System.Xml.Serialization.XmlElementAttribute("Chart")]
        public System.Collections.Generic.List<ChartType> Chart
        {
            get
            {
                return this._chart;
            }
            private set
            {
                this._chart = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Chart collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartSpecified
        {
            get
            {
                return (this.Chart.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugePanelType> _gaugePanel;

        [System.Xml.Serialization.XmlElementAttribute("GaugePanel")]
        public System.Collections.Generic.List<GaugePanelType> GaugePanel
        {
            get
            {
                return this._gaugePanel;
            }
            private set
            {
                this._gaugePanel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugePanel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugePanelSpecified
        {
            get
            {
                return (this.GaugePanel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapType> _map;

        [System.Xml.Serialization.XmlElementAttribute("Map")]
        public System.Collections.Generic.List<MapType> Map
        {
            get
            {
                return this._map;
            }
            private set
            {
                this._map = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Map collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSpecified
        {
            get
            {
                return (this.Map.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixType> _tablix;

        [System.Xml.Serialization.XmlElementAttribute("Tablix")]
        public System.Collections.Generic.List<TablixType> Tablix
        {
            get
            {
                return this._tablix;
            }
            private set
            {
                this._tablix = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Tablix collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixSpecified
        {
            get
            {
                return (this.Tablix.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomReportItemType> _customReportItem;

        [System.Xml.Serialization.XmlElementAttribute("CustomReportItem")]
        public System.Collections.Generic.List<CustomReportItemType> CustomReportItem
        {
            get
            {
                return this._customReportItem;
            }
            private set
            {
                this._customReportItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomReportItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomReportItemSpecified
        {
            get
            {
                return (this.CustomReportItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LineType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LineType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LineType" /> class.</para>
        /// </summary>
        public LineType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<LineTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LineTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<LineTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StyleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StyleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BorderType> _border;

        [System.Xml.Serialization.XmlElementAttribute("Border")]
        public System.Collections.Generic.List<BorderType> Border
        {
            get
            {
                return this._border;
            }
            private set
            {
                this._border = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Border collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BorderSpecified
        {
            get
            {
                return (this.Border.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StyleType" /> class.</para>
        /// </summary>
        public StyleType()
        {
            this._border = new System.Collections.Generic.List<BorderType>();
            this._topBorder = new System.Collections.Generic.List<BorderType>();
            this._bottomBorder = new System.Collections.Generic.List<BorderType>();
            this._leftBorder = new System.Collections.Generic.List<BorderType>();
            this._rightBorder = new System.Collections.Generic.List<BorderType>();
            this._backgroundColor = new System.Collections.Generic.List<string>();
            this._backgroundGradientType = new System.Collections.Generic.List<string>();
            this._backgroundGradientEndColor = new System.Collections.Generic.List<string>();
            this._backgroundHatchType = new System.Collections.Generic.List<string>();
            this._backgroundImage = new System.Collections.Generic.List<BackgroundImageType>();
            this._fontStyle = new System.Collections.Generic.List<string>();
            this._fontFamily = new System.Collections.Generic.List<string>();
            this._fontSize = new System.Collections.Generic.List<string>();
            this._fontWeight = new System.Collections.Generic.List<string>();
            this._format = new System.Collections.Generic.List<string>();
            this._textDecoration = new System.Collections.Generic.List<string>();
            this._textAlign = new System.Collections.Generic.List<string>();
            this._textEffect = new System.Collections.Generic.List<string>();
            this._verticalAlign = new System.Collections.Generic.List<string>();
            this._color = new System.Collections.Generic.List<string>();
            this._shadowColor = new System.Collections.Generic.List<string>();
            this._shadowOffset = new System.Collections.Generic.List<string>();
            this._paddingLeft = new System.Collections.Generic.List<string>();
            this._paddingRight = new System.Collections.Generic.List<string>();
            this._paddingTop = new System.Collections.Generic.List<string>();
            this._paddingBottom = new System.Collections.Generic.List<string>();
            this._lineHeight = new System.Collections.Generic.List<string>();
            this._direction = new System.Collections.Generic.List<string>();
            this._writingMode = new System.Collections.Generic.List<string>();
            this._language = new System.Collections.Generic.List<string>();
            this._unicodeBiDi = new System.Collections.Generic.List<string>();
            this._calendar = new System.Collections.Generic.List<string>();
            this._numeralLanguage = new System.Collections.Generic.List<string>();
            this._numeralVariant = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BorderType> _topBorder;

        [System.Xml.Serialization.XmlElementAttribute("TopBorder")]
        public System.Collections.Generic.List<BorderType> TopBorder
        {
            get
            {
                return this._topBorder;
            }
            private set
            {
                this._topBorder = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopBorder collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopBorderSpecified
        {
            get
            {
                return (this.TopBorder.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BorderType> _bottomBorder;

        [System.Xml.Serialization.XmlElementAttribute("BottomBorder")]
        public System.Collections.Generic.List<BorderType> BottomBorder
        {
            get
            {
                return this._bottomBorder;
            }
            private set
            {
                this._bottomBorder = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BottomBorder collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BottomBorderSpecified
        {
            get
            {
                return (this.BottomBorder.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BorderType> _leftBorder;

        [System.Xml.Serialization.XmlElementAttribute("LeftBorder")]
        public System.Collections.Generic.List<BorderType> LeftBorder
        {
            get
            {
                return this._leftBorder;
            }
            private set
            {
                this._leftBorder = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftBorder collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftBorderSpecified
        {
            get
            {
                return (this.LeftBorder.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BorderType> _rightBorder;

        [System.Xml.Serialization.XmlElementAttribute("RightBorder")]
        public System.Collections.Generic.List<BorderType> RightBorder
        {
            get
            {
                return this._rightBorder;
            }
            private set
            {
                this._rightBorder = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightBorder collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightBorderSpecified
        {
            get
            {
                return (this.RightBorder.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _backgroundColor;

        [System.Xml.Serialization.XmlElementAttribute("BackgroundColor")]
        public System.Collections.Generic.List<string> BackgroundColor
        {
            get
            {
                return this._backgroundColor;
            }
            private set
            {
                this._backgroundColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackgroundColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackgroundColorSpecified
        {
            get
            {
                return (this.BackgroundColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _backgroundGradientType;

        [System.Xml.Serialization.XmlElementAttribute("BackgroundGradientType")]
        public System.Collections.Generic.List<string> BackgroundGradientType
        {
            get
            {
                return this._backgroundGradientType;
            }
            private set
            {
                this._backgroundGradientType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackgroundGradientType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackgroundGradientTypeSpecified
        {
            get
            {
                return (this.BackgroundGradientType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _backgroundGradientEndColor;

        [System.Xml.Serialization.XmlElementAttribute("BackgroundGradientEndColor")]
        public System.Collections.Generic.List<string> BackgroundGradientEndColor
        {
            get
            {
                return this._backgroundGradientEndColor;
            }
            private set
            {
                this._backgroundGradientEndColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackgroundGradientEndColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackgroundGradientEndColorSpecified
        {
            get
            {
                return (this.BackgroundGradientEndColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _backgroundHatchType;

        [System.Xml.Serialization.XmlElementAttribute("BackgroundHatchType")]
        public System.Collections.Generic.List<string> BackgroundHatchType
        {
            get
            {
                return this._backgroundHatchType;
            }
            private set
            {
                this._backgroundHatchType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackgroundHatchType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackgroundHatchTypeSpecified
        {
            get
            {
                return (this.BackgroundHatchType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BackgroundImageType> _backgroundImage;

        [System.Xml.Serialization.XmlElementAttribute("BackgroundImage")]
        public System.Collections.Generic.List<BackgroundImageType> BackgroundImage
        {
            get
            {
                return this._backgroundImage;
            }
            private set
            {
                this._backgroundImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackgroundImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackgroundImageSpecified
        {
            get
            {
                return (this.BackgroundImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _fontStyle;

        [System.Xml.Serialization.XmlElementAttribute("FontStyle")]
        public System.Collections.Generic.List<string> FontStyle
        {
            get
            {
                return this._fontStyle;
            }
            private set
            {
                this._fontStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FontStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified
        {
            get
            {
                return (this.FontStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _fontFamily;

        [System.Xml.Serialization.XmlElementAttribute("FontFamily")]
        public System.Collections.Generic.List<string> FontFamily
        {
            get
            {
                return this._fontFamily;
            }
            private set
            {
                this._fontFamily = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FontFamily collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontFamilySpecified
        {
            get
            {
                return (this.FontFamily.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _fontSize;

        [System.Xml.Serialization.XmlElementAttribute("FontSize")]
        public System.Collections.Generic.List<string> FontSize
        {
            get
            {
                return this._fontSize;
            }
            private set
            {
                this._fontSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FontSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeSpecified
        {
            get
            {
                return (this.FontSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _fontWeight;

        [System.Xml.Serialization.XmlElementAttribute("FontWeight")]
        public System.Collections.Generic.List<string> FontWeight
        {
            get
            {
                return this._fontWeight;
            }
            private set
            {
                this._fontWeight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FontWeight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontWeightSpecified
        {
            get
            {
                return (this.FontWeight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _format;

        [System.Xml.Serialization.XmlElementAttribute("Format")]
        public System.Collections.Generic.List<string> Format
        {
            get
            {
                return this._format;
            }
            private set
            {
                this._format = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Format collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FormatSpecified
        {
            get
            {
                return (this.Format.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textDecoration;

        [System.Xml.Serialization.XmlElementAttribute("TextDecoration")]
        public System.Collections.Generic.List<string> TextDecoration
        {
            get
            {
                return this._textDecoration;
            }
            private set
            {
                this._textDecoration = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextDecoration collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextDecorationSpecified
        {
            get
            {
                return (this.TextDecoration.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textAlign;

        [System.Xml.Serialization.XmlElementAttribute("TextAlign")]
        public System.Collections.Generic.List<string> TextAlign
        {
            get
            {
                return this._textAlign;
            }
            private set
            {
                this._textAlign = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextAlign collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextAlignSpecified
        {
            get
            {
                return (this.TextAlign.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textEffect;

        [System.Xml.Serialization.XmlElementAttribute("TextEffect")]
        public System.Collections.Generic.List<string> TextEffect
        {
            get
            {
                return this._textEffect;
            }
            private set
            {
                this._textEffect = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextEffect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextEffectSpecified
        {
            get
            {
                return (this.TextEffect.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _verticalAlign;

        [System.Xml.Serialization.XmlElementAttribute("VerticalAlign")]
        public System.Collections.Generic.List<string> VerticalAlign
        {
            get
            {
                return this._verticalAlign;
            }
            private set
            {
                this._verticalAlign = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VerticalAlign collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VerticalAlignSpecified
        {
            get
            {
                return (this.VerticalAlign.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _color;

        [System.Xml.Serialization.XmlElementAttribute("Color")]
        public System.Collections.Generic.List<string> Color
        {
            get
            {
                return this._color;
            }
            private set
            {
                this._color = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Color collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColorSpecified
        {
            get
            {
                return (this.Color.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _shadowColor;

        [System.Xml.Serialization.XmlElementAttribute("ShadowColor")]
        public System.Collections.Generic.List<string> ShadowColor
        {
            get
            {
                return this._shadowColor;
            }
            private set
            {
                this._shadowColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShadowColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShadowColorSpecified
        {
            get
            {
                return (this.ShadowColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _shadowOffset;

        [System.Xml.Serialization.XmlElementAttribute("ShadowOffset")]
        public System.Collections.Generic.List<string> ShadowOffset
        {
            get
            {
                return this._shadowOffset;
            }
            private set
            {
                this._shadowOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShadowOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShadowOffsetSpecified
        {
            get
            {
                return (this.ShadowOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _paddingLeft;

        [System.Xml.Serialization.XmlElementAttribute("PaddingLeft")]
        public System.Collections.Generic.List<string> PaddingLeft
        {
            get
            {
                return this._paddingLeft;
            }
            private set
            {
                this._paddingLeft = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PaddingLeft collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaddingLeftSpecified
        {
            get
            {
                return (this.PaddingLeft.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _paddingRight;

        [System.Xml.Serialization.XmlElementAttribute("PaddingRight")]
        public System.Collections.Generic.List<string> PaddingRight
        {
            get
            {
                return this._paddingRight;
            }
            private set
            {
                this._paddingRight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PaddingRight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaddingRightSpecified
        {
            get
            {
                return (this.PaddingRight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _paddingTop;

        [System.Xml.Serialization.XmlElementAttribute("PaddingTop")]
        public System.Collections.Generic.List<string> PaddingTop
        {
            get
            {
                return this._paddingTop;
            }
            private set
            {
                this._paddingTop = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PaddingTop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaddingTopSpecified
        {
            get
            {
                return (this.PaddingTop.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _paddingBottom;

        [System.Xml.Serialization.XmlElementAttribute("PaddingBottom")]
        public System.Collections.Generic.List<string> PaddingBottom
        {
            get
            {
                return this._paddingBottom;
            }
            private set
            {
                this._paddingBottom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PaddingBottom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaddingBottomSpecified
        {
            get
            {
                return (this.PaddingBottom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _lineHeight;

        [System.Xml.Serialization.XmlElementAttribute("LineHeight")]
        public System.Collections.Generic.List<string> LineHeight
        {
            get
            {
                return this._lineHeight;
            }
            private set
            {
                this._lineHeight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LineHeight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LineHeightSpecified
        {
            get
            {
                return (this.LineHeight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _direction;

        [System.Xml.Serialization.XmlElementAttribute("Direction")]
        public System.Collections.Generic.List<string> Direction
        {
            get
            {
                return this._direction;
            }
            private set
            {
                this._direction = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Direction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectionSpecified
        {
            get
            {
                return (this.Direction.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _writingMode;

        [System.Xml.Serialization.XmlElementAttribute("WritingMode")]
        public System.Collections.Generic.List<string> WritingMode
        {
            get
            {
                return this._writingMode;
            }
            private set
            {
                this._writingMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WritingMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WritingModeSpecified
        {
            get
            {
                return (this.WritingMode.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _language;

        [System.Xml.Serialization.XmlElementAttribute("Language")]
        public System.Collections.Generic.List<string> Language
        {
            get
            {
                return this._language;
            }
            private set
            {
                this._language = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Language collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LanguageSpecified
        {
            get
            {
                return (this.Language.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _unicodeBiDi;

        [System.Xml.Serialization.XmlElementAttribute("UnicodeBiDi")]
        public System.Collections.Generic.List<string> UnicodeBiDi
        {
            get
            {
                return this._unicodeBiDi;
            }
            private set
            {
                this._unicodeBiDi = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UnicodeBiDi collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnicodeBiDiSpecified
        {
            get
            {
                return (this.UnicodeBiDi.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _calendar;

        [System.Xml.Serialization.XmlElementAttribute("Calendar")]
        public System.Collections.Generic.List<string> Calendar
        {
            get
            {
                return this._calendar;
            }
            private set
            {
                this._calendar = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Calendar collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalendarSpecified
        {
            get
            {
                return (this.Calendar.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _numeralLanguage;

        [System.Xml.Serialization.XmlElementAttribute("NumeralLanguage")]
        public System.Collections.Generic.List<string> NumeralLanguage
        {
            get
            {
                return this._numeralLanguage;
            }
            private set
            {
                this._numeralLanguage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NumeralLanguage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumeralLanguageSpecified
        {
            get
            {
                return (this.NumeralLanguage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _numeralVariant;

        [System.Xml.Serialization.XmlElementAttribute("NumeralVariant")]
        public System.Collections.Generic.List<string> NumeralVariant
        {
            get
            {
                return this._numeralVariant;
            }
            private set
            {
                this._numeralVariant = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NumeralVariant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumeralVariantSpecified
        {
            get
            {
                return (this.NumeralVariant.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BorderType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BorderType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _color;

        [System.Xml.Serialization.XmlElementAttribute("Color")]
        public System.Collections.Generic.List<string> Color
        {
            get
            {
                return this._color;
            }
            private set
            {
                this._color = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Color collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColorSpecified
        {
            get
            {
                return (this.Color.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BorderType" /> class.</para>
        /// </summary>
        public BorderType()
        {
            this._color = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<string> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BackgroundImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackgroundImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BackgroundImageTypeSource> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<BackgroundImageTypeSource> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BackgroundImageType" /> class.</para>
        /// </summary>
        public BackgroundImageType()
        {
            this._source = new System.Collections.Generic.List<BackgroundImageTypeSource>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._transparentColor = new System.Collections.Generic.List<string>();
            this._backgroundRepeat = new System.Collections.Generic.List<string>();
            this._position = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparentColor;

        [System.Xml.Serialization.XmlElementAttribute("TransparentColor")]
        public System.Collections.Generic.List<string> TransparentColor
        {
            get
            {
                return this._transparentColor;
            }
            private set
            {
                this._transparentColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransparentColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentColorSpecified
        {
            get
            {
                return (this.TransparentColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _backgroundRepeat;

        [System.Xml.Serialization.XmlElementAttribute("BackgroundRepeat")]
        public System.Collections.Generic.List<string> BackgroundRepeat
        {
            get
            {
                return this._backgroundRepeat;
            }
            private set
            {
                this._backgroundRepeat = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackgroundRepeat collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackgroundRepeatSpecified
        {
            get
            {
                return (this.BackgroundRepeat.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BackgroundImageTypeSource", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum BackgroundImageTypeSource
    {

        External,

        Embedded,

        Database,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ActionInfoType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActionInfoType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionsType> _actions;

        [System.Xml.Serialization.XmlElementAttribute("Actions")]
        public System.Collections.Generic.List<ActionsType> Actions
        {
            get
            {
                return this._actions;
            }
            private set
            {
                this._actions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Actions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionsSpecified
        {
            get
            {
                return (this.Actions.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ActionInfoType" /> class.</para>
        /// </summary>
        public ActionInfoType()
        {
            this._actions = new System.Collections.Generic.List<ActionsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ActionsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActionsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionType> _action;

        [System.Xml.Serialization.XmlElementAttribute("Action")]
        public System.Collections.Generic.List<ActionType> Action
        {
            get
            {
                return this._action;
            }
            private set
            {
                this._action = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Action collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionSpecified
        {
            get
            {
                return (this.Action.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ActionsType" /> class.</para>
        /// </summary>
        public ActionsType()
        {
            this._action = new System.Collections.Generic.List<ActionType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ActionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hyperlink;

        [System.Xml.Serialization.XmlElementAttribute("Hyperlink")]
        public System.Collections.Generic.List<string> Hyperlink
        {
            get
            {
                return this._hyperlink;
            }
            private set
            {
                this._hyperlink = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hyperlink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HyperlinkSpecified
        {
            get
            {
                return (this.Hyperlink.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ActionType" /> class.</para>
        /// </summary>
        public ActionType()
        {
            this._hyperlink = new System.Collections.Generic.List<string>();
            this._drillthrough = new System.Collections.Generic.List<DrillthroughType>();
            this._bookmarkLink = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DrillthroughType> _drillthrough;

        [System.Xml.Serialization.XmlElementAttribute("Drillthrough")]
        public System.Collections.Generic.List<DrillthroughType> Drillthrough
        {
            get
            {
                return this._drillthrough;
            }
            private set
            {
                this._drillthrough = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Drillthrough collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DrillthroughSpecified
        {
            get
            {
                return (this.Drillthrough.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmarkLink;

        [System.Xml.Serialization.XmlElementAttribute("BookmarkLink")]
        public System.Collections.Generic.List<string> BookmarkLink
        {
            get
            {
                return this._bookmarkLink;
            }
            private set
            {
                this._bookmarkLink = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BookmarkLink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkLinkSpecified
        {
            get
            {
                return (this.BookmarkLink.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DrillthroughType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrillthroughType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _reportName;

        [System.Xml.Serialization.XmlElementAttribute("ReportName")]
        public System.Collections.Generic.List<string> ReportName
        {
            get
            {
                return this._reportName;
            }
            private set
            {
                this._reportName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReportName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportNameSpecified
        {
            get
            {
                return (this.ReportName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DrillthroughType" /> class.</para>
        /// </summary>
        public DrillthroughType()
        {
            this._reportName = new System.Collections.Generic.List<string>();
            this._parameters = new System.Collections.Generic.List<ParametersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ParametersType> _parameters;

        [System.Xml.Serialization.XmlElementAttribute("Parameters")]
        public System.Collections.Generic.List<ParametersType> Parameters
        {
            get
            {
                return this._parameters;
            }
            private set
            {
                this._parameters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Parameters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParametersSpecified
        {
            get
            {
                return (this.Parameters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParametersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParametersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ParameterType> _parameter;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Parameter")]
        public System.Collections.Generic.List<ParameterType> Parameter
        {
            get
            {
                return this._parameter;
            }
            private set
            {
                this._parameter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParametersType" /> class.</para>
        /// </summary>
        public ParametersType()
        {
            this._parameter = new System.Collections.Generic.List<ParameterType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParameterType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParameterType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParameterType" /> class.</para>
        /// </summary>
        public ParameterType()
        {
            this._value = new System.Collections.Generic.List<string>();
            this._omit = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _omit;

        [System.Xml.Serialization.XmlElementAttribute("Omit")]
        public System.Collections.Generic.List<string> Omit
        {
            get
            {
                return this._omit;
            }
            private set
            {
                this._omit = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Omit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OmitSpecified
        {
            get
            {
                return (this.Omit.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VisibilityType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VisibilityType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VisibilityType" /> class.</para>
        /// </summary>
        public VisibilityType()
        {
            this._hidden = new System.Collections.Generic.List<string>();
            this._toggleItem = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toggleItem;

        [System.Xml.Serialization.XmlElementAttribute("ToggleItem")]
        public System.Collections.Generic.List<string> ToggleItem
        {
            get
            {
                return this._toggleItem;
            }
            private set
            {
                this._toggleItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToggleItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToggleItemSpecified
        {
            get
            {
                return (this.ToggleItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StringLocIDType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StringLocIDType
    {

        /// <summary>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CustomPropertiesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomPropertiesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertyType> _customProperty;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("CustomProperty")]
        public System.Collections.Generic.List<CustomPropertyType> CustomProperty
        {
            get
            {
                return this._customProperty;
            }
            private set
            {
                this._customProperty = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CustomPropertiesType" /> class.</para>
        /// </summary>
        public CustomPropertiesType()
        {
            this._customProperty = new System.Collections.Generic.List<CustomPropertyType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CustomPropertyType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomPropertyType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _name;

        [System.Xml.Serialization.XmlElementAttribute("Name")]
        public System.Collections.Generic.List<string> Name
        {
            get
            {
                return this._name;
            }
            private set
            {
                this._name = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified
        {
            get
            {
                return (this.Name.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CustomPropertyType" /> class.</para>
        /// </summary>
        public CustomPropertyType()
        {
            this._name = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LineTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum LineTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RectangleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RectangleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RectangleType" /> class.</para>
        /// </summary>
        public RectangleType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._linkToChild = new System.Collections.Generic.List<string>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._reportItems = new System.Collections.Generic.List<ReportItemsType>();
            this._pageBreak = new System.Collections.Generic.List<PageBreakType>();
            this._pageName = new System.Collections.Generic.List<string>();
            this._keepTogether = new System.Collections.Generic.List<bool>();
            this._omitBorderOnPageBreak = new System.Collections.Generic.List<bool>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<RectangleTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _linkToChild;

        [System.Xml.Serialization.XmlElementAttribute("LinkToChild")]
        public System.Collections.Generic.List<string> LinkToChild
        {
            get
            {
                return this._linkToChild;
            }
            private set
            {
                this._linkToChild = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LinkToChild collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinkToChildSpecified
        {
            get
            {
                return (this.LinkToChild.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportItemsType> _reportItems;

        [System.Xml.Serialization.XmlElementAttribute("ReportItems")]
        public System.Collections.Generic.List<ReportItemsType> ReportItems
        {
            get
            {
                return this._reportItems;
            }
            private set
            {
                this._reportItems = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReportItems collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportItemsSpecified
        {
            get
            {
                return (this.ReportItems.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageBreakType> _pageBreak;

        [System.Xml.Serialization.XmlElementAttribute("PageBreak")]
        public System.Collections.Generic.List<PageBreakType> PageBreak
        {
            get
            {
                return this._pageBreak;
            }
            private set
            {
                this._pageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageBreakSpecified
        {
            get
            {
                return (this.PageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pageName;

        [System.Xml.Serialization.XmlElementAttribute("PageName")]
        public System.Collections.Generic.List<string> PageName
        {
            get
            {
                return this._pageName;
            }
            private set
            {
                this._pageName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageNameSpecified
        {
            get
            {
                return (this.PageName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _keepTogether;

        [System.Xml.Serialization.XmlElementAttribute("KeepTogether")]
        public System.Collections.Generic.List<bool> KeepTogether
        {
            get
            {
                return this._keepTogether;
            }
            private set
            {
                this._keepTogether = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KeepTogether collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepTogetherSpecified
        {
            get
            {
                return (this.KeepTogether.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _omitBorderOnPageBreak;

        [System.Xml.Serialization.XmlElementAttribute("OmitBorderOnPageBreak")]
        public System.Collections.Generic.List<bool> OmitBorderOnPageBreak
        {
            get
            {
                return this._omitBorderOnPageBreak;
            }
            private set
            {
                this._omitBorderOnPageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OmitBorderOnPageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OmitBorderOnPageBreakSpecified
        {
            get
            {
                return (this.OmitBorderOnPageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RectangleTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<RectangleTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PageBreakType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PageBreakType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _disabled;

        [System.Xml.Serialization.XmlElementAttribute("Disabled")]
        public System.Collections.Generic.List<string> Disabled
        {
            get
            {
                return this._disabled;
            }
            private set
            {
                this._disabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Disabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledSpecified
        {
            get
            {
                return (this.Disabled.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PageBreakType" /> class.</para>
        /// </summary>
        public PageBreakType()
        {
            this._disabled = new System.Collections.Generic.List<string>();
            this._resetPageNumber = new System.Collections.Generic.List<string>();
            this._breakLocation = new System.Collections.Generic.List<PageBreakTypeBreakLocation>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _resetPageNumber;

        [System.Xml.Serialization.XmlElementAttribute("ResetPageNumber")]
        public System.Collections.Generic.List<string> ResetPageNumber
        {
            get
            {
                return this._resetPageNumber;
            }
            private set
            {
                this._resetPageNumber = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ResetPageNumber collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResetPageNumberSpecified
        {
            get
            {
                return (this.ResetPageNumber.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageBreakTypeBreakLocation> _breakLocation;

        [System.Xml.Serialization.XmlElementAttribute("BreakLocation")]
        public System.Collections.Generic.List<PageBreakTypeBreakLocation> BreakLocation
        {
            get
            {
                return this._breakLocation;
            }
            private set
            {
                this._breakLocation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BreakLocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BreakLocationSpecified
        {
            get
            {
                return (this.BreakLocation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PageBreakTypeBreakLocation", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum PageBreakTypeBreakLocation
    {

        None,

        Start,

        End,

        StartAndEnd,

        Between,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RectangleTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum RectangleTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TextboxType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TextboxType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TextboxType" /> class.</para>
        /// </summary>
        public TextboxType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._paragraphs = new System.Collections.Generic.List<ParagraphsType>();
            this._canGrow = new System.Collections.Generic.List<bool>();
            this._canShrink = new System.Collections.Generic.List<bool>();
            this._hideDuplicates = new System.Collections.Generic.List<string>();
            this._toggleImage = new System.Collections.Generic.List<ToggleImageType>();
            this._userSort = new System.Collections.Generic.List<UserSortType>();
            this._keepTogether = new System.Collections.Generic.List<bool>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<TextboxTypeDataElementOutput>();
            this._dataElementStyle = new System.Collections.Generic.List<TextboxTypeDataElementStyle>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ParagraphsType> _paragraphs;

        [System.Xml.Serialization.XmlElementAttribute("Paragraphs")]
        public System.Collections.Generic.List<ParagraphsType> Paragraphs
        {
            get
            {
                return this._paragraphs;
            }
            private set
            {
                this._paragraphs = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Paragraphs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParagraphsSpecified
        {
            get
            {
                return (this.Paragraphs.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _canGrow;

        [System.Xml.Serialization.XmlElementAttribute("CanGrow")]
        public System.Collections.Generic.List<bool> CanGrow
        {
            get
            {
                return this._canGrow;
            }
            private set
            {
                this._canGrow = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CanGrow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CanGrowSpecified
        {
            get
            {
                return (this.CanGrow.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _canShrink;

        [System.Xml.Serialization.XmlElementAttribute("CanShrink")]
        public System.Collections.Generic.List<bool> CanShrink
        {
            get
            {
                return this._canShrink;
            }
            private set
            {
                this._canShrink = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CanShrink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CanShrinkSpecified
        {
            get
            {
                return (this.CanShrink.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hideDuplicates;

        [System.Xml.Serialization.XmlElementAttribute("HideDuplicates")]
        public System.Collections.Generic.List<string> HideDuplicates
        {
            get
            {
                return this._hideDuplicates;
            }
            private set
            {
                this._hideDuplicates = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HideDuplicates collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideDuplicatesSpecified
        {
            get
            {
                return (this.HideDuplicates.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ToggleImageType> _toggleImage;

        [System.Xml.Serialization.XmlElementAttribute("ToggleImage")]
        public System.Collections.Generic.List<ToggleImageType> ToggleImage
        {
            get
            {
                return this._toggleImage;
            }
            private set
            {
                this._toggleImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToggleImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToggleImageSpecified
        {
            get
            {
                return (this.ToggleImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<UserSortType> _userSort;

        [System.Xml.Serialization.XmlElementAttribute("UserSort")]
        public System.Collections.Generic.List<UserSortType> UserSort
        {
            get
            {
                return this._userSort;
            }
            private set
            {
                this._userSort = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UserSort collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserSortSpecified
        {
            get
            {
                return (this.UserSort.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _keepTogether;

        [System.Xml.Serialization.XmlElementAttribute("KeepTogether")]
        public System.Collections.Generic.List<bool> KeepTogether
        {
            get
            {
                return this._keepTogether;
            }
            private set
            {
                this._keepTogether = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KeepTogether collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepTogetherSpecified
        {
            get
            {
                return (this.KeepTogether.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TextboxTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<TextboxTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TextboxTypeDataElementStyle> _dataElementStyle;

        [System.Xml.Serialization.XmlElementAttribute("DataElementStyle")]
        public System.Collections.Generic.List<TextboxTypeDataElementStyle> DataElementStyle
        {
            get
            {
                return this._dataElementStyle;
            }
            private set
            {
                this._dataElementStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementStyleSpecified
        {
            get
            {
                return (this.DataElementStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParagraphsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParagraphsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ParagraphType> _paragraph;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Paragraph")]
        public System.Collections.Generic.List<ParagraphType> Paragraph
        {
            get
            {
                return this._paragraph;
            }
            private set
            {
                this._paragraph = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParagraphsType" /> class.</para>
        /// </summary>
        public ParagraphsType()
        {
            this._paragraph = new System.Collections.Generic.List<ParagraphType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParagraphType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParagraphType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParagraphType" /> class.</para>
        /// </summary>
        public ParagraphType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._textRuns = new System.Collections.Generic.List<TextRunsType>();
            this._leftIndent = new System.Collections.Generic.List<string>();
            this._rightIndent = new System.Collections.Generic.List<string>();
            this._hangingIndent = new System.Collections.Generic.List<string>();
            this._listStyle = new System.Collections.Generic.List<ParagraphTypeListStyle>();
            this._listLevel = new System.Collections.Generic.List<uint>();
            this._spaceBefore = new System.Collections.Generic.List<string>();
            this._spaceAfter = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TextRunsType> _textRuns;

        [System.Xml.Serialization.XmlElementAttribute("TextRuns")]
        public System.Collections.Generic.List<TextRunsType> TextRuns
        {
            get
            {
                return this._textRuns;
            }
            private set
            {
                this._textRuns = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextRuns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextRunsSpecified
        {
            get
            {
                return (this.TextRuns.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _leftIndent;

        [System.Xml.Serialization.XmlElementAttribute("LeftIndent")]
        public System.Collections.Generic.List<string> LeftIndent
        {
            get
            {
                return this._leftIndent;
            }
            private set
            {
                this._leftIndent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftIndent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftIndentSpecified
        {
            get
            {
                return (this.LeftIndent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rightIndent;

        [System.Xml.Serialization.XmlElementAttribute("RightIndent")]
        public System.Collections.Generic.List<string> RightIndent
        {
            get
            {
                return this._rightIndent;
            }
            private set
            {
                this._rightIndent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightIndent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightIndentSpecified
        {
            get
            {
                return (this.RightIndent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hangingIndent;

        [System.Xml.Serialization.XmlElementAttribute("HangingIndent")]
        public System.Collections.Generic.List<string> HangingIndent
        {
            get
            {
                return this._hangingIndent;
            }
            private set
            {
                this._hangingIndent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HangingIndent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HangingIndentSpecified
        {
            get
            {
                return (this.HangingIndent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ParagraphTypeListStyle> _listStyle;

        [System.Xml.Serialization.XmlElementAttribute("ListStyle")]
        public System.Collections.Generic.List<ParagraphTypeListStyle> ListStyle
        {
            get
            {
                return this._listStyle;
            }
            private set
            {
                this._listStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ListStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListStyleSpecified
        {
            get
            {
                return (this.ListStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _listLevel;

        [System.Xml.Serialization.XmlElementAttribute("ListLevel")]
        public System.Collections.Generic.List<uint> ListLevel
        {
            get
            {
                return this._listLevel;
            }
            private set
            {
                this._listLevel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ListLevel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListLevelSpecified
        {
            get
            {
                return (this.ListLevel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _spaceBefore;

        [System.Xml.Serialization.XmlElementAttribute("SpaceBefore")]
        public System.Collections.Generic.List<string> SpaceBefore
        {
            get
            {
                return this._spaceBefore;
            }
            private set
            {
                this._spaceBefore = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SpaceBefore collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpaceBeforeSpecified
        {
            get
            {
                return (this.SpaceBefore.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _spaceAfter;

        [System.Xml.Serialization.XmlElementAttribute("SpaceAfter")]
        public System.Collections.Generic.List<string> SpaceAfter
        {
            get
            {
                return this._spaceAfter;
            }
            private set
            {
                this._spaceAfter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SpaceAfter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpaceAfterSpecified
        {
            get
            {
                return (this.SpaceAfter.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TextRunsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TextRunsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TextRunType> _textRun;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("TextRun")]
        public System.Collections.Generic.List<TextRunType> TextRun
        {
            get
            {
                return this._textRun;
            }
            private set
            {
                this._textRun = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TextRunsType" /> class.</para>
        /// </summary>
        public TextRunsType()
        {
            this._textRun = new System.Collections.Generic.List<TextRunType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TextRunType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TextRunType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TextRunType" /> class.</para>
        /// </summary>
        public TextRunType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._value = new System.Collections.Generic.List<LocIDStringWithDataTypeAttribute>();
            this._label = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._markupType = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LocIDStringWithDataTypeAttribute> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<LocIDStringWithDataTypeAttribute> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _label;

        [System.Xml.Serialization.XmlElementAttribute("Label")]
        public System.Collections.Generic.List<string> Label
        {
            get
            {
                return this._label;
            }
            private set
            {
                this._label = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Label collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelSpecified
        {
            get
            {
                return (this.Label.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _markupType;

        [System.Xml.Serialization.XmlElementAttribute("MarkupType")]
        public System.Collections.Generic.List<string> MarkupType
        {
            get
            {
                return this._markupType;
            }
            private set
            {
                this._markupType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MarkupType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkupTypeSpecified
        {
            get
            {
                return (this.MarkupType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LocIDStringWithDataTypeAttribute", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocIDStringWithDataTypeAttribute : StringWithDataTypeAttribute
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private EvaluationModeType _evaluationMode = Snork.Model.Rdl2016.EvaluationModeType.Auto;

        [System.ComponentModel.DefaultValueAttribute(Snork.Model.Rdl2016.EvaluationModeType.Auto)]
        [System.Xml.Serialization.XmlAttributeAttribute("EvaluationMode")]
        public EvaluationModeType EvaluationMode
        {
            get
            {
                return this._evaluationMode;
            }
            set
            {
                this._evaluationMode = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StringWithDataTypeAttribute", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LocIDStringWithDataTypeAttribute))]
    public partial class StringWithDataTypeAttribute
    {

        /// <summary>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value { get; set; }

        [System.Xml.Serialization.XmlAttributeAttribute("DataType")]
        public StringWithDataTypeAttributeDataType DataType { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataTypeSpecified { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StringWithDataTypeAttributeDataType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum StringWithDataTypeAttributeDataType
    {

        Boolean,

        DateTime,

        Integer,

        Float,

        String,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EvaluationModeType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    public enum EvaluationModeType
    {

        Auto,

        Constant,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParagraphTypeListStyle", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ParagraphTypeListStyle
    {

        None,

        Bulleted,

        Numbered,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ToggleImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ToggleImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _initialState;

        [System.Xml.Serialization.XmlElementAttribute("InitialState")]
        public System.Collections.Generic.List<string> InitialState
        {
            get
            {
                return this._initialState;
            }
            private set
            {
                this._initialState = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InitialState collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InitialStateSpecified
        {
            get
            {
                return (this.InitialState.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ToggleImageType" /> class.</para>
        /// </summary>
        public ToggleImageType()
        {
            this._initialState = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UserSortType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserSortType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _sortExpression;

        [System.Xml.Serialization.XmlElementAttribute("SortExpression")]
        public System.Collections.Generic.List<string> SortExpression
        {
            get
            {
                return this._sortExpression;
            }
            private set
            {
                this._sortExpression = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpression collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionSpecified
        {
            get
            {
                return (this.SortExpression.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UserSortType" /> class.</para>
        /// </summary>
        public UserSortType()
        {
            this._sortExpression = new System.Collections.Generic.List<string>();
            this._sortExpressionScope = new System.Collections.Generic.List<string>();
            this._sortTarget = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _sortExpressionScope;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressionScope")]
        public System.Collections.Generic.List<string> SortExpressionScope
        {
            get
            {
                return this._sortExpressionScope;
            }
            private set
            {
                this._sortExpressionScope = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressionScope collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionScopeSpecified
        {
            get
            {
                return (this.SortExpressionScope.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _sortTarget;

        [System.Xml.Serialization.XmlElementAttribute("SortTarget")]
        public System.Collections.Generic.List<string> SortTarget
        {
            get
            {
                return this._sortTarget;
            }
            private set
            {
                this._sortTarget = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortTarget collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortTargetSpecified
        {
            get
            {
                return (this.SortTarget.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TextboxTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum TextboxTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TextboxTypeDataElementStyle", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum TextboxTypeDataElementStyle
    {

        Auto,

        Attribute,

        Element,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ImageType" /> class.</para>
        /// </summary>
        public ImageType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._source = new System.Collections.Generic.List<ImageTypeSource>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._sizing = new System.Collections.Generic.List<ImageTypeSizing>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<ImageTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ImageTypeSource> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<ImageTypeSource> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ImageTypeSizing> _sizing;

        [System.Xml.Serialization.XmlElementAttribute("Sizing")]
        public System.Collections.Generic.List<ImageTypeSizing> Sizing
        {
            get
            {
                return this._sizing;
            }
            private set
            {
                this._sizing = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Sizing collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizingSpecified
        {
            get
            {
                return (this.Sizing.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ImageTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<ImageTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ImageTypeSource", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ImageTypeSource
    {

        External,

        Embedded,

        Database,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ImageTypeSizing", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ImageTypeSizing
    {

        AutoSize,

        Fit,

        FitProportional,

        Clip,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ImageTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ImageTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SubreportType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubreportType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SubreportType" /> class.</para>
        /// </summary>
        public SubreportType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._reportName = new System.Collections.Generic.List<string>();
            this._parameters = new System.Collections.Generic.List<ParametersType>();
            this._noRowsMessage = new System.Collections.Generic.List<string>();
            this._mergeTransactions = new System.Collections.Generic.List<bool>();
            this._keepTogether = new System.Collections.Generic.List<bool>();
            this._omitBorderOnPageBreak = new System.Collections.Generic.List<bool>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<SubreportTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _reportName;

        [System.Xml.Serialization.XmlElementAttribute("ReportName")]
        public System.Collections.Generic.List<string> ReportName
        {
            get
            {
                return this._reportName;
            }
            private set
            {
                this._reportName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReportName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportNameSpecified
        {
            get
            {
                return (this.ReportName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ParametersType> _parameters;

        [System.Xml.Serialization.XmlElementAttribute("Parameters")]
        public System.Collections.Generic.List<ParametersType> Parameters
        {
            get
            {
                return this._parameters;
            }
            private set
            {
                this._parameters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Parameters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParametersSpecified
        {
            get
            {
                return (this.Parameters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _noRowsMessage;

        [System.Xml.Serialization.XmlElementAttribute("NoRowsMessage")]
        public System.Collections.Generic.List<string> NoRowsMessage
        {
            get
            {
                return this._noRowsMessage;
            }
            private set
            {
                this._noRowsMessage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NoRowsMessage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoRowsMessageSpecified
        {
            get
            {
                return (this.NoRowsMessage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _mergeTransactions;

        [System.Xml.Serialization.XmlElementAttribute("MergeTransactions")]
        public System.Collections.Generic.List<bool> MergeTransactions
        {
            get
            {
                return this._mergeTransactions;
            }
            private set
            {
                this._mergeTransactions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MergeTransactions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MergeTransactionsSpecified
        {
            get
            {
                return (this.MergeTransactions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _keepTogether;

        [System.Xml.Serialization.XmlElementAttribute("KeepTogether")]
        public System.Collections.Generic.List<bool> KeepTogether
        {
            get
            {
                return this._keepTogether;
            }
            private set
            {
                this._keepTogether = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KeepTogether collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepTogetherSpecified
        {
            get
            {
                return (this.KeepTogether.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _omitBorderOnPageBreak;

        [System.Xml.Serialization.XmlElementAttribute("OmitBorderOnPageBreak")]
        public System.Collections.Generic.List<bool> OmitBorderOnPageBreak
        {
            get
            {
                return this._omitBorderOnPageBreak;
            }
            private set
            {
                this._omitBorderOnPageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OmitBorderOnPageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OmitBorderOnPageBreakSpecified
        {
            get
            {
                return (this.OmitBorderOnPageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SubreportTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<SubreportTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SubreportTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum SubreportTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartType" /> class.</para>
        /// </summary>
        public ChartType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._sortExpressions = new System.Collections.Generic.List<SortExpressionsType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._noRowsMessage = new System.Collections.Generic.List<string>();
            this._dataSetName = new System.Collections.Generic.List<string>();
            this._pageBreak = new System.Collections.Generic.List<PageBreakType>();
            this._pageName = new System.Collections.Generic.List<string>();
            this._filters = new System.Collections.Generic.List<FiltersType>();
            this._chartSeriesHierarchy = new System.Collections.Generic.List<ChartHierarchyType>();
            this._chartCategoryHierarchy = new System.Collections.Generic.List<ChartHierarchyType>();
            this._chartData = new System.Collections.Generic.List<ChartDataType>();
            this._chartAreas = new System.Collections.Generic.List<ChartAreasType>();
            this._chartLegends = new System.Collections.Generic.List<ChartLegendsType>();
            this._chartTitles = new System.Collections.Generic.List<ChartTitlesType>();
            this._dynamicHeight = new System.Collections.Generic.List<string>();
            this._dynamicWidth = new System.Collections.Generic.List<string>();
            this._palette = new System.Collections.Generic.List<string>();
            this._chartCustomPaletteColors = new System.Collections.Generic.List<ChartCustomPaletteColorsType>();
            this._paletteHatchBehavior = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<ChartTypeDataElementOutput>();
            this._chartBorderSkin = new System.Collections.Generic.List<ChartBorderSkinType>();
            this._chartNoDataMessage = new System.Collections.Generic.List<ChartTitleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionsType> _sortExpressions;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressions")]
        public System.Collections.Generic.List<SortExpressionsType> SortExpressions
        {
            get
            {
                return this._sortExpressions;
            }
            private set
            {
                this._sortExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionsSpecified
        {
            get
            {
                return (this.SortExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _noRowsMessage;

        [System.Xml.Serialization.XmlElementAttribute("NoRowsMessage")]
        public System.Collections.Generic.List<string> NoRowsMessage
        {
            get
            {
                return this._noRowsMessage;
            }
            private set
            {
                this._noRowsMessage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NoRowsMessage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoRowsMessageSpecified
        {
            get
            {
                return (this.NoRowsMessage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSetName;

        [System.Xml.Serialization.XmlElementAttribute("DataSetName")]
        public System.Collections.Generic.List<string> DataSetName
        {
            get
            {
                return this._dataSetName;
            }
            private set
            {
                this._dataSetName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetNameSpecified
        {
            get
            {
                return (this.DataSetName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageBreakType> _pageBreak;

        [System.Xml.Serialization.XmlElementAttribute("PageBreak")]
        public System.Collections.Generic.List<PageBreakType> PageBreak
        {
            get
            {
                return this._pageBreak;
            }
            private set
            {
                this._pageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageBreakSpecified
        {
            get
            {
                return (this.PageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pageName;

        [System.Xml.Serialization.XmlElementAttribute("PageName")]
        public System.Collections.Generic.List<string> PageName
        {
            get
            {
                return this._pageName;
            }
            private set
            {
                this._pageName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageNameSpecified
        {
            get
            {
                return (this.PageName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FiltersType> _filters;

        [System.Xml.Serialization.XmlElementAttribute("Filters")]
        public System.Collections.Generic.List<FiltersType> Filters
        {
            get
            {
                return this._filters;
            }
            private set
            {
                this._filters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartHierarchyType> _chartSeriesHierarchy;

        [System.Xml.Serialization.XmlElementAttribute("ChartSeriesHierarchy")]
        public System.Collections.Generic.List<ChartHierarchyType> ChartSeriesHierarchy
        {
            get
            {
                return this._chartSeriesHierarchy;
            }
            private set
            {
                this._chartSeriesHierarchy = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartSeriesHierarchy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartSeriesHierarchySpecified
        {
            get
            {
                return (this.ChartSeriesHierarchy.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartHierarchyType> _chartCategoryHierarchy;

        [System.Xml.Serialization.XmlElementAttribute("ChartCategoryHierarchy")]
        public System.Collections.Generic.List<ChartHierarchyType> ChartCategoryHierarchy
        {
            get
            {
                return this._chartCategoryHierarchy;
            }
            private set
            {
                this._chartCategoryHierarchy = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartCategoryHierarchy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartCategoryHierarchySpecified
        {
            get
            {
                return (this.ChartCategoryHierarchy.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDataType> _chartData;

        [System.Xml.Serialization.XmlElementAttribute("ChartData")]
        public System.Collections.Generic.List<ChartDataType> ChartData
        {
            get
            {
                return this._chartData;
            }
            private set
            {
                this._chartData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartDataSpecified
        {
            get
            {
                return (this.ChartData.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartAreasType> _chartAreas;

        [System.Xml.Serialization.XmlElementAttribute("ChartAreas")]
        public System.Collections.Generic.List<ChartAreasType> ChartAreas
        {
            get
            {
                return this._chartAreas;
            }
            private set
            {
                this._chartAreas = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartAreas collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartAreasSpecified
        {
            get
            {
                return (this.ChartAreas.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendsType> _chartLegends;

        [System.Xml.Serialization.XmlElementAttribute("ChartLegends")]
        public System.Collections.Generic.List<ChartLegendsType> ChartLegends
        {
            get
            {
                return this._chartLegends;
            }
            private set
            {
                this._chartLegends = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartLegends collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartLegendsSpecified
        {
            get
            {
                return (this.ChartLegends.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartTitlesType> _chartTitles;

        [System.Xml.Serialization.XmlElementAttribute("ChartTitles")]
        public System.Collections.Generic.List<ChartTitlesType> ChartTitles
        {
            get
            {
                return this._chartTitles;
            }
            private set
            {
                this._chartTitles = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartTitles collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartTitlesSpecified
        {
            get
            {
                return (this.ChartTitles.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dynamicHeight;

        [System.Xml.Serialization.XmlElementAttribute("DynamicHeight")]
        public System.Collections.Generic.List<string> DynamicHeight
        {
            get
            {
                return this._dynamicHeight;
            }
            private set
            {
                this._dynamicHeight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DynamicHeight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DynamicHeightSpecified
        {
            get
            {
                return (this.DynamicHeight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dynamicWidth;

        [System.Xml.Serialization.XmlElementAttribute("DynamicWidth")]
        public System.Collections.Generic.List<string> DynamicWidth
        {
            get
            {
                return this._dynamicWidth;
            }
            private set
            {
                this._dynamicWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DynamicWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DynamicWidthSpecified
        {
            get
            {
                return (this.DynamicWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _palette;

        [System.Xml.Serialization.XmlElementAttribute("Palette")]
        public System.Collections.Generic.List<string> Palette
        {
            get
            {
                return this._palette;
            }
            private set
            {
                this._palette = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Palette collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaletteSpecified
        {
            get
            {
                return (this.Palette.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartCustomPaletteColorsType> _chartCustomPaletteColors;

        [System.Xml.Serialization.XmlElementAttribute("ChartCustomPaletteColors")]
        public System.Collections.Generic.List<ChartCustomPaletteColorsType> ChartCustomPaletteColors
        {
            get
            {
                return this._chartCustomPaletteColors;
            }
            private set
            {
                this._chartCustomPaletteColors = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartCustomPaletteColors collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartCustomPaletteColorsSpecified
        {
            get
            {
                return (this.ChartCustomPaletteColors.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _paletteHatchBehavior;

        [System.Xml.Serialization.XmlElementAttribute("PaletteHatchBehavior")]
        public System.Collections.Generic.List<string> PaletteHatchBehavior
        {
            get
            {
                return this._paletteHatchBehavior;
            }
            private set
            {
                this._paletteHatchBehavior = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PaletteHatchBehavior collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaletteHatchBehaviorSpecified
        {
            get
            {
                return (this.PaletteHatchBehavior.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<ChartTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartBorderSkinType> _chartBorderSkin;

        [System.Xml.Serialization.XmlElementAttribute("ChartBorderSkin")]
        public System.Collections.Generic.List<ChartBorderSkinType> ChartBorderSkin
        {
            get
            {
                return this._chartBorderSkin;
            }
            private set
            {
                this._chartBorderSkin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartBorderSkin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartBorderSkinSpecified
        {
            get
            {
                return (this.ChartBorderSkin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartTitleType> _chartNoDataMessage;

        [System.Xml.Serialization.XmlElementAttribute("ChartNoDataMessage")]
        public System.Collections.Generic.List<ChartTitleType> ChartNoDataMessage
        {
            get
            {
                return this._chartNoDataMessage;
            }
            private set
            {
                this._chartNoDataMessage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartNoDataMessage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartNoDataMessageSpecified
        {
            get
            {
                return (this.ChartNoDataMessage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SortExpressionsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SortExpressionsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionType> _sortExpression;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("SortExpression")]
        public System.Collections.Generic.List<SortExpressionType> SortExpression
        {
            get
            {
                return this._sortExpression;
            }
            private set
            {
                this._sortExpression = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SortExpressionsType" /> class.</para>
        /// </summary>
        public SortExpressionsType()
        {
            this._sortExpression = new System.Collections.Generic.List<SortExpressionType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SortExpressionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SortExpressionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SortExpressionType" /> class.</para>
        /// </summary>
        public SortExpressionType()
        {
            this._value = new System.Collections.Generic.List<string>();
            this._direction = new System.Collections.Generic.List<SortExpressionTypeDirection>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionTypeDirection> _direction;

        [System.Xml.Serialization.XmlElementAttribute("Direction")]
        public System.Collections.Generic.List<SortExpressionTypeDirection> Direction
        {
            get
            {
                return this._direction;
            }
            private set
            {
                this._direction = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Direction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectionSpecified
        {
            get
            {
                return (this.Direction.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SortExpressionTypeDirection", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum SortExpressionTypeDirection
    {

        Ascending,

        Descending,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FiltersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FiltersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FilterType> _filter;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Filter")]
        public System.Collections.Generic.List<FilterType> Filter
        {
            get
            {
                return this._filter;
            }
            private set
            {
                this._filter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FiltersType" /> class.</para>
        /// </summary>
        public FiltersType()
        {
            this._filter = new System.Collections.Generic.List<FilterType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FilterType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _filterExpression;

        [System.Xml.Serialization.XmlElementAttribute("FilterExpression")]
        public System.Collections.Generic.List<string> FilterExpression
        {
            get
            {
                return this._filterExpression;
            }
            private set
            {
                this._filterExpression = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FilterExpression collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilterExpressionSpecified
        {
            get
            {
                return (this.FilterExpression.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FilterType" /> class.</para>
        /// </summary>
        public FilterType()
        {
            this._filterExpression = new System.Collections.Generic.List<string>();
            this._operator = new System.Collections.Generic.List<FilterTypeOperator>();
            this._filterValues = new System.Collections.Generic.List<FilterValuesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FilterTypeOperator> _operator;

        [System.Xml.Serialization.XmlElementAttribute("Operator")]
        public System.Collections.Generic.List<FilterTypeOperator> Operator
        {
            get
            {
                return this._operator;
            }
            private set
            {
                this._operator = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Operator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperatorSpecified
        {
            get
            {
                return (this.Operator.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FilterValuesType> _filterValues;

        [System.Xml.Serialization.XmlElementAttribute("FilterValues")]
        public System.Collections.Generic.List<FilterValuesType> FilterValues
        {
            get
            {
                return this._filterValues;
            }
            private set
            {
                this._filterValues = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FilterValues collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilterValuesSpecified
        {
            get
            {
                return (this.FilterValues.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FilterTypeOperator", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum FilterTypeOperator
    {

        Equal,

        Like,

        NotEqual,

        GreaterThan,

        GreaterThanOrEqual,

        LessThan,

        LessThanOrEqual,

        TopN,

        BottomN,

        TopPercent,

        BottomPercent,

        In,

        Between,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FilterValuesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterValuesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringWithDataTypeAttribute> _filterValue;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("FilterValue")]
        public System.Collections.Generic.List<StringWithDataTypeAttribute> FilterValue
        {
            get
            {
                return this._filterValue;
            }
            private set
            {
                this._filterValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FilterValuesType" /> class.</para>
        /// </summary>
        public FilterValuesType()
        {
            this._filterValue = new System.Collections.Generic.List<StringWithDataTypeAttribute>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartHierarchyType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartHierarchyType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartMembersType> _chartMembers;

        [System.Xml.Serialization.XmlElementAttribute("ChartMembers")]
        public System.Collections.Generic.List<ChartMembersType> ChartMembers
        {
            get
            {
                return this._chartMembers;
            }
            private set
            {
                this._chartMembers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMembers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMembersSpecified
        {
            get
            {
                return (this.ChartMembers.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartHierarchyType" /> class.</para>
        /// </summary>
        public ChartHierarchyType()
        {
            this._chartMembers = new System.Collections.Generic.List<ChartMembersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartMembersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartMembersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartMemberType> _chartMember;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartMember")]
        public System.Collections.Generic.List<ChartMemberType> ChartMember
        {
            get
            {
                return this._chartMember;
            }
            private set
            {
                this._chartMember = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartMembersType" /> class.</para>
        /// </summary>
        public ChartMembersType()
        {
            this._chartMember = new System.Collections.Generic.List<ChartMemberType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartMemberType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartMemberType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GroupType> _group;

        [System.Xml.Serialization.XmlElementAttribute("Group")]
        public System.Collections.Generic.List<GroupType> Group
        {
            get
            {
                return this._group;
            }
            private set
            {
                this._group = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupSpecified
        {
            get
            {
                return (this.Group.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartMemberType" /> class.</para>
        /// </summary>
        public ChartMemberType()
        {
            this._group = new System.Collections.Generic.List<GroupType>();
            this._sortExpressions = new System.Collections.Generic.List<SortExpressionsType>();
            this._chartMembers = new System.Collections.Generic.List<ChartMembersType>();
            this._label = new System.Collections.Generic.List<StringLocIDType>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<ChartMemberTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionsType> _sortExpressions;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressions")]
        public System.Collections.Generic.List<SortExpressionsType> SortExpressions
        {
            get
            {
                return this._sortExpressions;
            }
            private set
            {
                this._sortExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionsSpecified
        {
            get
            {
                return (this.SortExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartMembersType> _chartMembers;

        [System.Xml.Serialization.XmlElementAttribute("ChartMembers")]
        public System.Collections.Generic.List<ChartMembersType> ChartMembers
        {
            get
            {
                return this._chartMembers;
            }
            private set
            {
                this._chartMembers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMembers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMembersSpecified
        {
            get
            {
                return (this.ChartMembers.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _label;

        [System.Xml.Serialization.XmlElementAttribute("Label")]
        public System.Collections.Generic.List<StringLocIDType> Label
        {
            get
            {
                return this._label;
            }
            private set
            {
                this._label = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Label collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelSpecified
        {
            get
            {
                return (this.Label.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartMemberTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<ChartMemberTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GroupType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GroupType" /> class.</para>
        /// </summary>
        public GroupType()
        {
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._groupExpressions = new System.Collections.Generic.List<GroupExpressionsType>();
            this._reGroupExpressions = new System.Collections.Generic.List<GroupExpressionsType>();
            this._pageBreak = new System.Collections.Generic.List<PageBreakType>();
            this._pageName = new System.Collections.Generic.List<string>();
            this._filters = new System.Collections.Generic.List<FiltersType>();
            this._parent = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<GroupTypeDataElementOutput>();
            this._variables = new System.Collections.Generic.List<VariablesType>();
            this._domainScope = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GroupExpressionsType> _groupExpressions;

        [System.Xml.Serialization.XmlElementAttribute("GroupExpressions")]
        public System.Collections.Generic.List<GroupExpressionsType> GroupExpressions
        {
            get
            {
                return this._groupExpressions;
            }
            private set
            {
                this._groupExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GroupExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupExpressionsSpecified
        {
            get
            {
                return (this.GroupExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GroupExpressionsType> _reGroupExpressions;

        [System.Xml.Serialization.XmlElementAttribute("ReGroupExpressions")]
        public System.Collections.Generic.List<GroupExpressionsType> ReGroupExpressions
        {
            get
            {
                return this._reGroupExpressions;
            }
            private set
            {
                this._reGroupExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReGroupExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReGroupExpressionsSpecified
        {
            get
            {
                return (this.ReGroupExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageBreakType> _pageBreak;

        [System.Xml.Serialization.XmlElementAttribute("PageBreak")]
        public System.Collections.Generic.List<PageBreakType> PageBreak
        {
            get
            {
                return this._pageBreak;
            }
            private set
            {
                this._pageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageBreakSpecified
        {
            get
            {
                return (this.PageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pageName;

        [System.Xml.Serialization.XmlElementAttribute("PageName")]
        public System.Collections.Generic.List<string> PageName
        {
            get
            {
                return this._pageName;
            }
            private set
            {
                this._pageName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageNameSpecified
        {
            get
            {
                return (this.PageName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FiltersType> _filters;

        [System.Xml.Serialization.XmlElementAttribute("Filters")]
        public System.Collections.Generic.List<FiltersType> Filters
        {
            get
            {
                return this._filters;
            }
            private set
            {
                this._filters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _parent;

        [System.Xml.Serialization.XmlElementAttribute("Parent")]
        public System.Collections.Generic.List<string> Parent
        {
            get
            {
                return this._parent;
            }
            private set
            {
                this._parent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Parent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentSpecified
        {
            get
            {
                return (this.Parent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GroupTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<GroupTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VariablesType> _variables;

        [System.Xml.Serialization.XmlElementAttribute("Variables")]
        public System.Collections.Generic.List<VariablesType> Variables
        {
            get
            {
                return this._variables;
            }
            private set
            {
                this._variables = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Variables collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VariablesSpecified
        {
            get
            {
                return (this.Variables.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _domainScope;

        [System.Xml.Serialization.XmlElementAttribute("DomainScope")]
        public System.Collections.Generic.List<string> DomainScope
        {
            get
            {
                return this._domainScope;
            }
            private set
            {
                this._domainScope = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DomainScope collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DomainScopeSpecified
        {
            get
            {
                return (this.DomainScope.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GroupExpressionsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupExpressionsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _groupExpression;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("GroupExpression")]
        public System.Collections.Generic.List<string> GroupExpression
        {
            get
            {
                return this._groupExpression;
            }
            private set
            {
                this._groupExpression = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GroupExpressionsType" /> class.</para>
        /// </summary>
        public GroupExpressionsType()
        {
            this._groupExpression = new System.Collections.Generic.List<string>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GroupTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum GroupTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VariablesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VariablesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VariableType> _variable;

        [System.Xml.Serialization.XmlElementAttribute("Variable")]
        public System.Collections.Generic.List<VariableType> Variable
        {
            get
            {
                return this._variable;
            }
            private set
            {
                this._variable = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Variable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VariableSpecified
        {
            get
            {
                return (this.Variable.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VariablesType" /> class.</para>
        /// </summary>
        public VariablesType()
        {
            this._variable = new System.Collections.Generic.List<VariableType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VariableType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VariableType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringWithDataTypeAttribute> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<StringWithDataTypeAttribute> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VariableType" /> class.</para>
        /// </summary>
        public VariableType()
        {
            this._value = new System.Collections.Generic.List<StringWithDataTypeAttribute>();
            this._writable = new System.Collections.Generic.List<bool>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _writable;

        [System.Xml.Serialization.XmlElementAttribute("Writable")]
        public System.Collections.Generic.List<bool> Writable
        {
            get
            {
                return this._writable;
            }
            private set
            {
                this._writable = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Writable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WritableSpecified
        {
            get
            {
                return (this.Writable.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartMemberTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ChartMemberTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDataType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartDataType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartSeriesCollectionType> _chartSeriesCollection;

        [System.Xml.Serialization.XmlElementAttribute("ChartSeriesCollection")]
        public System.Collections.Generic.List<ChartSeriesCollectionType> ChartSeriesCollection
        {
            get
            {
                return this._chartSeriesCollection;
            }
            private set
            {
                this._chartSeriesCollection = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartSeriesCollection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartSeriesCollectionSpecified
        {
            get
            {
                return (this.ChartSeriesCollection.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartDataType" /> class.</para>
        /// </summary>
        public ChartDataType()
        {
            this._chartSeriesCollection = new System.Collections.Generic.List<ChartSeriesCollectionType>();
            this._chartDerivedSeriesCollection = new System.Collections.Generic.List<ChartDerivedSeriesCollectionType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDerivedSeriesCollectionType> _chartDerivedSeriesCollection;

        [System.Xml.Serialization.XmlElementAttribute("ChartDerivedSeriesCollection")]
        public System.Collections.Generic.List<ChartDerivedSeriesCollectionType> ChartDerivedSeriesCollection
        {
            get
            {
                return this._chartDerivedSeriesCollection;
            }
            private set
            {
                this._chartDerivedSeriesCollection = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartDerivedSeriesCollection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartDerivedSeriesCollectionSpecified
        {
            get
            {
                return (this.ChartDerivedSeriesCollection.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartSeriesCollectionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartSeriesCollectionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartSeriesType> _chartSeries;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartSeries")]
        public System.Collections.Generic.List<ChartSeriesType> ChartSeries
        {
            get
            {
                return this._chartSeries;
            }
            private set
            {
                this._chartSeries = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartSeriesCollectionType" /> class.</para>
        /// </summary>
        public ChartSeriesCollectionType()
        {
            this._chartSeries = new System.Collections.Generic.List<ChartSeriesType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartSeriesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartSeriesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartSeriesType" /> class.</para>
        /// </summary>
        public ChartSeriesType()
        {
            this._hidden = new System.Collections.Generic.List<string>();
            this._chartDataPoints = new System.Collections.Generic.List<ChartDataPointsType>();
            this._type = new System.Collections.Generic.List<string>();
            this._subtype = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._chartEmptyPoints = new System.Collections.Generic.List<ChartEmptyPointsType>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._legendName = new System.Collections.Generic.List<string>();
            this._chartItemInLegend = new System.Collections.Generic.List<ChartItemInLegendType>();
            this._chartAreaName = new System.Collections.Generic.List<string>();
            this._valueAxisName = new System.Collections.Generic.List<string>();
            this._categoryAxisName = new System.Collections.Generic.List<string>();
            this._chartSmartLabel = new System.Collections.Generic.List<ChartSmartLabelType>();
            this._chartDataLabel = new System.Collections.Generic.List<ChartDataLabelType>();
            this._chartMarker = new System.Collections.Generic.List<ChartMarkerType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDataPointsType> _chartDataPoints;

        [System.Xml.Serialization.XmlElementAttribute("ChartDataPoints")]
        public System.Collections.Generic.List<ChartDataPointsType> ChartDataPoints
        {
            get
            {
                return this._chartDataPoints;
            }
            private set
            {
                this._chartDataPoints = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartDataPoints collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartDataPointsSpecified
        {
            get
            {
                return (this.ChartDataPoints.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _type;

        [System.Xml.Serialization.XmlElementAttribute("Type")]
        public System.Collections.Generic.List<string> Type
        {
            get
            {
                return this._type;
            }
            private set
            {
                this._type = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Type collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return (this.Type.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _subtype;

        [System.Xml.Serialization.XmlElementAttribute("Subtype")]
        public System.Collections.Generic.List<string> Subtype
        {
            get
            {
                return this._subtype;
            }
            private set
            {
                this._subtype = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Subtype collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubtypeSpecified
        {
            get
            {
                return (this.Subtype.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartEmptyPointsType> _chartEmptyPoints;

        [System.Xml.Serialization.XmlElementAttribute("ChartEmptyPoints")]
        public System.Collections.Generic.List<ChartEmptyPointsType> ChartEmptyPoints
        {
            get
            {
                return this._chartEmptyPoints;
            }
            private set
            {
                this._chartEmptyPoints = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartEmptyPoints collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartEmptyPointsSpecified
        {
            get
            {
                return (this.ChartEmptyPoints.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendName;

        [System.Xml.Serialization.XmlElementAttribute("LegendName")]
        public System.Collections.Generic.List<string> LegendName
        {
            get
            {
                return this._legendName;
            }
            private set
            {
                this._legendName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendNameSpecified
        {
            get
            {
                return (this.LegendName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartItemInLegendType> _chartItemInLegend;

        [System.Xml.Serialization.XmlElementAttribute("ChartItemInLegend")]
        public System.Collections.Generic.List<ChartItemInLegendType> ChartItemInLegend
        {
            get
            {
                return this._chartItemInLegend;
            }
            private set
            {
                this._chartItemInLegend = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartItemInLegend collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartItemInLegendSpecified
        {
            get
            {
                return (this.ChartItemInLegend.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _chartAreaName;

        [System.Xml.Serialization.XmlElementAttribute("ChartAreaName")]
        public System.Collections.Generic.List<string> ChartAreaName
        {
            get
            {
                return this._chartAreaName;
            }
            private set
            {
                this._chartAreaName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartAreaName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartAreaNameSpecified
        {
            get
            {
                return (this.ChartAreaName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _valueAxisName;

        [System.Xml.Serialization.XmlElementAttribute("ValueAxisName")]
        public System.Collections.Generic.List<string> ValueAxisName
        {
            get
            {
                return this._valueAxisName;
            }
            private set
            {
                this._valueAxisName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ValueAxisName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueAxisNameSpecified
        {
            get
            {
                return (this.ValueAxisName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _categoryAxisName;

        [System.Xml.Serialization.XmlElementAttribute("CategoryAxisName")]
        public System.Collections.Generic.List<string> CategoryAxisName
        {
            get
            {
                return this._categoryAxisName;
            }
            private set
            {
                this._categoryAxisName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CategoryAxisName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategoryAxisNameSpecified
        {
            get
            {
                return (this.CategoryAxisName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartSmartLabelType> _chartSmartLabel;

        [System.Xml.Serialization.XmlElementAttribute("ChartSmartLabel")]
        public System.Collections.Generic.List<ChartSmartLabelType> ChartSmartLabel
        {
            get
            {
                return this._chartSmartLabel;
            }
            private set
            {
                this._chartSmartLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartSmartLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartSmartLabelSpecified
        {
            get
            {
                return (this.ChartSmartLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDataLabelType> _chartDataLabel;

        [System.Xml.Serialization.XmlElementAttribute("ChartDataLabel")]
        public System.Collections.Generic.List<ChartDataLabelType> ChartDataLabel
        {
            get
            {
                return this._chartDataLabel;
            }
            private set
            {
                this._chartDataLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartDataLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartDataLabelSpecified
        {
            get
            {
                return (this.ChartDataLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartMarkerType> _chartMarker;

        [System.Xml.Serialization.XmlElementAttribute("ChartMarker")]
        public System.Collections.Generic.List<ChartMarkerType> ChartMarker
        {
            get
            {
                return this._chartMarker;
            }
            private set
            {
                this._chartMarker = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMarker collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMarkerSpecified
        {
            get
            {
                return (this.ChartMarker.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDataPointsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartDataPointsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDataPointType> _chartDataPoint;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartDataPoint")]
        public System.Collections.Generic.List<ChartDataPointType> ChartDataPoint
        {
            get
            {
                return this._chartDataPoint;
            }
            private set
            {
                this._chartDataPoint = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartDataPointsType" /> class.</para>
        /// </summary>
        public ChartDataPointsType()
        {
            this._chartDataPoint = new System.Collections.Generic.List<ChartDataPointType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDataPointType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartDataPointType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDataPointValuesType> _chartDataPointValues;

        [System.Xml.Serialization.XmlElementAttribute("ChartDataPointValues")]
        public System.Collections.Generic.List<ChartDataPointValuesType> ChartDataPointValues
        {
            get
            {
                return this._chartDataPointValues;
            }
            private set
            {
                this._chartDataPointValues = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartDataPointValues collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartDataPointValuesSpecified
        {
            get
            {
                return (this.ChartDataPointValues.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartDataPointType" /> class.</para>
        /// </summary>
        public ChartDataPointType()
        {
            this._chartDataPointValues = new System.Collections.Generic.List<ChartDataPointValuesType>();
            this._chartDataLabel = new System.Collections.Generic.List<ChartDataLabelType>();
            this._axisLabel = new System.Collections.Generic.List<string>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._chartMarker = new System.Collections.Generic.List<ChartMarkerType>();
            this._chartItemInLegend = new System.Collections.Generic.List<ChartItemInLegendType>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<ChartDataPointTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDataLabelType> _chartDataLabel;

        [System.Xml.Serialization.XmlElementAttribute("ChartDataLabel")]
        public System.Collections.Generic.List<ChartDataLabelType> ChartDataLabel
        {
            get
            {
                return this._chartDataLabel;
            }
            private set
            {
                this._chartDataLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartDataLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartDataLabelSpecified
        {
            get
            {
                return (this.ChartDataLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _axisLabel;

        [System.Xml.Serialization.XmlElementAttribute("AxisLabel")]
        public System.Collections.Generic.List<string> AxisLabel
        {
            get
            {
                return this._axisLabel;
            }
            private set
            {
                this._axisLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AxisLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AxisLabelSpecified
        {
            get
            {
                return (this.AxisLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartMarkerType> _chartMarker;

        [System.Xml.Serialization.XmlElementAttribute("ChartMarker")]
        public System.Collections.Generic.List<ChartMarkerType> ChartMarker
        {
            get
            {
                return this._chartMarker;
            }
            private set
            {
                this._chartMarker = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMarker collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMarkerSpecified
        {
            get
            {
                return (this.ChartMarker.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartItemInLegendType> _chartItemInLegend;

        [System.Xml.Serialization.XmlElementAttribute("ChartItemInLegend")]
        public System.Collections.Generic.List<ChartItemInLegendType> ChartItemInLegend
        {
            get
            {
                return this._chartItemInLegend;
            }
            private set
            {
                this._chartItemInLegend = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartItemInLegend collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartItemInLegendSpecified
        {
            get
            {
                return (this.ChartItemInLegend.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDataPointTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<ChartDataPointTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDataPointValuesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartDataPointValuesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _x;

        [System.Xml.Serialization.XmlElementAttribute("X")]
        public System.Collections.Generic.List<string> X
        {
            get
            {
                return this._x;
            }
            private set
            {
                this._x = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the X collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XSpecified
        {
            get
            {
                return (this.X.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartDataPointValuesType" /> class.</para>
        /// </summary>
        public ChartDataPointValuesType()
        {
            this._x = new System.Collections.Generic.List<string>();
            this._y = new System.Collections.Generic.List<string>();
            this._size = new System.Collections.Generic.List<string>();
            this._high = new System.Collections.Generic.List<string>();
            this._low = new System.Collections.Generic.List<string>();
            this._start = new System.Collections.Generic.List<string>();
            this._end = new System.Collections.Generic.List<string>();
            this._mean = new System.Collections.Generic.List<string>();
            this._median = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _y;

        [System.Xml.Serialization.XmlElementAttribute("Y")]
        public System.Collections.Generic.List<string> Y
        {
            get
            {
                return this._y;
            }
            private set
            {
                this._y = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Y collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YSpecified
        {
            get
            {
                return (this.Y.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _size;

        [System.Xml.Serialization.XmlElementAttribute("Size")]
        public System.Collections.Generic.List<string> Size
        {
            get
            {
                return this._size;
            }
            private set
            {
                this._size = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Size collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified
        {
            get
            {
                return (this.Size.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _high;

        [System.Xml.Serialization.XmlElementAttribute("High")]
        public System.Collections.Generic.List<string> High
        {
            get
            {
                return this._high;
            }
            private set
            {
                this._high = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the High collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HighSpecified
        {
            get
            {
                return (this.High.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _low;

        [System.Xml.Serialization.XmlElementAttribute("Low")]
        public System.Collections.Generic.List<string> Low
        {
            get
            {
                return this._low;
            }
            private set
            {
                this._low = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Low collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LowSpecified
        {
            get
            {
                return (this.Low.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _start;

        [System.Xml.Serialization.XmlElementAttribute("Start")]
        public System.Collections.Generic.List<string> Start
        {
            get
            {
                return this._start;
            }
            private set
            {
                this._start = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Start collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartSpecified
        {
            get
            {
                return (this.Start.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _end;

        [System.Xml.Serialization.XmlElementAttribute("End")]
        public System.Collections.Generic.List<string> End
        {
            get
            {
                return this._end;
            }
            private set
            {
                this._end = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the End collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndSpecified
        {
            get
            {
                return (this.End.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mean;

        [System.Xml.Serialization.XmlElementAttribute("Mean")]
        public System.Collections.Generic.List<string> Mean
        {
            get
            {
                return this._mean;
            }
            private set
            {
                this._mean = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Mean collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeanSpecified
        {
            get
            {
                return (this.Mean.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _median;

        [System.Xml.Serialization.XmlElementAttribute("Median")]
        public System.Collections.Generic.List<string> Median
        {
            get
            {
                return this._median;
            }
            private set
            {
                this._median = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Median collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MedianSpecified
        {
            get
            {
                return (this.Median.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDataLabelType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartDataLabelType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _visible;

        [System.Xml.Serialization.XmlElementAttribute("Visible")]
        public System.Collections.Generic.List<string> Visible
        {
            get
            {
                return this._visible;
            }
            private set
            {
                this._visible = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visible collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibleSpecified
        {
            get
            {
                return (this.Visible.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartDataLabelType" /> class.</para>
        /// </summary>
        public ChartDataLabelType()
        {
            this._visible = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._label = new System.Collections.Generic.List<StringLocIDType>();
            this._useValueAsLabel = new System.Collections.Generic.List<string>();
            this._position = new System.Collections.Generic.List<string>();
            this._rotation = new System.Collections.Generic.List<string>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _label;

        [System.Xml.Serialization.XmlElementAttribute("Label")]
        public System.Collections.Generic.List<StringLocIDType> Label
        {
            get
            {
                return this._label;
            }
            private set
            {
                this._label = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Label collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelSpecified
        {
            get
            {
                return (this.Label.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useValueAsLabel;

        [System.Xml.Serialization.XmlElementAttribute("UseValueAsLabel")]
        public System.Collections.Generic.List<string> UseValueAsLabel
        {
            get
            {
                return this._useValueAsLabel;
            }
            private set
            {
                this._useValueAsLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseValueAsLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseValueAsLabelSpecified
        {
            get
            {
                return (this.UseValueAsLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rotation;

        [System.Xml.Serialization.XmlElementAttribute("Rotation")]
        public System.Collections.Generic.List<string> Rotation
        {
            get
            {
                return this._rotation;
            }
            private set
            {
                this._rotation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Rotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotationSpecified
        {
            get
            {
                return (this.Rotation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartMarkerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartMarkerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _type;

        [System.Xml.Serialization.XmlElementAttribute("Type")]
        public System.Collections.Generic.List<string> Type
        {
            get
            {
                return this._type;
            }
            private set
            {
                this._type = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Type collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return (this.Type.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartMarkerType" /> class.</para>
        /// </summary>
        public ChartMarkerType()
        {
            this._type = new System.Collections.Generic.List<string>();
            this._size = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _size;

        [System.Xml.Serialization.XmlElementAttribute("Size")]
        public System.Collections.Generic.List<string> Size
        {
            get
            {
                return this._size;
            }
            private set
            {
                this._size = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Size collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified
        {
            get
            {
                return (this.Size.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartItemInLegendType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartItemInLegendType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendText;

        [System.Xml.Serialization.XmlElementAttribute("LegendText")]
        public System.Collections.Generic.List<string> LegendText
        {
            get
            {
                return this._legendText;
            }
            private set
            {
                this._legendText = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendTextSpecified
        {
            get
            {
                return (this.LegendText.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartItemInLegendType" /> class.</para>
        /// </summary>
        public ChartItemInLegendType()
        {
            this._legendText = new System.Collections.Generic.List<string>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDataPointTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ChartDataPointTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartEmptyPointsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartEmptyPointsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartEmptyPointsType" /> class.</para>
        /// </summary>
        public ChartEmptyPointsType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._chartMarker = new System.Collections.Generic.List<ChartMarkerType>();
            this._chartDataLabel = new System.Collections.Generic.List<ChartDataLabelType>();
            this._axisLabel = new System.Collections.Generic.List<string>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartMarkerType> _chartMarker;

        [System.Xml.Serialization.XmlElementAttribute("ChartMarker")]
        public System.Collections.Generic.List<ChartMarkerType> ChartMarker
        {
            get
            {
                return this._chartMarker;
            }
            private set
            {
                this._chartMarker = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMarker collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMarkerSpecified
        {
            get
            {
                return (this.ChartMarker.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDataLabelType> _chartDataLabel;

        [System.Xml.Serialization.XmlElementAttribute("ChartDataLabel")]
        public System.Collections.Generic.List<ChartDataLabelType> ChartDataLabel
        {
            get
            {
                return this._chartDataLabel;
            }
            private set
            {
                this._chartDataLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartDataLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartDataLabelSpecified
        {
            get
            {
                return (this.ChartDataLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _axisLabel;

        [System.Xml.Serialization.XmlElementAttribute("AxisLabel")]
        public System.Collections.Generic.List<string> AxisLabel
        {
            get
            {
                return this._axisLabel;
            }
            private set
            {
                this._axisLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AxisLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AxisLabelSpecified
        {
            get
            {
                return (this.AxisLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartSmartLabelType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartSmartLabelType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _disabled;

        [System.Xml.Serialization.XmlElementAttribute("Disabled")]
        public System.Collections.Generic.List<string> Disabled
        {
            get
            {
                return this._disabled;
            }
            private set
            {
                this._disabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Disabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisabledSpecified
        {
            get
            {
                return (this.Disabled.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartSmartLabelType" /> class.</para>
        /// </summary>
        public ChartSmartLabelType()
        {
            this._disabled = new System.Collections.Generic.List<string>();
            this._allowOutSidePlotArea = new System.Collections.Generic.List<string>();
            this._calloutBackColor = new System.Collections.Generic.List<string>();
            this._calloutLineAnchor = new System.Collections.Generic.List<string>();
            this._calloutLineColor = new System.Collections.Generic.List<string>();
            this._calloutLineStyle = new System.Collections.Generic.List<string>();
            this._calloutLineWidth = new System.Collections.Generic.List<string>();
            this._calloutStyle = new System.Collections.Generic.List<string>();
            this._showOverlapped = new System.Collections.Generic.List<string>();
            this._markerOverlapping = new System.Collections.Generic.List<string>();
            this._maxMovingDistance = new System.Collections.Generic.List<string>();
            this._minMovingDistance = new System.Collections.Generic.List<string>();
            this._chartNoMoveDirections = new System.Collections.Generic.List<ChartNoMoveDirectionsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _allowOutSidePlotArea;

        [System.Xml.Serialization.XmlElementAttribute("AllowOutSidePlotArea")]
        public System.Collections.Generic.List<string> AllowOutSidePlotArea
        {
            get
            {
                return this._allowOutSidePlotArea;
            }
            private set
            {
                this._allowOutSidePlotArea = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AllowOutSidePlotArea collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowOutSidePlotAreaSpecified
        {
            get
            {
                return (this.AllowOutSidePlotArea.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _calloutBackColor;

        [System.Xml.Serialization.XmlElementAttribute("CalloutBackColor")]
        public System.Collections.Generic.List<string> CalloutBackColor
        {
            get
            {
                return this._calloutBackColor;
            }
            private set
            {
                this._calloutBackColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CalloutBackColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalloutBackColorSpecified
        {
            get
            {
                return (this.CalloutBackColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _calloutLineAnchor;

        [System.Xml.Serialization.XmlElementAttribute("CalloutLineAnchor")]
        public System.Collections.Generic.List<string> CalloutLineAnchor
        {
            get
            {
                return this._calloutLineAnchor;
            }
            private set
            {
                this._calloutLineAnchor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CalloutLineAnchor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalloutLineAnchorSpecified
        {
            get
            {
                return (this.CalloutLineAnchor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _calloutLineColor;

        [System.Xml.Serialization.XmlElementAttribute("CalloutLineColor")]
        public System.Collections.Generic.List<string> CalloutLineColor
        {
            get
            {
                return this._calloutLineColor;
            }
            private set
            {
                this._calloutLineColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CalloutLineColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalloutLineColorSpecified
        {
            get
            {
                return (this.CalloutLineColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _calloutLineStyle;

        [System.Xml.Serialization.XmlElementAttribute("CalloutLineStyle")]
        public System.Collections.Generic.List<string> CalloutLineStyle
        {
            get
            {
                return this._calloutLineStyle;
            }
            private set
            {
                this._calloutLineStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CalloutLineStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalloutLineStyleSpecified
        {
            get
            {
                return (this.CalloutLineStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _calloutLineWidth;

        [System.Xml.Serialization.XmlElementAttribute("CalloutLineWidth")]
        public System.Collections.Generic.List<string> CalloutLineWidth
        {
            get
            {
                return this._calloutLineWidth;
            }
            private set
            {
                this._calloutLineWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CalloutLineWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalloutLineWidthSpecified
        {
            get
            {
                return (this.CalloutLineWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _calloutStyle;

        [System.Xml.Serialization.XmlElementAttribute("CalloutStyle")]
        public System.Collections.Generic.List<string> CalloutStyle
        {
            get
            {
                return this._calloutStyle;
            }
            private set
            {
                this._calloutStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CalloutStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalloutStyleSpecified
        {
            get
            {
                return (this.CalloutStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showOverlapped;

        [System.Xml.Serialization.XmlElementAttribute("ShowOverlapped")]
        public System.Collections.Generic.List<string> ShowOverlapped
        {
            get
            {
                return this._showOverlapped;
            }
            private set
            {
                this._showOverlapped = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowOverlapped collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowOverlappedSpecified
        {
            get
            {
                return (this.ShowOverlapped.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _markerOverlapping;

        [System.Xml.Serialization.XmlElementAttribute("MarkerOverlapping")]
        public System.Collections.Generic.List<string> MarkerOverlapping
        {
            get
            {
                return this._markerOverlapping;
            }
            private set
            {
                this._markerOverlapping = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MarkerOverlapping collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerOverlappingSpecified
        {
            get
            {
                return (this.MarkerOverlapping.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maxMovingDistance;

        [System.Xml.Serialization.XmlElementAttribute("MaxMovingDistance")]
        public System.Collections.Generic.List<string> MaxMovingDistance
        {
            get
            {
                return this._maxMovingDistance;
            }
            private set
            {
                this._maxMovingDistance = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaxMovingDistance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxMovingDistanceSpecified
        {
            get
            {
                return (this.MaxMovingDistance.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minMovingDistance;

        [System.Xml.Serialization.XmlElementAttribute("MinMovingDistance")]
        public System.Collections.Generic.List<string> MinMovingDistance
        {
            get
            {
                return this._minMovingDistance;
            }
            private set
            {
                this._minMovingDistance = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinMovingDistance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinMovingDistanceSpecified
        {
            get
            {
                return (this.MinMovingDistance.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartNoMoveDirectionsType> _chartNoMoveDirections;

        [System.Xml.Serialization.XmlElementAttribute("ChartNoMoveDirections")]
        public System.Collections.Generic.List<ChartNoMoveDirectionsType> ChartNoMoveDirections
        {
            get
            {
                return this._chartNoMoveDirections;
            }
            private set
            {
                this._chartNoMoveDirections = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartNoMoveDirections collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartNoMoveDirectionsSpecified
        {
            get
            {
                return (this.ChartNoMoveDirections.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartNoMoveDirectionsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartNoMoveDirectionsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _up;

        [System.Xml.Serialization.XmlElementAttribute("Up")]
        public System.Collections.Generic.List<string> Up
        {
            get
            {
                return this._up;
            }
            private set
            {
                this._up = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Up collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpSpecified
        {
            get
            {
                return (this.Up.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartNoMoveDirectionsType" /> class.</para>
        /// </summary>
        public ChartNoMoveDirectionsType()
        {
            this._up = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._right = new System.Collections.Generic.List<string>();
            this._down = new System.Collections.Generic.List<string>();
            this._upLeft = new System.Collections.Generic.List<string>();
            this._upRight = new System.Collections.Generic.List<string>();
            this._downLeft = new System.Collections.Generic.List<string>();
            this._downRight = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _right;

        [System.Xml.Serialization.XmlElementAttribute("Right")]
        public System.Collections.Generic.List<string> Right
        {
            get
            {
                return this._right;
            }
            private set
            {
                this._right = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Right collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightSpecified
        {
            get
            {
                return (this.Right.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _down;

        [System.Xml.Serialization.XmlElementAttribute("Down")]
        public System.Collections.Generic.List<string> Down
        {
            get
            {
                return this._down;
            }
            private set
            {
                this._down = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Down collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DownSpecified
        {
            get
            {
                return (this.Down.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _upLeft;

        [System.Xml.Serialization.XmlElementAttribute("UpLeft")]
        public System.Collections.Generic.List<string> UpLeft
        {
            get
            {
                return this._upLeft;
            }
            private set
            {
                this._upLeft = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UpLeft collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpLeftSpecified
        {
            get
            {
                return (this.UpLeft.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _upRight;

        [System.Xml.Serialization.XmlElementAttribute("UpRight")]
        public System.Collections.Generic.List<string> UpRight
        {
            get
            {
                return this._upRight;
            }
            private set
            {
                this._upRight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UpRight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpRightSpecified
        {
            get
            {
                return (this.UpRight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _downLeft;

        [System.Xml.Serialization.XmlElementAttribute("DownLeft")]
        public System.Collections.Generic.List<string> DownLeft
        {
            get
            {
                return this._downLeft;
            }
            private set
            {
                this._downLeft = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DownLeft collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DownLeftSpecified
        {
            get
            {
                return (this.DownLeft.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _downRight;

        [System.Xml.Serialization.XmlElementAttribute("DownRight")]
        public System.Collections.Generic.List<string> DownRight
        {
            get
            {
                return this._downRight;
            }
            private set
            {
                this._downRight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DownRight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DownRightSpecified
        {
            get
            {
                return (this.DownRight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDerivedSeriesCollectionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartDerivedSeriesCollectionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDerivedSeriesType> _chartDerivedSeries;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartDerivedSeries")]
        public System.Collections.Generic.List<ChartDerivedSeriesType> ChartDerivedSeries
        {
            get
            {
                return this._chartDerivedSeries;
            }
            private set
            {
                this._chartDerivedSeries = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartDerivedSeriesCollectionType" /> class.</para>
        /// </summary>
        public ChartDerivedSeriesCollectionType()
        {
            this._chartDerivedSeries = new System.Collections.Generic.List<ChartDerivedSeriesType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDerivedSeriesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartDerivedSeriesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartSeriesType> _chartSeries;

        [System.Xml.Serialization.XmlElementAttribute("ChartSeries")]
        public System.Collections.Generic.List<ChartSeriesType> ChartSeries
        {
            get
            {
                return this._chartSeries;
            }
            private set
            {
                this._chartSeries = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartSeries collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartSeriesSpecified
        {
            get
            {
                return (this.ChartSeries.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartDerivedSeriesType" /> class.</para>
        /// </summary>
        public ChartDerivedSeriesType()
        {
            this._chartSeries = new System.Collections.Generic.List<ChartSeriesType>();
            this._sourceChartSeriesName = new System.Collections.Generic.List<string>();
            this._derivedSeriesFormula = new System.Collections.Generic.List<ChartDerivedSeriesTypeDerivedSeriesFormula>();
            this._chartFormulaParameters = new System.Collections.Generic.List<ChartFormulaParametersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _sourceChartSeriesName;

        [System.Xml.Serialization.XmlElementAttribute("SourceChartSeriesName")]
        public System.Collections.Generic.List<string> SourceChartSeriesName
        {
            get
            {
                return this._sourceChartSeriesName;
            }
            private set
            {
                this._sourceChartSeriesName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SourceChartSeriesName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceChartSeriesNameSpecified
        {
            get
            {
                return (this.SourceChartSeriesName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartDerivedSeriesTypeDerivedSeriesFormula> _derivedSeriesFormula;

        [System.Xml.Serialization.XmlElementAttribute("DerivedSeriesFormula")]
        public System.Collections.Generic.List<ChartDerivedSeriesTypeDerivedSeriesFormula> DerivedSeriesFormula
        {
            get
            {
                return this._derivedSeriesFormula;
            }
            private set
            {
                this._derivedSeriesFormula = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DerivedSeriesFormula collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DerivedSeriesFormulaSpecified
        {
            get
            {
                return (this.DerivedSeriesFormula.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartFormulaParametersType> _chartFormulaParameters;

        [System.Xml.Serialization.XmlElementAttribute("ChartFormulaParameters")]
        public System.Collections.Generic.List<ChartFormulaParametersType> ChartFormulaParameters
        {
            get
            {
                return this._chartFormulaParameters;
            }
            private set
            {
                this._chartFormulaParameters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartFormulaParameters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartFormulaParametersSpecified
        {
            get
            {
                return (this.ChartFormulaParameters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartDerivedSeriesTypeDerivedSeriesFormula", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ChartDerivedSeriesTypeDerivedSeriesFormula
    {

        BollingerBands,

        MovingAverage,

        ExponentialMovingAverage,

        TriangularMovingAverage,

        WeightedMovingAverage,

        MACD,

        DetrendedPriceOscillator,

        Envelopes,

        Performance,

        RateOfChange,

        RelativeStrengthIndex,

        StandardDeviation,

        TRIX,

        Mean,

        Median,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartFormulaParametersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartFormulaParametersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartFormulaParameterType> _chartFormulaParameter;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartFormulaParameter")]
        public System.Collections.Generic.List<ChartFormulaParameterType> ChartFormulaParameter
        {
            get
            {
                return this._chartFormulaParameter;
            }
            private set
            {
                this._chartFormulaParameter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartFormulaParametersType" /> class.</para>
        /// </summary>
        public ChartFormulaParametersType()
        {
            this._chartFormulaParameter = new System.Collections.Generic.List<ChartFormulaParameterType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartFormulaParameterType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartFormulaParameterType
    {

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public string Value { get; set; }

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public string Source { get; set; }

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement Any { get; set; }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartFormulaParameterType" /> class.</para>
        /// </summary>
        public ChartFormulaParameterType()
        {
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartAreasType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartAreasType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartAreaType> _chartArea;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartArea")]
        public System.Collections.Generic.List<ChartAreaType> ChartArea
        {
            get
            {
                return this._chartArea;
            }
            private set
            {
                this._chartArea = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartAreasType" /> class.</para>
        /// </summary>
        public ChartAreasType()
        {
            this._chartArea = new System.Collections.Generic.List<ChartAreaType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartAreaType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartAreaType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartAreaType" /> class.</para>
        /// </summary>
        public ChartAreaType()
        {
            this._hidden = new System.Collections.Generic.List<string>();
            this._chartCategoryAxes = new System.Collections.Generic.List<ChartCategoryAxesType>();
            this._chartValueAxes = new System.Collections.Generic.List<ChartValueAxesType>();
            this._chartThreeDProperties = new System.Collections.Generic.List<ChartThreeDPropertiesType>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._alignOrientation = new System.Collections.Generic.List<string>();
            this._chartAlignType = new System.Collections.Generic.List<ChartAlignTypeType>();
            this._chartElementPosition = new System.Collections.Generic.List<ChartElementPositionType>();
            this._chartInnerPlotPosition = new System.Collections.Generic.List<ChartElementPositionType>();
            this._alignWithChartArea = new System.Collections.Generic.List<string>();
            this._equallySizedAxesFont = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartCategoryAxesType> _chartCategoryAxes;

        [System.Xml.Serialization.XmlElementAttribute("ChartCategoryAxes")]
        public System.Collections.Generic.List<ChartCategoryAxesType> ChartCategoryAxes
        {
            get
            {
                return this._chartCategoryAxes;
            }
            private set
            {
                this._chartCategoryAxes = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartCategoryAxes collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartCategoryAxesSpecified
        {
            get
            {
                return (this.ChartCategoryAxes.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartValueAxesType> _chartValueAxes;

        [System.Xml.Serialization.XmlElementAttribute("ChartValueAxes")]
        public System.Collections.Generic.List<ChartValueAxesType> ChartValueAxes
        {
            get
            {
                return this._chartValueAxes;
            }
            private set
            {
                this._chartValueAxes = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartValueAxes collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartValueAxesSpecified
        {
            get
            {
                return (this.ChartValueAxes.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartThreeDPropertiesType> _chartThreeDProperties;

        [System.Xml.Serialization.XmlElementAttribute("ChartThreeDProperties")]
        public System.Collections.Generic.List<ChartThreeDPropertiesType> ChartThreeDProperties
        {
            get
            {
                return this._chartThreeDProperties;
            }
            private set
            {
                this._chartThreeDProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartThreeDProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartThreeDPropertiesSpecified
        {
            get
            {
                return (this.ChartThreeDProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _alignOrientation;

        [System.Xml.Serialization.XmlElementAttribute("AlignOrientation")]
        public System.Collections.Generic.List<string> AlignOrientation
        {
            get
            {
                return this._alignOrientation;
            }
            private set
            {
                this._alignOrientation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AlignOrientation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlignOrientationSpecified
        {
            get
            {
                return (this.AlignOrientation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartAlignTypeType> _chartAlignType;

        [System.Xml.Serialization.XmlElementAttribute("ChartAlignType")]
        public System.Collections.Generic.List<ChartAlignTypeType> ChartAlignType
        {
            get
            {
                return this._chartAlignType;
            }
            private set
            {
                this._chartAlignType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartAlignType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartAlignTypeSpecified
        {
            get
            {
                return (this.ChartAlignType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartElementPositionType> _chartElementPosition;

        [System.Xml.Serialization.XmlElementAttribute("ChartElementPosition")]
        public System.Collections.Generic.List<ChartElementPositionType> ChartElementPosition
        {
            get
            {
                return this._chartElementPosition;
            }
            private set
            {
                this._chartElementPosition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartElementPosition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartElementPositionSpecified
        {
            get
            {
                return (this.ChartElementPosition.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartElementPositionType> _chartInnerPlotPosition;

        [System.Xml.Serialization.XmlElementAttribute("ChartInnerPlotPosition")]
        public System.Collections.Generic.List<ChartElementPositionType> ChartInnerPlotPosition
        {
            get
            {
                return this._chartInnerPlotPosition;
            }
            private set
            {
                this._chartInnerPlotPosition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartInnerPlotPosition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartInnerPlotPositionSpecified
        {
            get
            {
                return (this.ChartInnerPlotPosition.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _alignWithChartArea;

        [System.Xml.Serialization.XmlElementAttribute("AlignWithChartArea")]
        public System.Collections.Generic.List<string> AlignWithChartArea
        {
            get
            {
                return this._alignWithChartArea;
            }
            private set
            {
                this._alignWithChartArea = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AlignWithChartArea collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlignWithChartAreaSpecified
        {
            get
            {
                return (this.AlignWithChartArea.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _equallySizedAxesFont;

        [System.Xml.Serialization.XmlElementAttribute("EquallySizedAxesFont")]
        public System.Collections.Generic.List<string> EquallySizedAxesFont
        {
            get
            {
                return this._equallySizedAxesFont;
            }
            private set
            {
                this._equallySizedAxesFont = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EquallySizedAxesFont collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquallySizedAxesFontSpecified
        {
            get
            {
                return (this.EquallySizedAxesFont.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartCategoryAxesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartCategoryAxesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartAxisType> _chartAxis;

        [System.Xml.Serialization.XmlElementAttribute("ChartAxis")]
        public System.Collections.Generic.List<ChartAxisType> ChartAxis
        {
            get
            {
                return this._chartAxis;
            }
            private set
            {
                this._chartAxis = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartAxis collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartAxisSpecified
        {
            get
            {
                return (this.ChartAxis.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartCategoryAxesType" /> class.</para>
        /// </summary>
        public ChartCategoryAxesType()
        {
            this._chartAxis = new System.Collections.Generic.List<ChartAxisType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartAxisType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartAxisType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _visible;

        [System.Xml.Serialization.XmlElementAttribute("Visible")]
        public System.Collections.Generic.List<string> Visible
        {
            get
            {
                return this._visible;
            }
            private set
            {
                this._visible = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visible collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibleSpecified
        {
            get
            {
                return (this.Visible.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartAxisType" /> class.</para>
        /// </summary>
        public ChartAxisType()
        {
            this._visible = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._chartAxisTitle = new System.Collections.Generic.List<ChartAxisTitleType>();
            this._margin = new System.Collections.Generic.List<string>();
            this._interval = new System.Collections.Generic.List<string>();
            this._intervalType = new System.Collections.Generic.List<string>();
            this._intervalOffset = new System.Collections.Generic.List<string>();
            this._intervalOffsetType = new System.Collections.Generic.List<string>();
            this._variableAutoInterval = new System.Collections.Generic.List<string>();
            this._labelInterval = new System.Collections.Generic.List<string>();
            this._labelIntervalType = new System.Collections.Generic.List<string>();
            this._labelIntervalOffset = new System.Collections.Generic.List<string>();
            this._labelIntervalOffsetType = new System.Collections.Generic.List<string>();
            this._chartMajorGridLines = new System.Collections.Generic.List<ChartGridLinesType>();
            this._chartMinorGridLines = new System.Collections.Generic.List<ChartGridLinesType>();
            this._chartMajorTickMarks = new System.Collections.Generic.List<ChartTickMarksType>();
            this._chartMinorTickMarks = new System.Collections.Generic.List<ChartTickMarksType>();
            this._marksAlwaysAtPlotEdge = new System.Collections.Generic.List<string>();
            this._reverse = new System.Collections.Generic.List<string>();
            this._crossAt = new System.Collections.Generic.List<string>();
            this._location = new System.Collections.Generic.List<string>();
            this._interlaced = new System.Collections.Generic.List<string>();
            this._interlacedColor = new System.Collections.Generic.List<string>();
            this._chartStripLines = new System.Collections.Generic.List<ChartStripLinesType>();
            this._arrows = new System.Collections.Generic.List<string>();
            this._scalar = new System.Collections.Generic.List<bool>();
            this._minimum = new System.Collections.Generic.List<string>();
            this._maximum = new System.Collections.Generic.List<string>();
            this._logScale = new System.Collections.Generic.List<string>();
            this._logBase = new System.Collections.Generic.List<string>();
            this._hideLabels = new System.Collections.Generic.List<string>();
            this._angle = new System.Collections.Generic.List<string>();
            this._preventFontShrink = new System.Collections.Generic.List<string>();
            this._preventFontGrow = new System.Collections.Generic.List<string>();
            this._preventLabelOffset = new System.Collections.Generic.List<string>();
            this._preventWordWrap = new System.Collections.Generic.List<string>();
            this._allowLabelRotation = new System.Collections.Generic.List<string>();
            this._includeZero = new System.Collections.Generic.List<string>();
            this._labelsAutoFitDisabled = new System.Collections.Generic.List<string>();
            this._minFontSize = new System.Collections.Generic.List<string>();
            this._maxFontSize = new System.Collections.Generic.List<string>();
            this._offsetLabels = new System.Collections.Generic.List<string>();
            this._hideEndLabels = new System.Collections.Generic.List<string>();
            this._chartAxisScaleBreak = new System.Collections.Generic.List<ChartAxisScaleBreakType>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartAxisTitleType> _chartAxisTitle;

        [System.Xml.Serialization.XmlElementAttribute("ChartAxisTitle")]
        public System.Collections.Generic.List<ChartAxisTitleType> ChartAxisTitle
        {
            get
            {
                return this._chartAxisTitle;
            }
            private set
            {
                this._chartAxisTitle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartAxisTitle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartAxisTitleSpecified
        {
            get
            {
                return (this.ChartAxisTitle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _margin;

        [System.Xml.Serialization.XmlElementAttribute("Margin")]
        public System.Collections.Generic.List<string> Margin
        {
            get
            {
                return this._margin;
            }
            private set
            {
                this._margin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Margin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified
        {
            get
            {
                return (this.Margin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalType;

        [System.Xml.Serialization.XmlElementAttribute("IntervalType")]
        public System.Collections.Generic.List<string> IntervalType
        {
            get
            {
                return this._intervalType;
            }
            private set
            {
                this._intervalType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalTypeSpecified
        {
            get
            {
                return (this.IntervalType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffset")]
        public System.Collections.Generic.List<string> IntervalOffset
        {
            get
            {
                return this._intervalOffset;
            }
            private set
            {
                this._intervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetSpecified
        {
            get
            {
                return (this.IntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffsetType;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffsetType")]
        public System.Collections.Generic.List<string> IntervalOffsetType
        {
            get
            {
                return this._intervalOffsetType;
            }
            private set
            {
                this._intervalOffsetType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffsetType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetTypeSpecified
        {
            get
            {
                return (this.IntervalOffsetType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _variableAutoInterval;

        [System.Xml.Serialization.XmlElementAttribute("VariableAutoInterval")]
        public System.Collections.Generic.List<string> VariableAutoInterval
        {
            get
            {
                return this._variableAutoInterval;
            }
            private set
            {
                this._variableAutoInterval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VariableAutoInterval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VariableAutoIntervalSpecified
        {
            get
            {
                return (this.VariableAutoInterval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelInterval;

        [System.Xml.Serialization.XmlElementAttribute("LabelInterval")]
        public System.Collections.Generic.List<string> LabelInterval
        {
            get
            {
                return this._labelInterval;
            }
            private set
            {
                this._labelInterval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelInterval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelIntervalSpecified
        {
            get
            {
                return (this.LabelInterval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelIntervalType;

        [System.Xml.Serialization.XmlElementAttribute("LabelIntervalType")]
        public System.Collections.Generic.List<string> LabelIntervalType
        {
            get
            {
                return this._labelIntervalType;
            }
            private set
            {
                this._labelIntervalType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelIntervalType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelIntervalTypeSpecified
        {
            get
            {
                return (this.LabelIntervalType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelIntervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("LabelIntervalOffset")]
        public System.Collections.Generic.List<string> LabelIntervalOffset
        {
            get
            {
                return this._labelIntervalOffset;
            }
            private set
            {
                this._labelIntervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelIntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelIntervalOffsetSpecified
        {
            get
            {
                return (this.LabelIntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelIntervalOffsetType;

        [System.Xml.Serialization.XmlElementAttribute("LabelIntervalOffsetType")]
        public System.Collections.Generic.List<string> LabelIntervalOffsetType
        {
            get
            {
                return this._labelIntervalOffsetType;
            }
            private set
            {
                this._labelIntervalOffsetType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelIntervalOffsetType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelIntervalOffsetTypeSpecified
        {
            get
            {
                return (this.LabelIntervalOffsetType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartGridLinesType> _chartMajorGridLines;

        [System.Xml.Serialization.XmlElementAttribute("ChartMajorGridLines")]
        public System.Collections.Generic.List<ChartGridLinesType> ChartMajorGridLines
        {
            get
            {
                return this._chartMajorGridLines;
            }
            private set
            {
                this._chartMajorGridLines = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMajorGridLines collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMajorGridLinesSpecified
        {
            get
            {
                return (this.ChartMajorGridLines.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartGridLinesType> _chartMinorGridLines;

        [System.Xml.Serialization.XmlElementAttribute("ChartMinorGridLines")]
        public System.Collections.Generic.List<ChartGridLinesType> ChartMinorGridLines
        {
            get
            {
                return this._chartMinorGridLines;
            }
            private set
            {
                this._chartMinorGridLines = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMinorGridLines collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMinorGridLinesSpecified
        {
            get
            {
                return (this.ChartMinorGridLines.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartTickMarksType> _chartMajorTickMarks;

        [System.Xml.Serialization.XmlElementAttribute("ChartMajorTickMarks")]
        public System.Collections.Generic.List<ChartTickMarksType> ChartMajorTickMarks
        {
            get
            {
                return this._chartMajorTickMarks;
            }
            private set
            {
                this._chartMajorTickMarks = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMajorTickMarks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMajorTickMarksSpecified
        {
            get
            {
                return (this.ChartMajorTickMarks.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartTickMarksType> _chartMinorTickMarks;

        [System.Xml.Serialization.XmlElementAttribute("ChartMinorTickMarks")]
        public System.Collections.Generic.List<ChartTickMarksType> ChartMinorTickMarks
        {
            get
            {
                return this._chartMinorTickMarks;
            }
            private set
            {
                this._chartMinorTickMarks = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMinorTickMarks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMinorTickMarksSpecified
        {
            get
            {
                return (this.ChartMinorTickMarks.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _marksAlwaysAtPlotEdge;

        [System.Xml.Serialization.XmlElementAttribute("MarksAlwaysAtPlotEdge")]
        public System.Collections.Generic.List<string> MarksAlwaysAtPlotEdge
        {
            get
            {
                return this._marksAlwaysAtPlotEdge;
            }
            private set
            {
                this._marksAlwaysAtPlotEdge = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MarksAlwaysAtPlotEdge collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarksAlwaysAtPlotEdgeSpecified
        {
            get
            {
                return (this.MarksAlwaysAtPlotEdge.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _reverse;

        [System.Xml.Serialization.XmlElementAttribute("Reverse")]
        public System.Collections.Generic.List<string> Reverse
        {
            get
            {
                return this._reverse;
            }
            private set
            {
                this._reverse = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Reverse collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReverseSpecified
        {
            get
            {
                return (this.Reverse.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _crossAt;

        [System.Xml.Serialization.XmlElementAttribute("CrossAt")]
        public System.Collections.Generic.List<string> CrossAt
        {
            get
            {
                return this._crossAt;
            }
            private set
            {
                this._crossAt = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CrossAt collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CrossAtSpecified
        {
            get
            {
                return (this.CrossAt.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _location;

        [System.Xml.Serialization.XmlElementAttribute("Location")]
        public System.Collections.Generic.List<string> Location
        {
            get
            {
                return this._location;
            }
            private set
            {
                this._location = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Location collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocationSpecified
        {
            get
            {
                return (this.Location.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interlaced;

        [System.Xml.Serialization.XmlElementAttribute("Interlaced")]
        public System.Collections.Generic.List<string> Interlaced
        {
            get
            {
                return this._interlaced;
            }
            private set
            {
                this._interlaced = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interlaced collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterlacedSpecified
        {
            get
            {
                return (this.Interlaced.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interlacedColor;

        [System.Xml.Serialization.XmlElementAttribute("InterlacedColor")]
        public System.Collections.Generic.List<string> InterlacedColor
        {
            get
            {
                return this._interlacedColor;
            }
            private set
            {
                this._interlacedColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InterlacedColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterlacedColorSpecified
        {
            get
            {
                return (this.InterlacedColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartStripLinesType> _chartStripLines;

        [System.Xml.Serialization.XmlElementAttribute("ChartStripLines")]
        public System.Collections.Generic.List<ChartStripLinesType> ChartStripLines
        {
            get
            {
                return this._chartStripLines;
            }
            private set
            {
                this._chartStripLines = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartStripLines collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartStripLinesSpecified
        {
            get
            {
                return (this.ChartStripLines.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _arrows;

        [System.Xml.Serialization.XmlElementAttribute("Arrows")]
        public System.Collections.Generic.List<string> Arrows
        {
            get
            {
                return this._arrows;
            }
            private set
            {
                this._arrows = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Arrows collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArrowsSpecified
        {
            get
            {
                return (this.Arrows.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _scalar;

        [System.Xml.Serialization.XmlElementAttribute("Scalar")]
        public System.Collections.Generic.List<bool> Scalar
        {
            get
            {
                return this._scalar;
            }
            private set
            {
                this._scalar = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Scalar collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScalarSpecified
        {
            get
            {
                return (this.Scalar.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimum;

        [System.Xml.Serialization.XmlElementAttribute("Minimum")]
        public System.Collections.Generic.List<string> Minimum
        {
            get
            {
                return this._minimum;
            }
            private set
            {
                this._minimum = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Minimum collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumSpecified
        {
            get
            {
                return (this.Minimum.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximum;

        [System.Xml.Serialization.XmlElementAttribute("Maximum")]
        public System.Collections.Generic.List<string> Maximum
        {
            get
            {
                return this._maximum;
            }
            private set
            {
                this._maximum = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Maximum collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumSpecified
        {
            get
            {
                return (this.Maximum.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _logScale;

        [System.Xml.Serialization.XmlElementAttribute("LogScale")]
        public System.Collections.Generic.List<string> LogScale
        {
            get
            {
                return this._logScale;
            }
            private set
            {
                this._logScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LogScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogScaleSpecified
        {
            get
            {
                return (this.LogScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _logBase;

        [System.Xml.Serialization.XmlElementAttribute("LogBase")]
        public System.Collections.Generic.List<string> LogBase
        {
            get
            {
                return this._logBase;
            }
            private set
            {
                this._logBase = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LogBase collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogBaseSpecified
        {
            get
            {
                return (this.LogBase.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hideLabels;

        [System.Xml.Serialization.XmlElementAttribute("HideLabels")]
        public System.Collections.Generic.List<string> HideLabels
        {
            get
            {
                return this._hideLabels;
            }
            private set
            {
                this._hideLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HideLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideLabelsSpecified
        {
            get
            {
                return (this.HideLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _angle;

        [System.Xml.Serialization.XmlElementAttribute("Angle")]
        public System.Collections.Generic.List<string> Angle
        {
            get
            {
                return this._angle;
            }
            private set
            {
                this._angle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Angle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AngleSpecified
        {
            get
            {
                return (this.Angle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _preventFontShrink;

        [System.Xml.Serialization.XmlElementAttribute("PreventFontShrink")]
        public System.Collections.Generic.List<string> PreventFontShrink
        {
            get
            {
                return this._preventFontShrink;
            }
            private set
            {
                this._preventFontShrink = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PreventFontShrink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreventFontShrinkSpecified
        {
            get
            {
                return (this.PreventFontShrink.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _preventFontGrow;

        [System.Xml.Serialization.XmlElementAttribute("PreventFontGrow")]
        public System.Collections.Generic.List<string> PreventFontGrow
        {
            get
            {
                return this._preventFontGrow;
            }
            private set
            {
                this._preventFontGrow = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PreventFontGrow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreventFontGrowSpecified
        {
            get
            {
                return (this.PreventFontGrow.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _preventLabelOffset;

        [System.Xml.Serialization.XmlElementAttribute("PreventLabelOffset")]
        public System.Collections.Generic.List<string> PreventLabelOffset
        {
            get
            {
                return this._preventLabelOffset;
            }
            private set
            {
                this._preventLabelOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PreventLabelOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreventLabelOffsetSpecified
        {
            get
            {
                return (this.PreventLabelOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _preventWordWrap;

        [System.Xml.Serialization.XmlElementAttribute("PreventWordWrap")]
        public System.Collections.Generic.List<string> PreventWordWrap
        {
            get
            {
                return this._preventWordWrap;
            }
            private set
            {
                this._preventWordWrap = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PreventWordWrap collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreventWordWrapSpecified
        {
            get
            {
                return (this.PreventWordWrap.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _allowLabelRotation;

        [System.Xml.Serialization.XmlElementAttribute("AllowLabelRotation")]
        public System.Collections.Generic.List<string> AllowLabelRotation
        {
            get
            {
                return this._allowLabelRotation;
            }
            private set
            {
                this._allowLabelRotation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AllowLabelRotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowLabelRotationSpecified
        {
            get
            {
                return (this.AllowLabelRotation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _includeZero;

        [System.Xml.Serialization.XmlElementAttribute("IncludeZero")]
        public System.Collections.Generic.List<string> IncludeZero
        {
            get
            {
                return this._includeZero;
            }
            private set
            {
                this._includeZero = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IncludeZero collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludeZeroSpecified
        {
            get
            {
                return (this.IncludeZero.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelsAutoFitDisabled;

        [System.Xml.Serialization.XmlElementAttribute("LabelsAutoFitDisabled")]
        public System.Collections.Generic.List<string> LabelsAutoFitDisabled
        {
            get
            {
                return this._labelsAutoFitDisabled;
            }
            private set
            {
                this._labelsAutoFitDisabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelsAutoFitDisabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelsAutoFitDisabledSpecified
        {
            get
            {
                return (this.LabelsAutoFitDisabled.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minFontSize;

        [System.Xml.Serialization.XmlElementAttribute("MinFontSize")]
        public System.Collections.Generic.List<string> MinFontSize
        {
            get
            {
                return this._minFontSize;
            }
            private set
            {
                this._minFontSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinFontSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinFontSizeSpecified
        {
            get
            {
                return (this.MinFontSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maxFontSize;

        [System.Xml.Serialization.XmlElementAttribute("MaxFontSize")]
        public System.Collections.Generic.List<string> MaxFontSize
        {
            get
            {
                return this._maxFontSize;
            }
            private set
            {
                this._maxFontSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaxFontSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxFontSizeSpecified
        {
            get
            {
                return (this.MaxFontSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetLabels;

        [System.Xml.Serialization.XmlElementAttribute("OffsetLabels")]
        public System.Collections.Generic.List<string> OffsetLabels
        {
            get
            {
                return this._offsetLabels;
            }
            private set
            {
                this._offsetLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetLabelsSpecified
        {
            get
            {
                return (this.OffsetLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hideEndLabels;

        [System.Xml.Serialization.XmlElementAttribute("HideEndLabels")]
        public System.Collections.Generic.List<string> HideEndLabels
        {
            get
            {
                return this._hideEndLabels;
            }
            private set
            {
                this._hideEndLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HideEndLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideEndLabelsSpecified
        {
            get
            {
                return (this.HideEndLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartAxisScaleBreakType> _chartAxisScaleBreak;

        [System.Xml.Serialization.XmlElementAttribute("ChartAxisScaleBreak")]
        public System.Collections.Generic.List<ChartAxisScaleBreakType> ChartAxisScaleBreak
        {
            get
            {
                return this._chartAxisScaleBreak;
            }
            private set
            {
                this._chartAxisScaleBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartAxisScaleBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartAxisScaleBreakSpecified
        {
            get
            {
                return (this.ChartAxisScaleBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartAxisTitleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartAxisTitleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _caption;

        [System.Xml.Serialization.XmlElementAttribute("Caption")]
        public System.Collections.Generic.List<StringLocIDType> Caption
        {
            get
            {
                return this._caption;
            }
            private set
            {
                this._caption = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Caption collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaptionSpecified
        {
            get
            {
                return (this.Caption.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartAxisTitleType" /> class.</para>
        /// </summary>
        public ChartAxisTitleType()
        {
            this._caption = new System.Collections.Generic.List<StringLocIDType>();
            this._position = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._textOrientation = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textOrientation;

        [System.Xml.Serialization.XmlElementAttribute("TextOrientation")]
        public System.Collections.Generic.List<string> TextOrientation
        {
            get
            {
                return this._textOrientation;
            }
            private set
            {
                this._textOrientation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextOrientation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextOrientationSpecified
        {
            get
            {
                return (this.TextOrientation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartGridLinesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartGridLinesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _enabled;

        [System.Xml.Serialization.XmlElementAttribute("Enabled")]
        public System.Collections.Generic.List<string> Enabled
        {
            get
            {
                return this._enabled;
            }
            private set
            {
                this._enabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Enabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified
        {
            get
            {
                return (this.Enabled.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartGridLinesType" /> class.</para>
        /// </summary>
        public ChartGridLinesType()
        {
            this._enabled = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._interval = new System.Collections.Generic.List<string>();
            this._intervalType = new System.Collections.Generic.List<string>();
            this._intervalOffset = new System.Collections.Generic.List<string>();
            this._intervalOffsetType = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalType;

        [System.Xml.Serialization.XmlElementAttribute("IntervalType")]
        public System.Collections.Generic.List<string> IntervalType
        {
            get
            {
                return this._intervalType;
            }
            private set
            {
                this._intervalType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalTypeSpecified
        {
            get
            {
                return (this.IntervalType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffset")]
        public System.Collections.Generic.List<string> IntervalOffset
        {
            get
            {
                return this._intervalOffset;
            }
            private set
            {
                this._intervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetSpecified
        {
            get
            {
                return (this.IntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffsetType;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffsetType")]
        public System.Collections.Generic.List<string> IntervalOffsetType
        {
            get
            {
                return this._intervalOffsetType;
            }
            private set
            {
                this._intervalOffsetType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffsetType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetTypeSpecified
        {
            get
            {
                return (this.IntervalOffsetType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartTickMarksType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartTickMarksType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _enabled;

        [System.Xml.Serialization.XmlElementAttribute("Enabled")]
        public System.Collections.Generic.List<string> Enabled
        {
            get
            {
                return this._enabled;
            }
            private set
            {
                this._enabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Enabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified
        {
            get
            {
                return (this.Enabled.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartTickMarksType" /> class.</para>
        /// </summary>
        public ChartTickMarksType()
        {
            this._enabled = new System.Collections.Generic.List<string>();
            this._type = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._length = new System.Collections.Generic.List<string>();
            this._interval = new System.Collections.Generic.List<string>();
            this._intervalType = new System.Collections.Generic.List<string>();
            this._intervalOffset = new System.Collections.Generic.List<string>();
            this._intervalOffsetType = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _type;

        [System.Xml.Serialization.XmlElementAttribute("Type")]
        public System.Collections.Generic.List<string> Type
        {
            get
            {
                return this._type;
            }
            private set
            {
                this._type = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Type collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return (this.Type.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _length;

        [System.Xml.Serialization.XmlElementAttribute("Length")]
        public System.Collections.Generic.List<string> Length
        {
            get
            {
                return this._length;
            }
            private set
            {
                this._length = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Length collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified
        {
            get
            {
                return (this.Length.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalType;

        [System.Xml.Serialization.XmlElementAttribute("IntervalType")]
        public System.Collections.Generic.List<string> IntervalType
        {
            get
            {
                return this._intervalType;
            }
            private set
            {
                this._intervalType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalTypeSpecified
        {
            get
            {
                return (this.IntervalType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffset")]
        public System.Collections.Generic.List<string> IntervalOffset
        {
            get
            {
                return this._intervalOffset;
            }
            private set
            {
                this._intervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetSpecified
        {
            get
            {
                return (this.IntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffsetType;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffsetType")]
        public System.Collections.Generic.List<string> IntervalOffsetType
        {
            get
            {
                return this._intervalOffsetType;
            }
            private set
            {
                this._intervalOffsetType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffsetType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetTypeSpecified
        {
            get
            {
                return (this.IntervalOffsetType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartStripLinesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartStripLinesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartStripLineType> _chartStripLine;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartStripLine")]
        public System.Collections.Generic.List<ChartStripLineType> ChartStripLine
        {
            get
            {
                return this._chartStripLine;
            }
            private set
            {
                this._chartStripLine = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartStripLinesType" /> class.</para>
        /// </summary>
        public ChartStripLinesType()
        {
            this._chartStripLine = new System.Collections.Generic.List<ChartStripLineType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartStripLineType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartStripLineType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartStripLineType" /> class.</para>
        /// </summary>
        public ChartStripLineType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._title = new System.Collections.Generic.List<string>();
            this._textOrientation = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._interval = new System.Collections.Generic.List<string>();
            this._intervalType = new System.Collections.Generic.List<string>();
            this._intervalOffset = new System.Collections.Generic.List<string>();
            this._intervalOffsetType = new System.Collections.Generic.List<string>();
            this._stripWidth = new System.Collections.Generic.List<string>();
            this._stripWidthType = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _title;

        [System.Xml.Serialization.XmlElementAttribute("Title")]
        public System.Collections.Generic.List<string> Title
        {
            get
            {
                return this._title;
            }
            private set
            {
                this._title = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Title collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TitleSpecified
        {
            get
            {
                return (this.Title.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textOrientation;

        [System.Xml.Serialization.XmlElementAttribute("TextOrientation")]
        public System.Collections.Generic.List<string> TextOrientation
        {
            get
            {
                return this._textOrientation;
            }
            private set
            {
                this._textOrientation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextOrientation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextOrientationSpecified
        {
            get
            {
                return (this.TextOrientation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalType;

        [System.Xml.Serialization.XmlElementAttribute("IntervalType")]
        public System.Collections.Generic.List<string> IntervalType
        {
            get
            {
                return this._intervalType;
            }
            private set
            {
                this._intervalType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalTypeSpecified
        {
            get
            {
                return (this.IntervalType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffset")]
        public System.Collections.Generic.List<string> IntervalOffset
        {
            get
            {
                return this._intervalOffset;
            }
            private set
            {
                this._intervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetSpecified
        {
            get
            {
                return (this.IntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffsetType;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffsetType")]
        public System.Collections.Generic.List<string> IntervalOffsetType
        {
            get
            {
                return this._intervalOffsetType;
            }
            private set
            {
                this._intervalOffsetType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffsetType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetTypeSpecified
        {
            get
            {
                return (this.IntervalOffsetType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _stripWidth;

        [System.Xml.Serialization.XmlElementAttribute("StripWidth")]
        public System.Collections.Generic.List<string> StripWidth
        {
            get
            {
                return this._stripWidth;
            }
            private set
            {
                this._stripWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StripWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StripWidthSpecified
        {
            get
            {
                return (this.StripWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _stripWidthType;

        [System.Xml.Serialization.XmlElementAttribute("StripWidthType")]
        public System.Collections.Generic.List<string> StripWidthType
        {
            get
            {
                return this._stripWidthType;
            }
            private set
            {
                this._stripWidthType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StripWidthType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StripWidthTypeSpecified
        {
            get
            {
                return (this.StripWidthType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartAxisScaleBreakType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartAxisScaleBreakType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _enabled;

        [System.Xml.Serialization.XmlElementAttribute("Enabled")]
        public System.Collections.Generic.List<string> Enabled
        {
            get
            {
                return this._enabled;
            }
            private set
            {
                this._enabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Enabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified
        {
            get
            {
                return (this.Enabled.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartAxisScaleBreakType" /> class.</para>
        /// </summary>
        public ChartAxisScaleBreakType()
        {
            this._enabled = new System.Collections.Generic.List<string>();
            this._breakLineType = new System.Collections.Generic.List<string>();
            this._collapsibleSpaceThreshold = new System.Collections.Generic.List<string>();
            this._maxNumberOfBreaks = new System.Collections.Generic.List<string>();
            this._spacing = new System.Collections.Generic.List<string>();
            this._includeZero = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _breakLineType;

        [System.Xml.Serialization.XmlElementAttribute("BreakLineType")]
        public System.Collections.Generic.List<string> BreakLineType
        {
            get
            {
                return this._breakLineType;
            }
            private set
            {
                this._breakLineType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BreakLineType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BreakLineTypeSpecified
        {
            get
            {
                return (this.BreakLineType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _collapsibleSpaceThreshold;

        [System.Xml.Serialization.XmlElementAttribute("CollapsibleSpaceThreshold")]
        public System.Collections.Generic.List<string> CollapsibleSpaceThreshold
        {
            get
            {
                return this._collapsibleSpaceThreshold;
            }
            private set
            {
                this._collapsibleSpaceThreshold = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CollapsibleSpaceThreshold collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CollapsibleSpaceThresholdSpecified
        {
            get
            {
                return (this.CollapsibleSpaceThreshold.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maxNumberOfBreaks;

        [System.Xml.Serialization.XmlElementAttribute("MaxNumberOfBreaks")]
        public System.Collections.Generic.List<string> MaxNumberOfBreaks
        {
            get
            {
                return this._maxNumberOfBreaks;
            }
            private set
            {
                this._maxNumberOfBreaks = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaxNumberOfBreaks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxNumberOfBreaksSpecified
        {
            get
            {
                return (this.MaxNumberOfBreaks.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _spacing;

        [System.Xml.Serialization.XmlElementAttribute("Spacing")]
        public System.Collections.Generic.List<string> Spacing
        {
            get
            {
                return this._spacing;
            }
            private set
            {
                this._spacing = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Spacing collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpacingSpecified
        {
            get
            {
                return (this.Spacing.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _includeZero;

        [System.Xml.Serialization.XmlElementAttribute("IncludeZero")]
        public System.Collections.Generic.List<string> IncludeZero
        {
            get
            {
                return this._includeZero;
            }
            private set
            {
                this._includeZero = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IncludeZero collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludeZeroSpecified
        {
            get
            {
                return (this.IncludeZero.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartValueAxesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartValueAxesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartAxisType> _chartAxis;

        [System.Xml.Serialization.XmlElementAttribute("ChartAxis")]
        public System.Collections.Generic.List<ChartAxisType> ChartAxis
        {
            get
            {
                return this._chartAxis;
            }
            private set
            {
                this._chartAxis = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartAxis collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartAxisSpecified
        {
            get
            {
                return (this.ChartAxis.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartValueAxesType" /> class.</para>
        /// </summary>
        public ChartValueAxesType()
        {
            this._chartAxis = new System.Collections.Generic.List<ChartAxisType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartThreeDPropertiesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartThreeDPropertiesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _enabled;

        [System.Xml.Serialization.XmlElementAttribute("Enabled")]
        public System.Collections.Generic.List<string> Enabled
        {
            get
            {
                return this._enabled;
            }
            private set
            {
                this._enabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Enabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified
        {
            get
            {
                return (this.Enabled.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartThreeDPropertiesType" /> class.</para>
        /// </summary>
        public ChartThreeDPropertiesType()
        {
            this._enabled = new System.Collections.Generic.List<string>();
            this._projectionMode = new System.Collections.Generic.List<string>();
            this._rotation = new System.Collections.Generic.List<string>();
            this._inclination = new System.Collections.Generic.List<string>();
            this._perspective = new System.Collections.Generic.List<string>();
            this._depthRatio = new System.Collections.Generic.List<string>();
            this._shading = new System.Collections.Generic.List<string>();
            this._gapDepth = new System.Collections.Generic.List<string>();
            this._wallThickness = new System.Collections.Generic.List<string>();
            this._clustered = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _projectionMode;

        [System.Xml.Serialization.XmlElementAttribute("ProjectionMode")]
        public System.Collections.Generic.List<string> ProjectionMode
        {
            get
            {
                return this._projectionMode;
            }
            private set
            {
                this._projectionMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ProjectionMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProjectionModeSpecified
        {
            get
            {
                return (this.ProjectionMode.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rotation;

        [System.Xml.Serialization.XmlElementAttribute("Rotation")]
        public System.Collections.Generic.List<string> Rotation
        {
            get
            {
                return this._rotation;
            }
            private set
            {
                this._rotation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Rotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotationSpecified
        {
            get
            {
                return (this.Rotation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _inclination;

        [System.Xml.Serialization.XmlElementAttribute("Inclination")]
        public System.Collections.Generic.List<string> Inclination
        {
            get
            {
                return this._inclination;
            }
            private set
            {
                this._inclination = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Inclination collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InclinationSpecified
        {
            get
            {
                return (this.Inclination.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _perspective;

        [System.Xml.Serialization.XmlElementAttribute("Perspective")]
        public System.Collections.Generic.List<string> Perspective
        {
            get
            {
                return this._perspective;
            }
            private set
            {
                this._perspective = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Perspective collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerspectiveSpecified
        {
            get
            {
                return (this.Perspective.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _depthRatio;

        [System.Xml.Serialization.XmlElementAttribute("DepthRatio")]
        public System.Collections.Generic.List<string> DepthRatio
        {
            get
            {
                return this._depthRatio;
            }
            private set
            {
                this._depthRatio = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DepthRatio collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepthRatioSpecified
        {
            get
            {
                return (this.DepthRatio.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _shading;

        [System.Xml.Serialization.XmlElementAttribute("Shading")]
        public System.Collections.Generic.List<string> Shading
        {
            get
            {
                return this._shading;
            }
            private set
            {
                this._shading = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Shading collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShadingSpecified
        {
            get
            {
                return (this.Shading.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _gapDepth;

        [System.Xml.Serialization.XmlElementAttribute("GapDepth")]
        public System.Collections.Generic.List<string> GapDepth
        {
            get
            {
                return this._gapDepth;
            }
            private set
            {
                this._gapDepth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GapDepth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GapDepthSpecified
        {
            get
            {
                return (this.GapDepth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _wallThickness;

        [System.Xml.Serialization.XmlElementAttribute("WallThickness")]
        public System.Collections.Generic.List<string> WallThickness
        {
            get
            {
                return this._wallThickness;
            }
            private set
            {
                this._wallThickness = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WallThickness collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WallThicknessSpecified
        {
            get
            {
                return (this.WallThickness.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _clustered;

        [System.Xml.Serialization.XmlElementAttribute("Clustered")]
        public System.Collections.Generic.List<string> Clustered
        {
            get
            {
                return this._clustered;
            }
            private set
            {
                this._clustered = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Clustered collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClusteredSpecified
        {
            get
            {
                return (this.Clustered.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartAlignTypeType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartAlignTypeType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _axesView;

        [System.Xml.Serialization.XmlElementAttribute("AxesView")]
        public System.Collections.Generic.List<string> AxesView
        {
            get
            {
                return this._axesView;
            }
            private set
            {
                this._axesView = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AxesView collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AxesViewSpecified
        {
            get
            {
                return (this.AxesView.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartAlignTypeType" /> class.</para>
        /// </summary>
        public ChartAlignTypeType()
        {
            this._axesView = new System.Collections.Generic.List<string>();
            this._cursor = new System.Collections.Generic.List<string>();
            this._position = new System.Collections.Generic.List<string>();
            this._innerPlotPosition = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _cursor;

        [System.Xml.Serialization.XmlElementAttribute("Cursor")]
        public System.Collections.Generic.List<string> Cursor
        {
            get
            {
                return this._cursor;
            }
            private set
            {
                this._cursor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Cursor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CursorSpecified
        {
            get
            {
                return (this.Cursor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _innerPlotPosition;

        [System.Xml.Serialization.XmlElementAttribute("InnerPlotPosition")]
        public System.Collections.Generic.List<string> InnerPlotPosition
        {
            get
            {
                return this._innerPlotPosition;
            }
            private set
            {
                this._innerPlotPosition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InnerPlotPosition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InnerPlotPositionSpecified
        {
            get
            {
                return (this.InnerPlotPosition.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartElementPositionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartElementPositionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartElementPositionType" /> class.</para>
        /// </summary>
        public ChartElementPositionType()
        {
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendType> _chartLegend;

        [System.Xml.Serialization.XmlElementAttribute("ChartLegend")]
        public System.Collections.Generic.List<ChartLegendType> ChartLegend
        {
            get
            {
                return this._chartLegend;
            }
            private set
            {
                this._chartLegend = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartLegend collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartLegendSpecified
        {
            get
            {
                return (this.ChartLegend.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendsType" /> class.</para>
        /// </summary>
        public ChartLegendsType()
        {
            this._chartLegend = new System.Collections.Generic.List<ChartLegendType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendType" /> class.</para>
        /// </summary>
        public ChartLegendType()
        {
            this._hidden = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._position = new System.Collections.Generic.List<string>();
            this._layout = new System.Collections.Generic.List<string>();
            this._dockToChartArea = new System.Collections.Generic.List<string>();
            this._dockOutsideChartArea = new System.Collections.Generic.List<string>();
            this._chartElementPosition = new System.Collections.Generic.List<ChartElementPositionType>();
            this._chartLegendTitle = new System.Collections.Generic.List<ChartLegendTitleType>();
            this._autoFitTextDisabled = new System.Collections.Generic.List<string>();
            this._minFontSize = new System.Collections.Generic.List<string>();
            this._chartLegendColumns = new System.Collections.Generic.List<ChartLegendColumnsType>();
            this._headerSeparator = new System.Collections.Generic.List<string>();
            this._headerSeparatorColor = new System.Collections.Generic.List<string>();
            this._columnSeparator = new System.Collections.Generic.List<string>();
            this._columnSeparatorColor = new System.Collections.Generic.List<string>();
            this._columnSpacing = new System.Collections.Generic.List<string>();
            this._interlacedRows = new System.Collections.Generic.List<string>();
            this._interlacedRowsColor = new System.Collections.Generic.List<string>();
            this._equallySpacedItems = new System.Collections.Generic.List<string>();
            this._reversed = new System.Collections.Generic.List<string>();
            this._maxAutoSize = new System.Collections.Generic.List<string>();
            this._textWrapThreshold = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _layout;

        [System.Xml.Serialization.XmlElementAttribute("Layout")]
        public System.Collections.Generic.List<string> Layout
        {
            get
            {
                return this._layout;
            }
            private set
            {
                this._layout = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Layout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutSpecified
        {
            get
            {
                return (this.Layout.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockToChartArea;

        [System.Xml.Serialization.XmlElementAttribute("DockToChartArea")]
        public System.Collections.Generic.List<string> DockToChartArea
        {
            get
            {
                return this._dockToChartArea;
            }
            private set
            {
                this._dockToChartArea = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockToChartArea collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockToChartAreaSpecified
        {
            get
            {
                return (this.DockToChartArea.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockOutsideChartArea;

        [System.Xml.Serialization.XmlElementAttribute("DockOutsideChartArea")]
        public System.Collections.Generic.List<string> DockOutsideChartArea
        {
            get
            {
                return this._dockOutsideChartArea;
            }
            private set
            {
                this._dockOutsideChartArea = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockOutsideChartArea collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockOutsideChartAreaSpecified
        {
            get
            {
                return (this.DockOutsideChartArea.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartElementPositionType> _chartElementPosition;

        [System.Xml.Serialization.XmlElementAttribute("ChartElementPosition")]
        public System.Collections.Generic.List<ChartElementPositionType> ChartElementPosition
        {
            get
            {
                return this._chartElementPosition;
            }
            private set
            {
                this._chartElementPosition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartElementPosition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartElementPositionSpecified
        {
            get
            {
                return (this.ChartElementPosition.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendTitleType> _chartLegendTitle;

        [System.Xml.Serialization.XmlElementAttribute("ChartLegendTitle")]
        public System.Collections.Generic.List<ChartLegendTitleType> ChartLegendTitle
        {
            get
            {
                return this._chartLegendTitle;
            }
            private set
            {
                this._chartLegendTitle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartLegendTitle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartLegendTitleSpecified
        {
            get
            {
                return (this.ChartLegendTitle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _autoFitTextDisabled;

        [System.Xml.Serialization.XmlElementAttribute("AutoFitTextDisabled")]
        public System.Collections.Generic.List<string> AutoFitTextDisabled
        {
            get
            {
                return this._autoFitTextDisabled;
            }
            private set
            {
                this._autoFitTextDisabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AutoFitTextDisabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoFitTextDisabledSpecified
        {
            get
            {
                return (this.AutoFitTextDisabled.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minFontSize;

        [System.Xml.Serialization.XmlElementAttribute("MinFontSize")]
        public System.Collections.Generic.List<string> MinFontSize
        {
            get
            {
                return this._minFontSize;
            }
            private set
            {
                this._minFontSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinFontSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinFontSizeSpecified
        {
            get
            {
                return (this.MinFontSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendColumnsType> _chartLegendColumns;

        [System.Xml.Serialization.XmlElementAttribute("ChartLegendColumns")]
        public System.Collections.Generic.List<ChartLegendColumnsType> ChartLegendColumns
        {
            get
            {
                return this._chartLegendColumns;
            }
            private set
            {
                this._chartLegendColumns = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartLegendColumns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartLegendColumnsSpecified
        {
            get
            {
                return (this.ChartLegendColumns.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _headerSeparator;

        [System.Xml.Serialization.XmlElementAttribute("HeaderSeparator")]
        public System.Collections.Generic.List<string> HeaderSeparator
        {
            get
            {
                return this._headerSeparator;
            }
            private set
            {
                this._headerSeparator = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HeaderSeparator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeaderSeparatorSpecified
        {
            get
            {
                return (this.HeaderSeparator.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _headerSeparatorColor;

        [System.Xml.Serialization.XmlElementAttribute("HeaderSeparatorColor")]
        public System.Collections.Generic.List<string> HeaderSeparatorColor
        {
            get
            {
                return this._headerSeparatorColor;
            }
            private set
            {
                this._headerSeparatorColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HeaderSeparatorColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeaderSeparatorColorSpecified
        {
            get
            {
                return (this.HeaderSeparatorColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _columnSeparator;

        [System.Xml.Serialization.XmlElementAttribute("ColumnSeparator")]
        public System.Collections.Generic.List<string> ColumnSeparator
        {
            get
            {
                return this._columnSeparator;
            }
            private set
            {
                this._columnSeparator = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ColumnSeparator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnSeparatorSpecified
        {
            get
            {
                return (this.ColumnSeparator.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _columnSeparatorColor;

        [System.Xml.Serialization.XmlElementAttribute("ColumnSeparatorColor")]
        public System.Collections.Generic.List<string> ColumnSeparatorColor
        {
            get
            {
                return this._columnSeparatorColor;
            }
            private set
            {
                this._columnSeparatorColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ColumnSeparatorColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnSeparatorColorSpecified
        {
            get
            {
                return (this.ColumnSeparatorColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _columnSpacing;

        [System.Xml.Serialization.XmlElementAttribute("ColumnSpacing")]
        public System.Collections.Generic.List<string> ColumnSpacing
        {
            get
            {
                return this._columnSpacing;
            }
            private set
            {
                this._columnSpacing = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ColumnSpacing collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnSpacingSpecified
        {
            get
            {
                return (this.ColumnSpacing.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interlacedRows;

        [System.Xml.Serialization.XmlElementAttribute("InterlacedRows")]
        public System.Collections.Generic.List<string> InterlacedRows
        {
            get
            {
                return this._interlacedRows;
            }
            private set
            {
                this._interlacedRows = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InterlacedRows collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterlacedRowsSpecified
        {
            get
            {
                return (this.InterlacedRows.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interlacedRowsColor;

        [System.Xml.Serialization.XmlElementAttribute("InterlacedRowsColor")]
        public System.Collections.Generic.List<string> InterlacedRowsColor
        {
            get
            {
                return this._interlacedRowsColor;
            }
            private set
            {
                this._interlacedRowsColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InterlacedRowsColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterlacedRowsColorSpecified
        {
            get
            {
                return (this.InterlacedRowsColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _equallySpacedItems;

        [System.Xml.Serialization.XmlElementAttribute("EquallySpacedItems")]
        public System.Collections.Generic.List<string> EquallySpacedItems
        {
            get
            {
                return this._equallySpacedItems;
            }
            private set
            {
                this._equallySpacedItems = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EquallySpacedItems collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquallySpacedItemsSpecified
        {
            get
            {
                return (this.EquallySpacedItems.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _reversed;

        [System.Xml.Serialization.XmlElementAttribute("Reversed")]
        public System.Collections.Generic.List<string> Reversed
        {
            get
            {
                return this._reversed;
            }
            private set
            {
                this._reversed = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Reversed collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReversedSpecified
        {
            get
            {
                return (this.Reversed.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maxAutoSize;

        [System.Xml.Serialization.XmlElementAttribute("MaxAutoSize")]
        public System.Collections.Generic.List<string> MaxAutoSize
        {
            get
            {
                return this._maxAutoSize;
            }
            private set
            {
                this._maxAutoSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaxAutoSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxAutoSizeSpecified
        {
            get
            {
                return (this.MaxAutoSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textWrapThreshold;

        [System.Xml.Serialization.XmlElementAttribute("TextWrapThreshold")]
        public System.Collections.Generic.List<string> TextWrapThreshold
        {
            get
            {
                return this._textWrapThreshold;
            }
            private set
            {
                this._textWrapThreshold = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextWrapThreshold collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextWrapThresholdSpecified
        {
            get
            {
                return (this.TextWrapThreshold.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendTitleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendTitleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _caption;

        [System.Xml.Serialization.XmlElementAttribute("Caption")]
        public System.Collections.Generic.List<StringLocIDType> Caption
        {
            get
            {
                return this._caption;
            }
            private set
            {
                this._caption = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Caption collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaptionSpecified
        {
            get
            {
                return (this.Caption.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendTitleType" /> class.</para>
        /// </summary>
        public ChartLegendTitleType()
        {
            this._caption = new System.Collections.Generic.List<StringLocIDType>();
            this._titleSeparator = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _titleSeparator;

        [System.Xml.Serialization.XmlElementAttribute("TitleSeparator")]
        public System.Collections.Generic.List<string> TitleSeparator
        {
            get
            {
                return this._titleSeparator;
            }
            private set
            {
                this._titleSeparator = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TitleSeparator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TitleSeparatorSpecified
        {
            get
            {
                return (this.TitleSeparator.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendColumnsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendColumnsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendColumnType> _chartLegendColumn;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartLegendColumn")]
        public System.Collections.Generic.List<ChartLegendColumnType> ChartLegendColumn
        {
            get
            {
                return this._chartLegendColumn;
            }
            private set
            {
                this._chartLegendColumn = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendColumnsType" /> class.</para>
        /// </summary>
        public ChartLegendColumnsType()
        {
            this._chartLegendColumn = new System.Collections.Generic.List<ChartLegendColumnType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendColumnType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendColumnType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendColumnTypeColumnType> _columnType;

        [System.Xml.Serialization.XmlElementAttribute("ColumnType")]
        public System.Collections.Generic.List<ChartLegendColumnTypeColumnType> ColumnType
        {
            get
            {
                return this._columnType;
            }
            private set
            {
                this._columnType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ColumnType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnTypeSpecified
        {
            get
            {
                return (this.ColumnType.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendColumnType" /> class.</para>
        /// </summary>
        public ChartLegendColumnType()
        {
            this._columnType = new System.Collections.Generic.List<ChartLegendColumnTypeColumnType>();
            this._value = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._minimumWidth = new System.Collections.Generic.List<string>();
            this._maximumWidth = new System.Collections.Generic.List<string>();
            this._seriesSymbolWidth = new System.Collections.Generic.List<string>();
            this._seriesSymbolHeight = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimumWidth;

        [System.Xml.Serialization.XmlElementAttribute("MinimumWidth")]
        public System.Collections.Generic.List<string> MinimumWidth
        {
            get
            {
                return this._minimumWidth;
            }
            private set
            {
                this._minimumWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumWidthSpecified
        {
            get
            {
                return (this.MinimumWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximumWidth;

        [System.Xml.Serialization.XmlElementAttribute("MaximumWidth")]
        public System.Collections.Generic.List<string> MaximumWidth
        {
            get
            {
                return this._maximumWidth;
            }
            private set
            {
                this._maximumWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumWidthSpecified
        {
            get
            {
                return (this.MaximumWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _seriesSymbolWidth;

        [System.Xml.Serialization.XmlElementAttribute("SeriesSymbolWidth")]
        public System.Collections.Generic.List<string> SeriesSymbolWidth
        {
            get
            {
                return this._seriesSymbolWidth;
            }
            private set
            {
                this._seriesSymbolWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SeriesSymbolWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeriesSymbolWidthSpecified
        {
            get
            {
                return (this.SeriesSymbolWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _seriesSymbolHeight;

        [System.Xml.Serialization.XmlElementAttribute("SeriesSymbolHeight")]
        public System.Collections.Generic.List<string> SeriesSymbolHeight
        {
            get
            {
                return this._seriesSymbolHeight;
            }
            private set
            {
                this._seriesSymbolHeight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SeriesSymbolHeight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeriesSymbolHeightSpecified
        {
            get
            {
                return (this.SeriesSymbolHeight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendColumnTypeColumnType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ChartLegendColumnTypeColumnType
    {

        Text,

        SeriesSymbol,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartTitlesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartTitlesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartTitleType> _chartTitle;

        [System.Xml.Serialization.XmlElementAttribute("ChartTitle")]
        public System.Collections.Generic.List<ChartTitleType> ChartTitle
        {
            get
            {
                return this._chartTitle;
            }
            private set
            {
                this._chartTitle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartTitle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartTitleSpecified
        {
            get
            {
                return (this.ChartTitle.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartTitlesType" /> class.</para>
        /// </summary>
        public ChartTitlesType()
        {
            this._chartTitle = new System.Collections.Generic.List<ChartTitleType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartTitleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartTitleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _caption;

        [System.Xml.Serialization.XmlElementAttribute("Caption")]
        public System.Collections.Generic.List<StringLocIDType> Caption
        {
            get
            {
                return this._caption;
            }
            private set
            {
                this._caption = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Caption collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaptionSpecified
        {
            get
            {
                return (this.Caption.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartTitleType" /> class.</para>
        /// </summary>
        public ChartTitleType()
        {
            this._caption = new System.Collections.Generic.List<StringLocIDType>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._position = new System.Collections.Generic.List<string>();
            this._dockToChartArea = new System.Collections.Generic.List<string>();
            this._dockOutsideChartArea = new System.Collections.Generic.List<string>();
            this._dockOffset = new System.Collections.Generic.List<string>();
            this._chartElementPosition = new System.Collections.Generic.List<ChartElementPositionType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._textOrientation = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockToChartArea;

        [System.Xml.Serialization.XmlElementAttribute("DockToChartArea")]
        public System.Collections.Generic.List<string> DockToChartArea
        {
            get
            {
                return this._dockToChartArea;
            }
            private set
            {
                this._dockToChartArea = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockToChartArea collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockToChartAreaSpecified
        {
            get
            {
                return (this.DockToChartArea.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockOutsideChartArea;

        [System.Xml.Serialization.XmlElementAttribute("DockOutsideChartArea")]
        public System.Collections.Generic.List<string> DockOutsideChartArea
        {
            get
            {
                return this._dockOutsideChartArea;
            }
            private set
            {
                this._dockOutsideChartArea = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockOutsideChartArea collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockOutsideChartAreaSpecified
        {
            get
            {
                return (this.DockOutsideChartArea.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockOffset;

        [System.Xml.Serialization.XmlElementAttribute("DockOffset")]
        public System.Collections.Generic.List<string> DockOffset
        {
            get
            {
                return this._dockOffset;
            }
            private set
            {
                this._dockOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockOffsetSpecified
        {
            get
            {
                return (this.DockOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartElementPositionType> _chartElementPosition;

        [System.Xml.Serialization.XmlElementAttribute("ChartElementPosition")]
        public System.Collections.Generic.List<ChartElementPositionType> ChartElementPosition
        {
            get
            {
                return this._chartElementPosition;
            }
            private set
            {
                this._chartElementPosition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartElementPosition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartElementPositionSpecified
        {
            get
            {
                return (this.ChartElementPosition.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textOrientation;

        [System.Xml.Serialization.XmlElementAttribute("TextOrientation")]
        public System.Collections.Generic.List<string> TextOrientation
        {
            get
            {
                return this._textOrientation;
            }
            private set
            {
                this._textOrientation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextOrientation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextOrientationSpecified
        {
            get
            {
                return (this.TextOrientation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartCustomPaletteColorsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartCustomPaletteColorsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _chartCustomPaletteColor;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartCustomPaletteColor")]
        public System.Collections.Generic.List<string> ChartCustomPaletteColor
        {
            get
            {
                return this._chartCustomPaletteColor;
            }
            private set
            {
                this._chartCustomPaletteColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartCustomPaletteColorsType" /> class.</para>
        /// </summary>
        public ChartCustomPaletteColorsType()
        {
            this._chartCustomPaletteColor = new System.Collections.Generic.List<string>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ChartTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartBorderSkinType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartBorderSkinType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _chartBorderSkinTypeProperty;

        [System.Xml.Serialization.XmlElementAttribute("ChartBorderSkinType")]
        public System.Collections.Generic.List<string> ChartBorderSkinTypeProperty
        {
            get
            {
                return this._chartBorderSkinTypeProperty;
            }
            private set
            {
                this._chartBorderSkinTypeProperty = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartBorderSkinTypeProperty collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartBorderSkinTypePropertySpecified
        {
            get
            {
                return (this.ChartBorderSkinTypeProperty.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartBorderSkinType" /> class.</para>
        /// </summary>
        public ChartBorderSkinType()
        {
            this._chartBorderSkinTypeProperty = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugePanelType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GaugePanelType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GaugePanelType" /> class.</para>
        /// </summary>
        public GaugePanelType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._sortExpressions = new System.Collections.Generic.List<SortExpressionsType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._noRowsMessage = new System.Collections.Generic.List<string>();
            this._dataSetName = new System.Collections.Generic.List<string>();
            this._pageBreak = new System.Collections.Generic.List<PageBreakType>();
            this._pageName = new System.Collections.Generic.List<string>();
            this._filters = new System.Collections.Generic.List<FiltersType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<GaugePanelTypeDataElementOutput>();
            this._antiAliasing = new System.Collections.Generic.List<string>();
            this._textAntiAliasingQuality = new System.Collections.Generic.List<string>();
            this._autoLayout = new System.Collections.Generic.List<string>();
            this._shadowIntensity = new System.Collections.Generic.List<string>();
            this._radialGauges = new System.Collections.Generic.List<RadialGaugesType>();
            this._linearGauges = new System.Collections.Generic.List<LinearGaugesType>();
            this._numericIndicators = new System.Collections.Generic.List<NumericIndicatorsType>();
            this._stateIndicators = new System.Collections.Generic.List<StateIndicatorsType>();
            this._gaugeImages = new System.Collections.Generic.List<GaugeImagesType>();
            this._gaugeLabels = new System.Collections.Generic.List<GaugeLabelsType>();
            this._backFrame = new System.Collections.Generic.List<BackFrameType>();
            this._topImage = new System.Collections.Generic.List<TopImageType>();
            this._gaugeMember = new System.Collections.Generic.List<GaugeMemberType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionsType> _sortExpressions;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressions")]
        public System.Collections.Generic.List<SortExpressionsType> SortExpressions
        {
            get
            {
                return this._sortExpressions;
            }
            private set
            {
                this._sortExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionsSpecified
        {
            get
            {
                return (this.SortExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _noRowsMessage;

        [System.Xml.Serialization.XmlElementAttribute("NoRowsMessage")]
        public System.Collections.Generic.List<string> NoRowsMessage
        {
            get
            {
                return this._noRowsMessage;
            }
            private set
            {
                this._noRowsMessage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NoRowsMessage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoRowsMessageSpecified
        {
            get
            {
                return (this.NoRowsMessage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSetName;

        [System.Xml.Serialization.XmlElementAttribute("DataSetName")]
        public System.Collections.Generic.List<string> DataSetName
        {
            get
            {
                return this._dataSetName;
            }
            private set
            {
                this._dataSetName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetNameSpecified
        {
            get
            {
                return (this.DataSetName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageBreakType> _pageBreak;

        [System.Xml.Serialization.XmlElementAttribute("PageBreak")]
        public System.Collections.Generic.List<PageBreakType> PageBreak
        {
            get
            {
                return this._pageBreak;
            }
            private set
            {
                this._pageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageBreakSpecified
        {
            get
            {
                return (this.PageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pageName;

        [System.Xml.Serialization.XmlElementAttribute("PageName")]
        public System.Collections.Generic.List<string> PageName
        {
            get
            {
                return this._pageName;
            }
            private set
            {
                this._pageName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageNameSpecified
        {
            get
            {
                return (this.PageName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FiltersType> _filters;

        [System.Xml.Serialization.XmlElementAttribute("Filters")]
        public System.Collections.Generic.List<FiltersType> Filters
        {
            get
            {
                return this._filters;
            }
            private set
            {
                this._filters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugePanelTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<GaugePanelTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _antiAliasing;

        [System.Xml.Serialization.XmlElementAttribute("AntiAliasing")]
        public System.Collections.Generic.List<string> AntiAliasing
        {
            get
            {
                return this._antiAliasing;
            }
            private set
            {
                this._antiAliasing = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AntiAliasing collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AntiAliasingSpecified
        {
            get
            {
                return (this.AntiAliasing.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textAntiAliasingQuality;

        [System.Xml.Serialization.XmlElementAttribute("TextAntiAliasingQuality")]
        public System.Collections.Generic.List<string> TextAntiAliasingQuality
        {
            get
            {
                return this._textAntiAliasingQuality;
            }
            private set
            {
                this._textAntiAliasingQuality = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextAntiAliasingQuality collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextAntiAliasingQualitySpecified
        {
            get
            {
                return (this.TextAntiAliasingQuality.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _autoLayout;

        [System.Xml.Serialization.XmlElementAttribute("AutoLayout")]
        public System.Collections.Generic.List<string> AutoLayout
        {
            get
            {
                return this._autoLayout;
            }
            private set
            {
                this._autoLayout = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AutoLayout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoLayoutSpecified
        {
            get
            {
                return (this.AutoLayout.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _shadowIntensity;

        [System.Xml.Serialization.XmlElementAttribute("ShadowIntensity")]
        public System.Collections.Generic.List<string> ShadowIntensity
        {
            get
            {
                return this._shadowIntensity;
            }
            private set
            {
                this._shadowIntensity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShadowIntensity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShadowIntensitySpecified
        {
            get
            {
                return (this.ShadowIntensity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RadialGaugesType> _radialGauges;

        [System.Xml.Serialization.XmlElementAttribute("RadialGauges")]
        public System.Collections.Generic.List<RadialGaugesType> RadialGauges
        {
            get
            {
                return this._radialGauges;
            }
            private set
            {
                this._radialGauges = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RadialGauges collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadialGaugesSpecified
        {
            get
            {
                return (this.RadialGauges.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LinearGaugesType> _linearGauges;

        [System.Xml.Serialization.XmlElementAttribute("LinearGauges")]
        public System.Collections.Generic.List<LinearGaugesType> LinearGauges
        {
            get
            {
                return this._linearGauges;
            }
            private set
            {
                this._linearGauges = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LinearGauges collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinearGaugesSpecified
        {
            get
            {
                return (this.LinearGauges.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<NumericIndicatorsType> _numericIndicators;

        [System.Xml.Serialization.XmlElementAttribute("NumericIndicators")]
        public System.Collections.Generic.List<NumericIndicatorsType> NumericIndicators
        {
            get
            {
                return this._numericIndicators;
            }
            private set
            {
                this._numericIndicators = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NumericIndicators collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumericIndicatorsSpecified
        {
            get
            {
                return (this.NumericIndicators.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StateIndicatorsType> _stateIndicators;

        [System.Xml.Serialization.XmlElementAttribute("StateIndicators")]
        public System.Collections.Generic.List<StateIndicatorsType> StateIndicators
        {
            get
            {
                return this._stateIndicators;
            }
            private set
            {
                this._stateIndicators = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StateIndicators collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateIndicatorsSpecified
        {
            get
            {
                return (this.StateIndicators.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeImagesType> _gaugeImages;

        [System.Xml.Serialization.XmlElementAttribute("GaugeImages")]
        public System.Collections.Generic.List<GaugeImagesType> GaugeImages
        {
            get
            {
                return this._gaugeImages;
            }
            private set
            {
                this._gaugeImages = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeImages collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeImagesSpecified
        {
            get
            {
                return (this.GaugeImages.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeLabelsType> _gaugeLabels;

        [System.Xml.Serialization.XmlElementAttribute("GaugeLabels")]
        public System.Collections.Generic.List<GaugeLabelsType> GaugeLabels
        {
            get
            {
                return this._gaugeLabels;
            }
            private set
            {
                this._gaugeLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeLabelsSpecified
        {
            get
            {
                return (this.GaugeLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BackFrameType> _backFrame;

        [System.Xml.Serialization.XmlElementAttribute("BackFrame")]
        public System.Collections.Generic.List<BackFrameType> BackFrame
        {
            get
            {
                return this._backFrame;
            }
            private set
            {
                this._backFrame = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackFrame collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackFrameSpecified
        {
            get
            {
                return (this.BackFrame.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TopImageType> _topImage;

        [System.Xml.Serialization.XmlElementAttribute("TopImage")]
        public System.Collections.Generic.List<TopImageType> TopImage
        {
            get
            {
                return this._topImage;
            }
            private set
            {
                this._topImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopImageSpecified
        {
            get
            {
                return (this.TopImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeMemberType> _gaugeMember;

        [System.Xml.Serialization.XmlElementAttribute("GaugeMember")]
        public System.Collections.Generic.List<GaugeMemberType> GaugeMember
        {
            get
            {
                return this._gaugeMember;
            }
            private set
            {
                this._gaugeMember = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeMember collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeMemberSpecified
        {
            get
            {
                return (this.GaugeMember.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugePanelTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum GaugePanelTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RadialGaugesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RadialGaugesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RadialGaugeType> _radialGauge;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RadialGauge")]
        public System.Collections.Generic.List<RadialGaugeType> RadialGauge
        {
            get
            {
                return this._radialGauge;
            }
            private set
            {
                this._radialGauge = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RadialGaugesType" /> class.</para>
        /// </summary>
        public RadialGaugesType()
        {
            this._radialGauge = new System.Collections.Generic.List<RadialGaugeType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RadialGaugeType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RadialGaugeType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RadialGaugeType" /> class.</para>
        /// </summary>
        public RadialGaugeType()
        {
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._parentItem = new System.Collections.Generic.List<string>();
            this._backFrame = new System.Collections.Generic.List<BackFrameType>();
            this._topImage = new System.Collections.Generic.List<TopImageType>();
            this._clipContent = new System.Collections.Generic.List<string>();
            this._aspectRatio = new System.Collections.Generic.List<string>();
            this._gaugeScales = new System.Collections.Generic.List<RadialScalesType>();
            this._pivotX = new System.Collections.Generic.List<string>();
            this._pivotY = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _parentItem;

        [System.Xml.Serialization.XmlElementAttribute("ParentItem")]
        public System.Collections.Generic.List<string> ParentItem
        {
            get
            {
                return this._parentItem;
            }
            private set
            {
                this._parentItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParentItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentItemSpecified
        {
            get
            {
                return (this.ParentItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BackFrameType> _backFrame;

        [System.Xml.Serialization.XmlElementAttribute("BackFrame")]
        public System.Collections.Generic.List<BackFrameType> BackFrame
        {
            get
            {
                return this._backFrame;
            }
            private set
            {
                this._backFrame = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackFrame collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackFrameSpecified
        {
            get
            {
                return (this.BackFrame.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TopImageType> _topImage;

        [System.Xml.Serialization.XmlElementAttribute("TopImage")]
        public System.Collections.Generic.List<TopImageType> TopImage
        {
            get
            {
                return this._topImage;
            }
            private set
            {
                this._topImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopImageSpecified
        {
            get
            {
                return (this.TopImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _clipContent;

        [System.Xml.Serialization.XmlElementAttribute("ClipContent")]
        public System.Collections.Generic.List<string> ClipContent
        {
            get
            {
                return this._clipContent;
            }
            private set
            {
                this._clipContent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ClipContent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClipContentSpecified
        {
            get
            {
                return (this.ClipContent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _aspectRatio;

        [System.Xml.Serialization.XmlElementAttribute("AspectRatio")]
        public System.Collections.Generic.List<string> AspectRatio
        {
            get
            {
                return this._aspectRatio;
            }
            private set
            {
                this._aspectRatio = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AspectRatio collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AspectRatioSpecified
        {
            get
            {
                return (this.AspectRatio.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RadialScalesType> _gaugeScales;

        [System.Xml.Serialization.XmlElementAttribute("GaugeScales")]
        public System.Collections.Generic.List<RadialScalesType> GaugeScales
        {
            get
            {
                return this._gaugeScales;
            }
            private set
            {
                this._gaugeScales = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeScales collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeScalesSpecified
        {
            get
            {
                return (this.GaugeScales.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pivotX;

        [System.Xml.Serialization.XmlElementAttribute("PivotX")]
        public System.Collections.Generic.List<string> PivotX
        {
            get
            {
                return this._pivotX;
            }
            private set
            {
                this._pivotX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PivotX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PivotXSpecified
        {
            get
            {
                return (this.PivotX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pivotY;

        [System.Xml.Serialization.XmlElementAttribute("PivotY")]
        public System.Collections.Generic.List<string> PivotY
        {
            get
            {
                return this._pivotY;
            }
            private set
            {
                this._pivotY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PivotY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PivotYSpecified
        {
            get
            {
                return (this.PivotY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BackFrameType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackFrameType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BackFrameType" /> class.</para>
        /// </summary>
        public BackFrameType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._frameBackground = new System.Collections.Generic.List<FrameBackgroundType>();
            this._frameImage = new System.Collections.Generic.List<FrameImageType>();
            this._frameStyle = new System.Collections.Generic.List<string>();
            this._frameShape = new System.Collections.Generic.List<string>();
            this._frameWidth = new System.Collections.Generic.List<string>();
            this._glassEffect = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FrameBackgroundType> _frameBackground;

        [System.Xml.Serialization.XmlElementAttribute("FrameBackground")]
        public System.Collections.Generic.List<FrameBackgroundType> FrameBackground
        {
            get
            {
                return this._frameBackground;
            }
            private set
            {
                this._frameBackground = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FrameBackground collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrameBackgroundSpecified
        {
            get
            {
                return (this.FrameBackground.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FrameImageType> _frameImage;

        [System.Xml.Serialization.XmlElementAttribute("FrameImage")]
        public System.Collections.Generic.List<FrameImageType> FrameImage
        {
            get
            {
                return this._frameImage;
            }
            private set
            {
                this._frameImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FrameImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrameImageSpecified
        {
            get
            {
                return (this.FrameImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _frameStyle;

        [System.Xml.Serialization.XmlElementAttribute("FrameStyle")]
        public System.Collections.Generic.List<string> FrameStyle
        {
            get
            {
                return this._frameStyle;
            }
            private set
            {
                this._frameStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FrameStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrameStyleSpecified
        {
            get
            {
                return (this.FrameStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _frameShape;

        [System.Xml.Serialization.XmlElementAttribute("FrameShape")]
        public System.Collections.Generic.List<string> FrameShape
        {
            get
            {
                return this._frameShape;
            }
            private set
            {
                this._frameShape = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FrameShape collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrameShapeSpecified
        {
            get
            {
                return (this.FrameShape.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _frameWidth;

        [System.Xml.Serialization.XmlElementAttribute("FrameWidth")]
        public System.Collections.Generic.List<string> FrameWidth
        {
            get
            {
                return this._frameWidth;
            }
            private set
            {
                this._frameWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FrameWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrameWidthSpecified
        {
            get
            {
                return (this.FrameWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _glassEffect;

        [System.Xml.Serialization.XmlElementAttribute("GlassEffect")]
        public System.Collections.Generic.List<string> GlassEffect
        {
            get
            {
                return this._glassEffect;
            }
            private set
            {
                this._glassEffect = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GlassEffect collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GlassEffectSpecified
        {
            get
            {
                return (this.GlassEffect.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FrameBackgroundType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FrameBackgroundType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FrameBackgroundType" /> class.</para>
        /// </summary>
        public FrameBackgroundType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FrameImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FrameImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<string> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FrameImageType" /> class.</para>
        /// </summary>
        public FrameImageType()
        {
            this._source = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._transparentColor = new System.Collections.Generic.List<string>();
            this._hueColor = new System.Collections.Generic.List<string>();
            this._transparency = new System.Collections.Generic.List<string>();
            this._clipImage = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparentColor;

        [System.Xml.Serialization.XmlElementAttribute("TransparentColor")]
        public System.Collections.Generic.List<string> TransparentColor
        {
            get
            {
                return this._transparentColor;
            }
            private set
            {
                this._transparentColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransparentColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentColorSpecified
        {
            get
            {
                return (this.TransparentColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hueColor;

        [System.Xml.Serialization.XmlElementAttribute("HueColor")]
        public System.Collections.Generic.List<string> HueColor
        {
            get
            {
                return this._hueColor;
            }
            private set
            {
                this._hueColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HueColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HueColorSpecified
        {
            get
            {
                return (this.HueColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparency;

        [System.Xml.Serialization.XmlElementAttribute("Transparency")]
        public System.Collections.Generic.List<string> Transparency
        {
            get
            {
                return this._transparency;
            }
            private set
            {
                this._transparency = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transparency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return (this.Transparency.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _clipImage;

        [System.Xml.Serialization.XmlElementAttribute("ClipImage")]
        public System.Collections.Generic.List<string> ClipImage
        {
            get
            {
                return this._clipImage;
            }
            private set
            {
                this._clipImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ClipImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClipImageSpecified
        {
            get
            {
                return (this.ClipImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TopImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TopImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<string> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TopImageType" /> class.</para>
        /// </summary>
        public TopImageType()
        {
            this._source = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._transparentColor = new System.Collections.Generic.List<string>();
            this._hueColor = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparentColor;

        [System.Xml.Serialization.XmlElementAttribute("TransparentColor")]
        public System.Collections.Generic.List<string> TransparentColor
        {
            get
            {
                return this._transparentColor;
            }
            private set
            {
                this._transparentColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransparentColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentColorSpecified
        {
            get
            {
                return (this.TransparentColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hueColor;

        [System.Xml.Serialization.XmlElementAttribute("HueColor")]
        public System.Collections.Generic.List<string> HueColor
        {
            get
            {
                return this._hueColor;
            }
            private set
            {
                this._hueColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HueColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HueColorSpecified
        {
            get
            {
                return (this.HueColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RadialScalesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RadialScalesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RadialScaleType> _radialScale;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RadialScale")]
        public System.Collections.Generic.List<RadialScaleType> RadialScale
        {
            get
            {
                return this._radialScale;
            }
            private set
            {
                this._radialScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RadialScalesType" /> class.</para>
        /// </summary>
        public RadialScalesType()
        {
            this._radialScale = new System.Collections.Generic.List<RadialScaleType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RadialScaleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RadialScaleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RadialScaleType" /> class.</para>
        /// </summary>
        public RadialScaleType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._scaleRanges = new System.Collections.Generic.List<ScaleRangesType>();
            this._scaleLabels = new System.Collections.Generic.List<ScaleLabelsType>();
            this._gaugeMajorTickMarks = new System.Collections.Generic.List<GaugeTickMarksType>();
            this._gaugeMinorTickMarks = new System.Collections.Generic.List<GaugeTickMarksType>();
            this._customLabels = new System.Collections.Generic.List<CustomLabelsType>();
            this._maximumValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._minimumValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._maximumPin = new System.Collections.Generic.List<ScalePinType>();
            this._minimumPin = new System.Collections.Generic.List<ScalePinType>();
            this._interval = new System.Collections.Generic.List<string>();
            this._intervalOffset = new System.Collections.Generic.List<string>();
            this._logarithmic = new System.Collections.Generic.List<string>();
            this._logarithmicBase = new System.Collections.Generic.List<string>();
            this._multiplier = new System.Collections.Generic.List<string>();
            this._reversed = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._tickMarksOnTop = new System.Collections.Generic.List<string>();
            this._gaugePointers = new System.Collections.Generic.List<RadialPointersType>();
            this._radius = new System.Collections.Generic.List<string>();
            this._startAngle = new System.Collections.Generic.List<string>();
            this._sweepAngle = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScaleRangesType> _scaleRanges;

        [System.Xml.Serialization.XmlElementAttribute("ScaleRanges")]
        public System.Collections.Generic.List<ScaleRangesType> ScaleRanges
        {
            get
            {
                return this._scaleRanges;
            }
            private set
            {
                this._scaleRanges = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleRanges collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleRangesSpecified
        {
            get
            {
                return (this.ScaleRanges.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScaleLabelsType> _scaleLabels;

        [System.Xml.Serialization.XmlElementAttribute("ScaleLabels")]
        public System.Collections.Generic.List<ScaleLabelsType> ScaleLabels
        {
            get
            {
                return this._scaleLabels;
            }
            private set
            {
                this._scaleLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleLabelsSpecified
        {
            get
            {
                return (this.ScaleLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeTickMarksType> _gaugeMajorTickMarks;

        [System.Xml.Serialization.XmlElementAttribute("GaugeMajorTickMarks")]
        public System.Collections.Generic.List<GaugeTickMarksType> GaugeMajorTickMarks
        {
            get
            {
                return this._gaugeMajorTickMarks;
            }
            private set
            {
                this._gaugeMajorTickMarks = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeMajorTickMarks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeMajorTickMarksSpecified
        {
            get
            {
                return (this.GaugeMajorTickMarks.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeTickMarksType> _gaugeMinorTickMarks;

        [System.Xml.Serialization.XmlElementAttribute("GaugeMinorTickMarks")]
        public System.Collections.Generic.List<GaugeTickMarksType> GaugeMinorTickMarks
        {
            get
            {
                return this._gaugeMinorTickMarks;
            }
            private set
            {
                this._gaugeMinorTickMarks = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeMinorTickMarks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeMinorTickMarksSpecified
        {
            get
            {
                return (this.GaugeMinorTickMarks.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomLabelsType> _customLabels;

        [System.Xml.Serialization.XmlElementAttribute("CustomLabels")]
        public System.Collections.Generic.List<CustomLabelsType> CustomLabels
        {
            get
            {
                return this._customLabels;
            }
            private set
            {
                this._customLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomLabelsSpecified
        {
            get
            {
                return (this.CustomLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _maximumValue;

        [System.Xml.Serialization.XmlElementAttribute("MaximumValue")]
        public System.Collections.Generic.List<GaugeInputValueType> MaximumValue
        {
            get
            {
                return this._maximumValue;
            }
            private set
            {
                this._maximumValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumValueSpecified
        {
            get
            {
                return (this.MaximumValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _minimumValue;

        [System.Xml.Serialization.XmlElementAttribute("MinimumValue")]
        public System.Collections.Generic.List<GaugeInputValueType> MinimumValue
        {
            get
            {
                return this._minimumValue;
            }
            private set
            {
                this._minimumValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumValueSpecified
        {
            get
            {
                return (this.MinimumValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScalePinType> _maximumPin;

        [System.Xml.Serialization.XmlElementAttribute("MaximumPin")]
        public System.Collections.Generic.List<ScalePinType> MaximumPin
        {
            get
            {
                return this._maximumPin;
            }
            private set
            {
                this._maximumPin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumPin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumPinSpecified
        {
            get
            {
                return (this.MaximumPin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScalePinType> _minimumPin;

        [System.Xml.Serialization.XmlElementAttribute("MinimumPin")]
        public System.Collections.Generic.List<ScalePinType> MinimumPin
        {
            get
            {
                return this._minimumPin;
            }
            private set
            {
                this._minimumPin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumPin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumPinSpecified
        {
            get
            {
                return (this.MinimumPin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffset")]
        public System.Collections.Generic.List<string> IntervalOffset
        {
            get
            {
                return this._intervalOffset;
            }
            private set
            {
                this._intervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetSpecified
        {
            get
            {
                return (this.IntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _logarithmic;

        [System.Xml.Serialization.XmlElementAttribute("Logarithmic")]
        public System.Collections.Generic.List<string> Logarithmic
        {
            get
            {
                return this._logarithmic;
            }
            private set
            {
                this._logarithmic = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Logarithmic collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogarithmicSpecified
        {
            get
            {
                return (this.Logarithmic.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _logarithmicBase;

        [System.Xml.Serialization.XmlElementAttribute("LogarithmicBase")]
        public System.Collections.Generic.List<string> LogarithmicBase
        {
            get
            {
                return this._logarithmicBase;
            }
            private set
            {
                this._logarithmicBase = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LogarithmicBase collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogarithmicBaseSpecified
        {
            get
            {
                return (this.LogarithmicBase.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _multiplier;

        [System.Xml.Serialization.XmlElementAttribute("Multiplier")]
        public System.Collections.Generic.List<string> Multiplier
        {
            get
            {
                return this._multiplier;
            }
            private set
            {
                this._multiplier = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Multiplier collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiplierSpecified
        {
            get
            {
                return (this.Multiplier.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _reversed;

        [System.Xml.Serialization.XmlElementAttribute("Reversed")]
        public System.Collections.Generic.List<string> Reversed
        {
            get
            {
                return this._reversed;
            }
            private set
            {
                this._reversed = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Reversed collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReversedSpecified
        {
            get
            {
                return (this.Reversed.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _tickMarksOnTop;

        [System.Xml.Serialization.XmlElementAttribute("TickMarksOnTop")]
        public System.Collections.Generic.List<string> TickMarksOnTop
        {
            get
            {
                return this._tickMarksOnTop;
            }
            private set
            {
                this._tickMarksOnTop = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TickMarksOnTop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TickMarksOnTopSpecified
        {
            get
            {
                return (this.TickMarksOnTop.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RadialPointersType> _gaugePointers;

        [System.Xml.Serialization.XmlElementAttribute("GaugePointers")]
        public System.Collections.Generic.List<RadialPointersType> GaugePointers
        {
            get
            {
                return this._gaugePointers;
            }
            private set
            {
                this._gaugePointers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugePointers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugePointersSpecified
        {
            get
            {
                return (this.GaugePointers.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _radius;

        [System.Xml.Serialization.XmlElementAttribute("Radius")]
        public System.Collections.Generic.List<string> Radius
        {
            get
            {
                return this._radius;
            }
            private set
            {
                this._radius = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Radius collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadiusSpecified
        {
            get
            {
                return (this.Radius.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startAngle;

        [System.Xml.Serialization.XmlElementAttribute("StartAngle")]
        public System.Collections.Generic.List<string> StartAngle
        {
            get
            {
                return this._startAngle;
            }
            private set
            {
                this._startAngle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartAngle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartAngleSpecified
        {
            get
            {
                return (this.StartAngle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _sweepAngle;

        [System.Xml.Serialization.XmlElementAttribute("SweepAngle")]
        public System.Collections.Generic.List<string> SweepAngle
        {
            get
            {
                return this._sweepAngle;
            }
            private set
            {
                this._sweepAngle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SweepAngle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SweepAngleSpecified
        {
            get
            {
                return (this.SweepAngle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScaleRangesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScaleRangesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScaleRangeType> _scaleRange;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ScaleRange")]
        public System.Collections.Generic.List<ScaleRangeType> ScaleRange
        {
            get
            {
                return this._scaleRange;
            }
            private set
            {
                this._scaleRange = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ScaleRangesType" /> class.</para>
        /// </summary>
        public ScaleRangesType()
        {
            this._scaleRange = new System.Collections.Generic.List<ScaleRangeType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScaleRangeType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScaleRangeType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ScaleRangeType" /> class.</para>
        /// </summary>
        public ScaleRangeType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._backgroundGradientType = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._startValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._endValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._startWidth = new System.Collections.Generic.List<string>();
            this._endWidth = new System.Collections.Generic.List<string>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._inRangeBarPointerColor = new System.Collections.Generic.List<string>();
            this._inRangeLabelColor = new System.Collections.Generic.List<string>();
            this._inRangeTickMarksColor = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _backgroundGradientType;

        [System.Xml.Serialization.XmlElementAttribute("BackgroundGradientType")]
        public System.Collections.Generic.List<string> BackgroundGradientType
        {
            get
            {
                return this._backgroundGradientType;
            }
            private set
            {
                this._backgroundGradientType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackgroundGradientType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackgroundGradientTypeSpecified
        {
            get
            {
                return (this.BackgroundGradientType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<GaugeInputValueType> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<GaugeInputValueType> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startWidth;

        [System.Xml.Serialization.XmlElementAttribute("StartWidth")]
        public System.Collections.Generic.List<string> StartWidth
        {
            get
            {
                return this._startWidth;
            }
            private set
            {
                this._startWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartWidthSpecified
        {
            get
            {
                return (this.StartWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endWidth;

        [System.Xml.Serialization.XmlElementAttribute("EndWidth")]
        public System.Collections.Generic.List<string> EndWidth
        {
            get
            {
                return this._endWidth;
            }
            private set
            {
                this._endWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndWidthSpecified
        {
            get
            {
                return (this.EndWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _inRangeBarPointerColor;

        [System.Xml.Serialization.XmlElementAttribute("InRangeBarPointerColor")]
        public System.Collections.Generic.List<string> InRangeBarPointerColor
        {
            get
            {
                return this._inRangeBarPointerColor;
            }
            private set
            {
                this._inRangeBarPointerColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InRangeBarPointerColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InRangeBarPointerColorSpecified
        {
            get
            {
                return (this.InRangeBarPointerColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _inRangeLabelColor;

        [System.Xml.Serialization.XmlElementAttribute("InRangeLabelColor")]
        public System.Collections.Generic.List<string> InRangeLabelColor
        {
            get
            {
                return this._inRangeLabelColor;
            }
            private set
            {
                this._inRangeLabelColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InRangeLabelColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InRangeLabelColorSpecified
        {
            get
            {
                return (this.InRangeLabelColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _inRangeTickMarksColor;

        [System.Xml.Serialization.XmlElementAttribute("InRangeTickMarksColor")]
        public System.Collections.Generic.List<string> InRangeTickMarksColor
        {
            get
            {
                return this._inRangeTickMarksColor;
            }
            private set
            {
                this._inRangeTickMarksColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InRangeTickMarksColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InRangeTickMarksColorSpecified
        {
            get
            {
                return (this.InRangeTickMarksColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugeInputValueType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GaugeInputValueType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GaugeInputValueType" /> class.</para>
        /// </summary>
        public GaugeInputValueType()
        {
            this._value = new System.Collections.Generic.List<string>();
            this._formula = new System.Collections.Generic.List<string>();
            this._minPercent = new System.Collections.Generic.List<string>();
            this._maxPercent = new System.Collections.Generic.List<string>();
            this._multiplier = new System.Collections.Generic.List<string>();
            this._addConstant = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<GaugeInputValueTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _formula;

        [System.Xml.Serialization.XmlElementAttribute("Formula")]
        public System.Collections.Generic.List<string> Formula
        {
            get
            {
                return this._formula;
            }
            private set
            {
                this._formula = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Formula collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FormulaSpecified
        {
            get
            {
                return (this.Formula.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minPercent;

        [System.Xml.Serialization.XmlElementAttribute("MinPercent")]
        public System.Collections.Generic.List<string> MinPercent
        {
            get
            {
                return this._minPercent;
            }
            private set
            {
                this._minPercent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinPercent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinPercentSpecified
        {
            get
            {
                return (this.MinPercent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maxPercent;

        [System.Xml.Serialization.XmlElementAttribute("MaxPercent")]
        public System.Collections.Generic.List<string> MaxPercent
        {
            get
            {
                return this._maxPercent;
            }
            private set
            {
                this._maxPercent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaxPercent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxPercentSpecified
        {
            get
            {
                return (this.MaxPercent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _multiplier;

        [System.Xml.Serialization.XmlElementAttribute("Multiplier")]
        public System.Collections.Generic.List<string> Multiplier
        {
            get
            {
                return this._multiplier;
            }
            private set
            {
                this._multiplier = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Multiplier collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiplierSpecified
        {
            get
            {
                return (this.Multiplier.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _addConstant;

        [System.Xml.Serialization.XmlElementAttribute("AddConstant")]
        public System.Collections.Generic.List<string> AddConstant
        {
            get
            {
                return this._addConstant;
            }
            private set
            {
                this._addConstant = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AddConstant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddConstantSpecified
        {
            get
            {
                return (this.AddConstant.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<GaugeInputValueTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugeInputValueTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum GaugeInputValueTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScaleLabelsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScaleLabelsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ScaleLabelsType" /> class.</para>
        /// </summary>
        public ScaleLabelsType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._interval = new System.Collections.Generic.List<string>();
            this._intervalOffset = new System.Collections.Generic.List<string>();
            this._allowUpsideDown = new System.Collections.Generic.List<string>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._fontAngle = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._rotateLabels = new System.Collections.Generic.List<string>();
            this._showEndLabels = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._useFontPercent = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffset")]
        public System.Collections.Generic.List<string> IntervalOffset
        {
            get
            {
                return this._intervalOffset;
            }
            private set
            {
                this._intervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetSpecified
        {
            get
            {
                return (this.IntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _allowUpsideDown;

        [System.Xml.Serialization.XmlElementAttribute("AllowUpsideDown")]
        public System.Collections.Generic.List<string> AllowUpsideDown
        {
            get
            {
                return this._allowUpsideDown;
            }
            private set
            {
                this._allowUpsideDown = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AllowUpsideDown collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowUpsideDownSpecified
        {
            get
            {
                return (this.AllowUpsideDown.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _fontAngle;

        [System.Xml.Serialization.XmlElementAttribute("FontAngle")]
        public System.Collections.Generic.List<string> FontAngle
        {
            get
            {
                return this._fontAngle;
            }
            private set
            {
                this._fontAngle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FontAngle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontAngleSpecified
        {
            get
            {
                return (this.FontAngle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rotateLabels;

        [System.Xml.Serialization.XmlElementAttribute("RotateLabels")]
        public System.Collections.Generic.List<string> RotateLabels
        {
            get
            {
                return this._rotateLabels;
            }
            private set
            {
                this._rotateLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RotateLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotateLabelsSpecified
        {
            get
            {
                return (this.RotateLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showEndLabels;

        [System.Xml.Serialization.XmlElementAttribute("ShowEndLabels")]
        public System.Collections.Generic.List<string> ShowEndLabels
        {
            get
            {
                return this._showEndLabels;
            }
            private set
            {
                this._showEndLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowEndLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowEndLabelsSpecified
        {
            get
            {
                return (this.ShowEndLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useFontPercent;

        [System.Xml.Serialization.XmlElementAttribute("UseFontPercent")]
        public System.Collections.Generic.List<string> UseFontPercent
        {
            get
            {
                return this._useFontPercent;
            }
            private set
            {
                this._useFontPercent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseFontPercent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseFontPercentSpecified
        {
            get
            {
                return (this.UseFontPercent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugeTickMarksType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GaugeTickMarksType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GaugeTickMarksType" /> class.</para>
        /// </summary>
        public GaugeTickMarksType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._tickMarkImage = new System.Collections.Generic.List<TopImageType>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._enableGradient = new System.Collections.Generic.List<string>();
            this._gradientDensity = new System.Collections.Generic.List<string>();
            this._length = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._shape = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._interval = new System.Collections.Generic.List<string>();
            this._intervalOffset = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TopImageType> _tickMarkImage;

        [System.Xml.Serialization.XmlElementAttribute("TickMarkImage")]
        public System.Collections.Generic.List<TopImageType> TickMarkImage
        {
            get
            {
                return this._tickMarkImage;
            }
            private set
            {
                this._tickMarkImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TickMarkImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TickMarkImageSpecified
        {
            get
            {
                return (this.TickMarkImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _enableGradient;

        [System.Xml.Serialization.XmlElementAttribute("EnableGradient")]
        public System.Collections.Generic.List<string> EnableGradient
        {
            get
            {
                return this._enableGradient;
            }
            private set
            {
                this._enableGradient = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EnableGradient collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnableGradientSpecified
        {
            get
            {
                return (this.EnableGradient.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _gradientDensity;

        [System.Xml.Serialization.XmlElementAttribute("GradientDensity")]
        public System.Collections.Generic.List<string> GradientDensity
        {
            get
            {
                return this._gradientDensity;
            }
            private set
            {
                this._gradientDensity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GradientDensity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GradientDensitySpecified
        {
            get
            {
                return (this.GradientDensity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _length;

        [System.Xml.Serialization.XmlElementAttribute("Length")]
        public System.Collections.Generic.List<string> Length
        {
            get
            {
                return this._length;
            }
            private set
            {
                this._length = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Length collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified
        {
            get
            {
                return (this.Length.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _shape;

        [System.Xml.Serialization.XmlElementAttribute("Shape")]
        public System.Collections.Generic.List<string> Shape
        {
            get
            {
                return this._shape;
            }
            private set
            {
                this._shape = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Shape collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShapeSpecified
        {
            get
            {
                return (this.Shape.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffset")]
        public System.Collections.Generic.List<string> IntervalOffset
        {
            get
            {
                return this._intervalOffset;
            }
            private set
            {
                this._intervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetSpecified
        {
            get
            {
                return (this.IntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CustomLabelsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomLabelsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomLabelType> _customLabel;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("CustomLabel")]
        public System.Collections.Generic.List<CustomLabelType> CustomLabel
        {
            get
            {
                return this._customLabel;
            }
            private set
            {
                this._customLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CustomLabelsType" /> class.</para>
        /// </summary>
        public CustomLabelsType()
        {
            this._customLabel = new System.Collections.Generic.List<CustomLabelType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CustomLabelType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomLabelType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CustomLabelType" /> class.</para>
        /// </summary>
        public CustomLabelType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._tickMarkStyle = new System.Collections.Generic.List<TickMarkStyleType>();
            this._text = new System.Collections.Generic.List<string>();
            this._allowUpsideDown = new System.Collections.Generic.List<string>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._fontAngle = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._rotateLabel = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._useFontPercent = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TickMarkStyleType> _tickMarkStyle;

        [System.Xml.Serialization.XmlElementAttribute("TickMarkStyle")]
        public System.Collections.Generic.List<TickMarkStyleType> TickMarkStyle
        {
            get
            {
                return this._tickMarkStyle;
            }
            private set
            {
                this._tickMarkStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TickMarkStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TickMarkStyleSpecified
        {
            get
            {
                return (this.TickMarkStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _text;

        [System.Xml.Serialization.XmlElementAttribute("Text")]
        public System.Collections.Generic.List<string> Text
        {
            get
            {
                return this._text;
            }
            private set
            {
                this._text = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Text collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextSpecified
        {
            get
            {
                return (this.Text.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _allowUpsideDown;

        [System.Xml.Serialization.XmlElementAttribute("AllowUpsideDown")]
        public System.Collections.Generic.List<string> AllowUpsideDown
        {
            get
            {
                return this._allowUpsideDown;
            }
            private set
            {
                this._allowUpsideDown = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AllowUpsideDown collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowUpsideDownSpecified
        {
            get
            {
                return (this.AllowUpsideDown.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _fontAngle;

        [System.Xml.Serialization.XmlElementAttribute("FontAngle")]
        public System.Collections.Generic.List<string> FontAngle
        {
            get
            {
                return this._fontAngle;
            }
            private set
            {
                this._fontAngle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FontAngle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontAngleSpecified
        {
            get
            {
                return (this.FontAngle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rotateLabel;

        [System.Xml.Serialization.XmlElementAttribute("RotateLabel")]
        public System.Collections.Generic.List<string> RotateLabel
        {
            get
            {
                return this._rotateLabel;
            }
            private set
            {
                this._rotateLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RotateLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotateLabelSpecified
        {
            get
            {
                return (this.RotateLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useFontPercent;

        [System.Xml.Serialization.XmlElementAttribute("UseFontPercent")]
        public System.Collections.Generic.List<string> UseFontPercent
        {
            get
            {
                return this._useFontPercent;
            }
            private set
            {
                this._useFontPercent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseFontPercent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseFontPercentSpecified
        {
            get
            {
                return (this.UseFontPercent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TickMarkStyleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TickMarkStyleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TickMarkStyleType" /> class.</para>
        /// </summary>
        public TickMarkStyleType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._tickMarkImage = new System.Collections.Generic.List<TopImageType>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._enableGradient = new System.Collections.Generic.List<string>();
            this._gradientDensity = new System.Collections.Generic.List<string>();
            this._length = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._shape = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TopImageType> _tickMarkImage;

        [System.Xml.Serialization.XmlElementAttribute("TickMarkImage")]
        public System.Collections.Generic.List<TopImageType> TickMarkImage
        {
            get
            {
                return this._tickMarkImage;
            }
            private set
            {
                this._tickMarkImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TickMarkImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TickMarkImageSpecified
        {
            get
            {
                return (this.TickMarkImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _enableGradient;

        [System.Xml.Serialization.XmlElementAttribute("EnableGradient")]
        public System.Collections.Generic.List<string> EnableGradient
        {
            get
            {
                return this._enableGradient;
            }
            private set
            {
                this._enableGradient = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EnableGradient collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnableGradientSpecified
        {
            get
            {
                return (this.EnableGradient.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _gradientDensity;

        [System.Xml.Serialization.XmlElementAttribute("GradientDensity")]
        public System.Collections.Generic.List<string> GradientDensity
        {
            get
            {
                return this._gradientDensity;
            }
            private set
            {
                this._gradientDensity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GradientDensity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GradientDensitySpecified
        {
            get
            {
                return (this.GradientDensity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _length;

        [System.Xml.Serialization.XmlElementAttribute("Length")]
        public System.Collections.Generic.List<string> Length
        {
            get
            {
                return this._length;
            }
            private set
            {
                this._length = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Length collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified
        {
            get
            {
                return (this.Length.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _shape;

        [System.Xml.Serialization.XmlElementAttribute("Shape")]
        public System.Collections.Generic.List<string> Shape
        {
            get
            {
                return this._shape;
            }
            private set
            {
                this._shape = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Shape collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShapeSpecified
        {
            get
            {
                return (this.Shape.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScalePinType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScalePinType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ScalePinType" /> class.</para>
        /// </summary>
        public ScalePinType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._tickMarkImage = new System.Collections.Generic.List<TopImageType>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._enableGradient = new System.Collections.Generic.List<string>();
            this._gradientDensity = new System.Collections.Generic.List<string>();
            this._length = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._shape = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._location = new System.Collections.Generic.List<string>();
            this._enable = new System.Collections.Generic.List<string>();
            this._pinLabel = new System.Collections.Generic.List<PinLabelType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TopImageType> _tickMarkImage;

        [System.Xml.Serialization.XmlElementAttribute("TickMarkImage")]
        public System.Collections.Generic.List<TopImageType> TickMarkImage
        {
            get
            {
                return this._tickMarkImage;
            }
            private set
            {
                this._tickMarkImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TickMarkImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TickMarkImageSpecified
        {
            get
            {
                return (this.TickMarkImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _enableGradient;

        [System.Xml.Serialization.XmlElementAttribute("EnableGradient")]
        public System.Collections.Generic.List<string> EnableGradient
        {
            get
            {
                return this._enableGradient;
            }
            private set
            {
                this._enableGradient = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EnableGradient collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnableGradientSpecified
        {
            get
            {
                return (this.EnableGradient.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _gradientDensity;

        [System.Xml.Serialization.XmlElementAttribute("GradientDensity")]
        public System.Collections.Generic.List<string> GradientDensity
        {
            get
            {
                return this._gradientDensity;
            }
            private set
            {
                this._gradientDensity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GradientDensity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GradientDensitySpecified
        {
            get
            {
                return (this.GradientDensity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _length;

        [System.Xml.Serialization.XmlElementAttribute("Length")]
        public System.Collections.Generic.List<string> Length
        {
            get
            {
                return this._length;
            }
            private set
            {
                this._length = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Length collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified
        {
            get
            {
                return (this.Length.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _shape;

        [System.Xml.Serialization.XmlElementAttribute("Shape")]
        public System.Collections.Generic.List<string> Shape
        {
            get
            {
                return this._shape;
            }
            private set
            {
                this._shape = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Shape collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShapeSpecified
        {
            get
            {
                return (this.Shape.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _location;

        [System.Xml.Serialization.XmlElementAttribute("Location")]
        public System.Collections.Generic.List<string> Location
        {
            get
            {
                return this._location;
            }
            private set
            {
                this._location = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Location collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocationSpecified
        {
            get
            {
                return (this.Location.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _enable;

        [System.Xml.Serialization.XmlElementAttribute("Enable")]
        public System.Collections.Generic.List<string> Enable
        {
            get
            {
                return this._enable;
            }
            private set
            {
                this._enable = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Enable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnableSpecified
        {
            get
            {
                return (this.Enable.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PinLabelType> _pinLabel;

        [System.Xml.Serialization.XmlElementAttribute("PinLabel")]
        public System.Collections.Generic.List<PinLabelType> PinLabel
        {
            get
            {
                return this._pinLabel;
            }
            private set
            {
                this._pinLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PinLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PinLabelSpecified
        {
            get
            {
                return (this.PinLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PinLabelType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PinLabelType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PinLabelType" /> class.</para>
        /// </summary>
        public PinLabelType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._text = new System.Collections.Generic.List<string>();
            this._allowUpsideDown = new System.Collections.Generic.List<string>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._fontAngle = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._rotateLabel = new System.Collections.Generic.List<string>();
            this._useFontPercent = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _text;

        [System.Xml.Serialization.XmlElementAttribute("Text")]
        public System.Collections.Generic.List<string> Text
        {
            get
            {
                return this._text;
            }
            private set
            {
                this._text = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Text collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextSpecified
        {
            get
            {
                return (this.Text.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _allowUpsideDown;

        [System.Xml.Serialization.XmlElementAttribute("AllowUpsideDown")]
        public System.Collections.Generic.List<string> AllowUpsideDown
        {
            get
            {
                return this._allowUpsideDown;
            }
            private set
            {
                this._allowUpsideDown = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AllowUpsideDown collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowUpsideDownSpecified
        {
            get
            {
                return (this.AllowUpsideDown.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _fontAngle;

        [System.Xml.Serialization.XmlElementAttribute("FontAngle")]
        public System.Collections.Generic.List<string> FontAngle
        {
            get
            {
                return this._fontAngle;
            }
            private set
            {
                this._fontAngle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FontAngle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontAngleSpecified
        {
            get
            {
                return (this.FontAngle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rotateLabel;

        [System.Xml.Serialization.XmlElementAttribute("RotateLabel")]
        public System.Collections.Generic.List<string> RotateLabel
        {
            get
            {
                return this._rotateLabel;
            }
            private set
            {
                this._rotateLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RotateLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotateLabelSpecified
        {
            get
            {
                return (this.RotateLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useFontPercent;

        [System.Xml.Serialization.XmlElementAttribute("UseFontPercent")]
        public System.Collections.Generic.List<string> UseFontPercent
        {
            get
            {
                return this._useFontPercent;
            }
            private set
            {
                this._useFontPercent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseFontPercent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseFontPercentSpecified
        {
            get
            {
                return (this.UseFontPercent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RadialPointersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RadialPointersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RadialPointerType> _radialPointer;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RadialPointer")]
        public System.Collections.Generic.List<RadialPointerType> RadialPointer
        {
            get
            {
                return this._radialPointer;
            }
            private set
            {
                this._radialPointer = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RadialPointersType" /> class.</para>
        /// </summary>
        public RadialPointersType()
        {
            this._radialPointer = new System.Collections.Generic.List<RadialPointerType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RadialPointerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RadialPointerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RadialPointerType" /> class.</para>
        /// </summary>
        public RadialPointerType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._gaugeInputValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._pointerImage = new System.Collections.Generic.List<PointerImageType>();
            this._barStart = new System.Collections.Generic.List<string>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._markerLength = new System.Collections.Generic.List<string>();
            this._markerStyle = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._snappingEnabled = new System.Collections.Generic.List<string>();
            this._snappingInterval = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._type = new System.Collections.Generic.List<string>();
            this._pointerCap = new System.Collections.Generic.List<PointerCapType>();
            this._needleStyle = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _gaugeInputValue;

        [System.Xml.Serialization.XmlElementAttribute("GaugeInputValue")]
        public System.Collections.Generic.List<GaugeInputValueType> GaugeInputValue
        {
            get
            {
                return this._gaugeInputValue;
            }
            private set
            {
                this._gaugeInputValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeInputValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeInputValueSpecified
        {
            get
            {
                return (this.GaugeInputValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PointerImageType> _pointerImage;

        [System.Xml.Serialization.XmlElementAttribute("PointerImage")]
        public System.Collections.Generic.List<PointerImageType> PointerImage
        {
            get
            {
                return this._pointerImage;
            }
            private set
            {
                this._pointerImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PointerImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PointerImageSpecified
        {
            get
            {
                return (this.PointerImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _barStart;

        [System.Xml.Serialization.XmlElementAttribute("BarStart")]
        public System.Collections.Generic.List<string> BarStart
        {
            get
            {
                return this._barStart;
            }
            private set
            {
                this._barStart = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BarStart collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarStartSpecified
        {
            get
            {
                return (this.BarStart.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _markerLength;

        [System.Xml.Serialization.XmlElementAttribute("MarkerLength")]
        public System.Collections.Generic.List<string> MarkerLength
        {
            get
            {
                return this._markerLength;
            }
            private set
            {
                this._markerLength = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MarkerLength collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerLengthSpecified
        {
            get
            {
                return (this.MarkerLength.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _markerStyle;

        [System.Xml.Serialization.XmlElementAttribute("MarkerStyle")]
        public System.Collections.Generic.List<string> MarkerStyle
        {
            get
            {
                return this._markerStyle;
            }
            private set
            {
                this._markerStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MarkerStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerStyleSpecified
        {
            get
            {
                return (this.MarkerStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _snappingEnabled;

        [System.Xml.Serialization.XmlElementAttribute("SnappingEnabled")]
        public System.Collections.Generic.List<string> SnappingEnabled
        {
            get
            {
                return this._snappingEnabled;
            }
            private set
            {
                this._snappingEnabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SnappingEnabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SnappingEnabledSpecified
        {
            get
            {
                return (this.SnappingEnabled.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _snappingInterval;

        [System.Xml.Serialization.XmlElementAttribute("SnappingInterval")]
        public System.Collections.Generic.List<string> SnappingInterval
        {
            get
            {
                return this._snappingInterval;
            }
            private set
            {
                this._snappingInterval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SnappingInterval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SnappingIntervalSpecified
        {
            get
            {
                return (this.SnappingInterval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _type;

        [System.Xml.Serialization.XmlElementAttribute("Type")]
        public System.Collections.Generic.List<string> Type
        {
            get
            {
                return this._type;
            }
            private set
            {
                this._type = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Type collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return (this.Type.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PointerCapType> _pointerCap;

        [System.Xml.Serialization.XmlElementAttribute("PointerCap")]
        public System.Collections.Generic.List<PointerCapType> PointerCap
        {
            get
            {
                return this._pointerCap;
            }
            private set
            {
                this._pointerCap = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PointerCap collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PointerCapSpecified
        {
            get
            {
                return (this.PointerCap.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _needleStyle;

        [System.Xml.Serialization.XmlElementAttribute("NeedleStyle")]
        public System.Collections.Generic.List<string> NeedleStyle
        {
            get
            {
                return this._needleStyle;
            }
            private set
            {
                this._needleStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NeedleStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NeedleStyleSpecified
        {
            get
            {
                return (this.NeedleStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PointerImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PointerImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<string> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PointerImageType" /> class.</para>
        /// </summary>
        public PointerImageType()
        {
            this._source = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._transparentColor = new System.Collections.Generic.List<string>();
            this._hueColor = new System.Collections.Generic.List<string>();
            this._transparency = new System.Collections.Generic.List<string>();
            this._offsetX = new System.Collections.Generic.List<string>();
            this._offsetY = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparentColor;

        [System.Xml.Serialization.XmlElementAttribute("TransparentColor")]
        public System.Collections.Generic.List<string> TransparentColor
        {
            get
            {
                return this._transparentColor;
            }
            private set
            {
                this._transparentColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransparentColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentColorSpecified
        {
            get
            {
                return (this.TransparentColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hueColor;

        [System.Xml.Serialization.XmlElementAttribute("HueColor")]
        public System.Collections.Generic.List<string> HueColor
        {
            get
            {
                return this._hueColor;
            }
            private set
            {
                this._hueColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HueColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HueColorSpecified
        {
            get
            {
                return (this.HueColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparency;

        [System.Xml.Serialization.XmlElementAttribute("Transparency")]
        public System.Collections.Generic.List<string> Transparency
        {
            get
            {
                return this._transparency;
            }
            private set
            {
                this._transparency = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transparency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return (this.Transparency.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetX;

        [System.Xml.Serialization.XmlElementAttribute("OffsetX")]
        public System.Collections.Generic.List<string> OffsetX
        {
            get
            {
                return this._offsetX;
            }
            private set
            {
                this._offsetX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetXSpecified
        {
            get
            {
                return (this.OffsetX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetY;

        [System.Xml.Serialization.XmlElementAttribute("OffsetY")]
        public System.Collections.Generic.List<string> OffsetY
        {
            get
            {
                return this._offsetY;
            }
            private set
            {
                this._offsetY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetYSpecified
        {
            get
            {
                return (this.OffsetY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PointerCapType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PointerCapType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PointerCapType" /> class.</para>
        /// </summary>
        public PointerCapType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._capImage = new System.Collections.Generic.List<CapImageType>();
            this._onTop = new System.Collections.Generic.List<string>();
            this._reflection = new System.Collections.Generic.List<string>();
            this._capStyle = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CapImageType> _capImage;

        [System.Xml.Serialization.XmlElementAttribute("CapImage")]
        public System.Collections.Generic.List<CapImageType> CapImage
        {
            get
            {
                return this._capImage;
            }
            private set
            {
                this._capImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CapImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CapImageSpecified
        {
            get
            {
                return (this.CapImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _onTop;

        [System.Xml.Serialization.XmlElementAttribute("OnTop")]
        public System.Collections.Generic.List<string> OnTop
        {
            get
            {
                return this._onTop;
            }
            private set
            {
                this._onTop = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OnTop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnTopSpecified
        {
            get
            {
                return (this.OnTop.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _reflection;

        [System.Xml.Serialization.XmlElementAttribute("Reflection")]
        public System.Collections.Generic.List<string> Reflection
        {
            get
            {
                return this._reflection;
            }
            private set
            {
                this._reflection = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Reflection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReflectionSpecified
        {
            get
            {
                return (this.Reflection.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _capStyle;

        [System.Xml.Serialization.XmlElementAttribute("CapStyle")]
        public System.Collections.Generic.List<string> CapStyle
        {
            get
            {
                return this._capStyle;
            }
            private set
            {
                this._capStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CapStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CapStyleSpecified
        {
            get
            {
                return (this.CapStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CapImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CapImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<string> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CapImageType" /> class.</para>
        /// </summary>
        public CapImageType()
        {
            this._source = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._transparentColor = new System.Collections.Generic.List<string>();
            this._hueColor = new System.Collections.Generic.List<string>();
            this._offsetX = new System.Collections.Generic.List<string>();
            this._offsetY = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparentColor;

        [System.Xml.Serialization.XmlElementAttribute("TransparentColor")]
        public System.Collections.Generic.List<string> TransparentColor
        {
            get
            {
                return this._transparentColor;
            }
            private set
            {
                this._transparentColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransparentColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentColorSpecified
        {
            get
            {
                return (this.TransparentColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hueColor;

        [System.Xml.Serialization.XmlElementAttribute("HueColor")]
        public System.Collections.Generic.List<string> HueColor
        {
            get
            {
                return this._hueColor;
            }
            private set
            {
                this._hueColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HueColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HueColorSpecified
        {
            get
            {
                return (this.HueColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetX;

        [System.Xml.Serialization.XmlElementAttribute("OffsetX")]
        public System.Collections.Generic.List<string> OffsetX
        {
            get
            {
                return this._offsetX;
            }
            private set
            {
                this._offsetX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetXSpecified
        {
            get
            {
                return (this.OffsetX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetY;

        [System.Xml.Serialization.XmlElementAttribute("OffsetY")]
        public System.Collections.Generic.List<string> OffsetY
        {
            get
            {
                return this._offsetY;
            }
            private set
            {
                this._offsetY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetYSpecified
        {
            get
            {
                return (this.OffsetY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LinearGaugesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinearGaugesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LinearGaugeType> _linearGauge;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("LinearGauge")]
        public System.Collections.Generic.List<LinearGaugeType> LinearGauge
        {
            get
            {
                return this._linearGauge;
            }
            private set
            {
                this._linearGauge = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LinearGaugesType" /> class.</para>
        /// </summary>
        public LinearGaugesType()
        {
            this._linearGauge = new System.Collections.Generic.List<LinearGaugeType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LinearGaugeType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinearGaugeType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LinearGaugeType" /> class.</para>
        /// </summary>
        public LinearGaugeType()
        {
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._parentItem = new System.Collections.Generic.List<string>();
            this._backFrame = new System.Collections.Generic.List<BackFrameType>();
            this._topImage = new System.Collections.Generic.List<TopImageType>();
            this._clipContent = new System.Collections.Generic.List<string>();
            this._aspectRatio = new System.Collections.Generic.List<string>();
            this._gaugeScales = new System.Collections.Generic.List<LinearScalesType>();
            this._orientation = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _parentItem;

        [System.Xml.Serialization.XmlElementAttribute("ParentItem")]
        public System.Collections.Generic.List<string> ParentItem
        {
            get
            {
                return this._parentItem;
            }
            private set
            {
                this._parentItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParentItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentItemSpecified
        {
            get
            {
                return (this.ParentItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<BackFrameType> _backFrame;

        [System.Xml.Serialization.XmlElementAttribute("BackFrame")]
        public System.Collections.Generic.List<BackFrameType> BackFrame
        {
            get
            {
                return this._backFrame;
            }
            private set
            {
                this._backFrame = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BackFrame collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackFrameSpecified
        {
            get
            {
                return (this.BackFrame.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TopImageType> _topImage;

        [System.Xml.Serialization.XmlElementAttribute("TopImage")]
        public System.Collections.Generic.List<TopImageType> TopImage
        {
            get
            {
                return this._topImage;
            }
            private set
            {
                this._topImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopImageSpecified
        {
            get
            {
                return (this.TopImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _clipContent;

        [System.Xml.Serialization.XmlElementAttribute("ClipContent")]
        public System.Collections.Generic.List<string> ClipContent
        {
            get
            {
                return this._clipContent;
            }
            private set
            {
                this._clipContent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ClipContent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClipContentSpecified
        {
            get
            {
                return (this.ClipContent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _aspectRatio;

        [System.Xml.Serialization.XmlElementAttribute("AspectRatio")]
        public System.Collections.Generic.List<string> AspectRatio
        {
            get
            {
                return this._aspectRatio;
            }
            private set
            {
                this._aspectRatio = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AspectRatio collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AspectRatioSpecified
        {
            get
            {
                return (this.AspectRatio.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LinearScalesType> _gaugeScales;

        [System.Xml.Serialization.XmlElementAttribute("GaugeScales")]
        public System.Collections.Generic.List<LinearScalesType> GaugeScales
        {
            get
            {
                return this._gaugeScales;
            }
            private set
            {
                this._gaugeScales = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeScales collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeScalesSpecified
        {
            get
            {
                return (this.GaugeScales.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _orientation;

        [System.Xml.Serialization.XmlElementAttribute("Orientation")]
        public System.Collections.Generic.List<string> Orientation
        {
            get
            {
                return this._orientation;
            }
            private set
            {
                this._orientation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Orientation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrientationSpecified
        {
            get
            {
                return (this.Orientation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LinearScalesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinearScalesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LinearScaleType> _linearScale;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("LinearScale")]
        public System.Collections.Generic.List<LinearScaleType> LinearScale
        {
            get
            {
                return this._linearScale;
            }
            private set
            {
                this._linearScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LinearScalesType" /> class.</para>
        /// </summary>
        public LinearScalesType()
        {
            this._linearScale = new System.Collections.Generic.List<LinearScaleType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LinearScaleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinearScaleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LinearScaleType" /> class.</para>
        /// </summary>
        public LinearScaleType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._scaleRanges = new System.Collections.Generic.List<ScaleRangesType>();
            this._scaleLabels = new System.Collections.Generic.List<ScaleLabelsType>();
            this._gaugeMajorTickMarks = new System.Collections.Generic.List<GaugeTickMarksType>();
            this._gaugeMinorTickMarks = new System.Collections.Generic.List<GaugeTickMarksType>();
            this._customLabels = new System.Collections.Generic.List<CustomLabelsType>();
            this._maximumValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._minimumValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._maximumPin = new System.Collections.Generic.List<ScalePinType>();
            this._minimumPin = new System.Collections.Generic.List<ScalePinType>();
            this._interval = new System.Collections.Generic.List<string>();
            this._intervalOffset = new System.Collections.Generic.List<string>();
            this._logarithmic = new System.Collections.Generic.List<string>();
            this._logarithmicBase = new System.Collections.Generic.List<string>();
            this._multiplier = new System.Collections.Generic.List<string>();
            this._reversed = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._tickMarksOnTop = new System.Collections.Generic.List<string>();
            this._gaugePointers = new System.Collections.Generic.List<LinearPointersType>();
            this._startMargin = new System.Collections.Generic.List<string>();
            this._endMargin = new System.Collections.Generic.List<string>();
            this._position = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScaleRangesType> _scaleRanges;

        [System.Xml.Serialization.XmlElementAttribute("ScaleRanges")]
        public System.Collections.Generic.List<ScaleRangesType> ScaleRanges
        {
            get
            {
                return this._scaleRanges;
            }
            private set
            {
                this._scaleRanges = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleRanges collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleRangesSpecified
        {
            get
            {
                return (this.ScaleRanges.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScaleLabelsType> _scaleLabels;

        [System.Xml.Serialization.XmlElementAttribute("ScaleLabels")]
        public System.Collections.Generic.List<ScaleLabelsType> ScaleLabels
        {
            get
            {
                return this._scaleLabels;
            }
            private set
            {
                this._scaleLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleLabelsSpecified
        {
            get
            {
                return (this.ScaleLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeTickMarksType> _gaugeMajorTickMarks;

        [System.Xml.Serialization.XmlElementAttribute("GaugeMajorTickMarks")]
        public System.Collections.Generic.List<GaugeTickMarksType> GaugeMajorTickMarks
        {
            get
            {
                return this._gaugeMajorTickMarks;
            }
            private set
            {
                this._gaugeMajorTickMarks = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeMajorTickMarks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeMajorTickMarksSpecified
        {
            get
            {
                return (this.GaugeMajorTickMarks.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeTickMarksType> _gaugeMinorTickMarks;

        [System.Xml.Serialization.XmlElementAttribute("GaugeMinorTickMarks")]
        public System.Collections.Generic.List<GaugeTickMarksType> GaugeMinorTickMarks
        {
            get
            {
                return this._gaugeMinorTickMarks;
            }
            private set
            {
                this._gaugeMinorTickMarks = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeMinorTickMarks collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeMinorTickMarksSpecified
        {
            get
            {
                return (this.GaugeMinorTickMarks.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomLabelsType> _customLabels;

        [System.Xml.Serialization.XmlElementAttribute("CustomLabels")]
        public System.Collections.Generic.List<CustomLabelsType> CustomLabels
        {
            get
            {
                return this._customLabels;
            }
            private set
            {
                this._customLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomLabelsSpecified
        {
            get
            {
                return (this.CustomLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _maximumValue;

        [System.Xml.Serialization.XmlElementAttribute("MaximumValue")]
        public System.Collections.Generic.List<GaugeInputValueType> MaximumValue
        {
            get
            {
                return this._maximumValue;
            }
            private set
            {
                this._maximumValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumValueSpecified
        {
            get
            {
                return (this.MaximumValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _minimumValue;

        [System.Xml.Serialization.XmlElementAttribute("MinimumValue")]
        public System.Collections.Generic.List<GaugeInputValueType> MinimumValue
        {
            get
            {
                return this._minimumValue;
            }
            private set
            {
                this._minimumValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumValueSpecified
        {
            get
            {
                return (this.MinimumValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScalePinType> _maximumPin;

        [System.Xml.Serialization.XmlElementAttribute("MaximumPin")]
        public System.Collections.Generic.List<ScalePinType> MaximumPin
        {
            get
            {
                return this._maximumPin;
            }
            private set
            {
                this._maximumPin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumPin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumPinSpecified
        {
            get
            {
                return (this.MaximumPin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ScalePinType> _minimumPin;

        [System.Xml.Serialization.XmlElementAttribute("MinimumPin")]
        public System.Collections.Generic.List<ScalePinType> MinimumPin
        {
            get
            {
                return this._minimumPin;
            }
            private set
            {
                this._minimumPin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumPin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumPinSpecified
        {
            get
            {
                return (this.MinimumPin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _intervalOffset;

        [System.Xml.Serialization.XmlElementAttribute("IntervalOffset")]
        public System.Collections.Generic.List<string> IntervalOffset
        {
            get
            {
                return this._intervalOffset;
            }
            private set
            {
                this._intervalOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntervalOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalOffsetSpecified
        {
            get
            {
                return (this.IntervalOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _logarithmic;

        [System.Xml.Serialization.XmlElementAttribute("Logarithmic")]
        public System.Collections.Generic.List<string> Logarithmic
        {
            get
            {
                return this._logarithmic;
            }
            private set
            {
                this._logarithmic = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Logarithmic collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogarithmicSpecified
        {
            get
            {
                return (this.Logarithmic.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _logarithmicBase;

        [System.Xml.Serialization.XmlElementAttribute("LogarithmicBase")]
        public System.Collections.Generic.List<string> LogarithmicBase
        {
            get
            {
                return this._logarithmicBase;
            }
            private set
            {
                this._logarithmicBase = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LogarithmicBase collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogarithmicBaseSpecified
        {
            get
            {
                return (this.LogarithmicBase.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _multiplier;

        [System.Xml.Serialization.XmlElementAttribute("Multiplier")]
        public System.Collections.Generic.List<string> Multiplier
        {
            get
            {
                return this._multiplier;
            }
            private set
            {
                this._multiplier = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Multiplier collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiplierSpecified
        {
            get
            {
                return (this.Multiplier.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _reversed;

        [System.Xml.Serialization.XmlElementAttribute("Reversed")]
        public System.Collections.Generic.List<string> Reversed
        {
            get
            {
                return this._reversed;
            }
            private set
            {
                this._reversed = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Reversed collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReversedSpecified
        {
            get
            {
                return (this.Reversed.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _tickMarksOnTop;

        [System.Xml.Serialization.XmlElementAttribute("TickMarksOnTop")]
        public System.Collections.Generic.List<string> TickMarksOnTop
        {
            get
            {
                return this._tickMarksOnTop;
            }
            private set
            {
                this._tickMarksOnTop = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TickMarksOnTop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TickMarksOnTopSpecified
        {
            get
            {
                return (this.TickMarksOnTop.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LinearPointersType> _gaugePointers;

        [System.Xml.Serialization.XmlElementAttribute("GaugePointers")]
        public System.Collections.Generic.List<LinearPointersType> GaugePointers
        {
            get
            {
                return this._gaugePointers;
            }
            private set
            {
                this._gaugePointers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugePointers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugePointersSpecified
        {
            get
            {
                return (this.GaugePointers.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startMargin;

        [System.Xml.Serialization.XmlElementAttribute("StartMargin")]
        public System.Collections.Generic.List<string> StartMargin
        {
            get
            {
                return this._startMargin;
            }
            private set
            {
                this._startMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartMarginSpecified
        {
            get
            {
                return (this.StartMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endMargin;

        [System.Xml.Serialization.XmlElementAttribute("EndMargin")]
        public System.Collections.Generic.List<string> EndMargin
        {
            get
            {
                return this._endMargin;
            }
            private set
            {
                this._endMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndMarginSpecified
        {
            get
            {
                return (this.EndMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LinearPointersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinearPointersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LinearPointerType> _linearPointer;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("LinearPointer")]
        public System.Collections.Generic.List<LinearPointerType> LinearPointer
        {
            get
            {
                return this._linearPointer;
            }
            private set
            {
                this._linearPointer = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LinearPointersType" /> class.</para>
        /// </summary>
        public LinearPointersType()
        {
            this._linearPointer = new System.Collections.Generic.List<LinearPointerType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LinearPointerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinearPointerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LinearPointerType" /> class.</para>
        /// </summary>
        public LinearPointerType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._gaugeInputValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._pointerImage = new System.Collections.Generic.List<PointerImageType>();
            this._barStart = new System.Collections.Generic.List<string>();
            this._distanceFromScale = new System.Collections.Generic.List<string>();
            this._markerLength = new System.Collections.Generic.List<string>();
            this._markerStyle = new System.Collections.Generic.List<string>();
            this._placement = new System.Collections.Generic.List<string>();
            this._snappingEnabled = new System.Collections.Generic.List<string>();
            this._snappingInterval = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._type = new System.Collections.Generic.List<string>();
            this._thermometer = new System.Collections.Generic.List<ThermometerType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _gaugeInputValue;

        [System.Xml.Serialization.XmlElementAttribute("GaugeInputValue")]
        public System.Collections.Generic.List<GaugeInputValueType> GaugeInputValue
        {
            get
            {
                return this._gaugeInputValue;
            }
            private set
            {
                this._gaugeInputValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeInputValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeInputValueSpecified
        {
            get
            {
                return (this.GaugeInputValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PointerImageType> _pointerImage;

        [System.Xml.Serialization.XmlElementAttribute("PointerImage")]
        public System.Collections.Generic.List<PointerImageType> PointerImage
        {
            get
            {
                return this._pointerImage;
            }
            private set
            {
                this._pointerImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PointerImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PointerImageSpecified
        {
            get
            {
                return (this.PointerImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _barStart;

        [System.Xml.Serialization.XmlElementAttribute("BarStart")]
        public System.Collections.Generic.List<string> BarStart
        {
            get
            {
                return this._barStart;
            }
            private set
            {
                this._barStart = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BarStart collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarStartSpecified
        {
            get
            {
                return (this.BarStart.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distanceFromScale;

        [System.Xml.Serialization.XmlElementAttribute("DistanceFromScale")]
        public System.Collections.Generic.List<string> DistanceFromScale
        {
            get
            {
                return this._distanceFromScale;
            }
            private set
            {
                this._distanceFromScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistanceFromScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceFromScaleSpecified
        {
            get
            {
                return (this.DistanceFromScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _markerLength;

        [System.Xml.Serialization.XmlElementAttribute("MarkerLength")]
        public System.Collections.Generic.List<string> MarkerLength
        {
            get
            {
                return this._markerLength;
            }
            private set
            {
                this._markerLength = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MarkerLength collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerLengthSpecified
        {
            get
            {
                return (this.MarkerLength.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _markerStyle;

        [System.Xml.Serialization.XmlElementAttribute("MarkerStyle")]
        public System.Collections.Generic.List<string> MarkerStyle
        {
            get
            {
                return this._markerStyle;
            }
            private set
            {
                this._markerStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MarkerStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerStyleSpecified
        {
            get
            {
                return (this.MarkerStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _placement;

        [System.Xml.Serialization.XmlElementAttribute("Placement")]
        public System.Collections.Generic.List<string> Placement
        {
            get
            {
                return this._placement;
            }
            private set
            {
                this._placement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Placement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlacementSpecified
        {
            get
            {
                return (this.Placement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _snappingEnabled;

        [System.Xml.Serialization.XmlElementAttribute("SnappingEnabled")]
        public System.Collections.Generic.List<string> SnappingEnabled
        {
            get
            {
                return this._snappingEnabled;
            }
            private set
            {
                this._snappingEnabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SnappingEnabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SnappingEnabledSpecified
        {
            get
            {
                return (this.SnappingEnabled.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _snappingInterval;

        [System.Xml.Serialization.XmlElementAttribute("SnappingInterval")]
        public System.Collections.Generic.List<string> SnappingInterval
        {
            get
            {
                return this._snappingInterval;
            }
            private set
            {
                this._snappingInterval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SnappingInterval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SnappingIntervalSpecified
        {
            get
            {
                return (this.SnappingInterval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _type;

        [System.Xml.Serialization.XmlElementAttribute("Type")]
        public System.Collections.Generic.List<string> Type
        {
            get
            {
                return this._type;
            }
            private set
            {
                this._type = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Type collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return (this.Type.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ThermometerType> _thermometer;

        [System.Xml.Serialization.XmlElementAttribute("Thermometer")]
        public System.Collections.Generic.List<ThermometerType> Thermometer
        {
            get
            {
                return this._thermometer;
            }
            private set
            {
                this._thermometer = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Thermometer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermometerSpecified
        {
            get
            {
                return (this.Thermometer.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ThermometerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThermometerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ThermometerType" /> class.</para>
        /// </summary>
        public ThermometerType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._bulbOffset = new System.Collections.Generic.List<string>();
            this._bulbSize = new System.Collections.Generic.List<string>();
            this._thermometerStyle = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bulbOffset;

        [System.Xml.Serialization.XmlElementAttribute("BulbOffset")]
        public System.Collections.Generic.List<string> BulbOffset
        {
            get
            {
                return this._bulbOffset;
            }
            private set
            {
                this._bulbOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BulbOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BulbOffsetSpecified
        {
            get
            {
                return (this.BulbOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bulbSize;

        [System.Xml.Serialization.XmlElementAttribute("BulbSize")]
        public System.Collections.Generic.List<string> BulbSize
        {
            get
            {
                return this._bulbSize;
            }
            private set
            {
                this._bulbSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BulbSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BulbSizeSpecified
        {
            get
            {
                return (this.BulbSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _thermometerStyle;

        [System.Xml.Serialization.XmlElementAttribute("ThermometerStyle")]
        public System.Collections.Generic.List<string> ThermometerStyle
        {
            get
            {
                return this._thermometerStyle;
            }
            private set
            {
                this._thermometerStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ThermometerStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermometerStyleSpecified
        {
            get
            {
                return (this.ThermometerStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NumericIndicatorsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NumericIndicatorsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<NumericIndicatorType> _numericIndicator;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("NumericIndicator")]
        public System.Collections.Generic.List<NumericIndicatorType> NumericIndicator
        {
            get
            {
                return this._numericIndicator;
            }
            private set
            {
                this._numericIndicator = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NumericIndicatorsType" /> class.</para>
        /// </summary>
        public NumericIndicatorsType()
        {
            this._numericIndicator = new System.Collections.Generic.List<NumericIndicatorType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NumericIndicatorType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NumericIndicatorType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NumericIndicatorType" /> class.</para>
        /// </summary>
        public NumericIndicatorType()
        {
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._parentItem = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._gaugeInputValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._maximumValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._minimumValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._numericIndicatorRanges = new System.Collections.Generic.List<NumericIndicatorRangesType>();
            this._resizeMode = new System.Collections.Generic.List<string>();
            this._decimalDigitColor = new System.Collections.Generic.List<string>();
            this._decimalDigits = new System.Collections.Generic.List<string>();
            this._digitColor = new System.Collections.Generic.List<string>();
            this._digits = new System.Collections.Generic.List<string>();
            this._indicatorStyle = new System.Collections.Generic.List<string>();
            this._ledDimColor = new System.Collections.Generic.List<string>();
            this._multiplier = new System.Collections.Generic.List<string>();
            this._offString = new System.Collections.Generic.List<string>();
            this._outOfRangeString = new System.Collections.Generic.List<string>();
            this._separatorColor = new System.Collections.Generic.List<string>();
            this._separatorWidth = new System.Collections.Generic.List<string>();
            this._showDecimalPoint = new System.Collections.Generic.List<string>();
            this._showLeadingZeros = new System.Collections.Generic.List<string>();
            this._showSign = new System.Collections.Generic.List<string>();
            this._snappingEnabled = new System.Collections.Generic.List<string>();
            this._snappingInterval = new System.Collections.Generic.List<string>();
            this._useFontPercent = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _parentItem;

        [System.Xml.Serialization.XmlElementAttribute("ParentItem")]
        public System.Collections.Generic.List<string> ParentItem
        {
            get
            {
                return this._parentItem;
            }
            private set
            {
                this._parentItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParentItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentItemSpecified
        {
            get
            {
                return (this.ParentItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _gaugeInputValue;

        [System.Xml.Serialization.XmlElementAttribute("GaugeInputValue")]
        public System.Collections.Generic.List<GaugeInputValueType> GaugeInputValue
        {
            get
            {
                return this._gaugeInputValue;
            }
            private set
            {
                this._gaugeInputValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeInputValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeInputValueSpecified
        {
            get
            {
                return (this.GaugeInputValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _maximumValue;

        [System.Xml.Serialization.XmlElementAttribute("MaximumValue")]
        public System.Collections.Generic.List<GaugeInputValueType> MaximumValue
        {
            get
            {
                return this._maximumValue;
            }
            private set
            {
                this._maximumValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumValueSpecified
        {
            get
            {
                return (this.MaximumValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _minimumValue;

        [System.Xml.Serialization.XmlElementAttribute("MinimumValue")]
        public System.Collections.Generic.List<GaugeInputValueType> MinimumValue
        {
            get
            {
                return this._minimumValue;
            }
            private set
            {
                this._minimumValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumValueSpecified
        {
            get
            {
                return (this.MinimumValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<NumericIndicatorRangesType> _numericIndicatorRanges;

        [System.Xml.Serialization.XmlElementAttribute("NumericIndicatorRanges")]
        public System.Collections.Generic.List<NumericIndicatorRangesType> NumericIndicatorRanges
        {
            get
            {
                return this._numericIndicatorRanges;
            }
            private set
            {
                this._numericIndicatorRanges = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NumericIndicatorRanges collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumericIndicatorRangesSpecified
        {
            get
            {
                return (this.NumericIndicatorRanges.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _resizeMode;

        [System.Xml.Serialization.XmlElementAttribute("ResizeMode")]
        public System.Collections.Generic.List<string> ResizeMode
        {
            get
            {
                return this._resizeMode;
            }
            private set
            {
                this._resizeMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ResizeMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResizeModeSpecified
        {
            get
            {
                return (this.ResizeMode.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _decimalDigitColor;

        [System.Xml.Serialization.XmlElementAttribute("DecimalDigitColor")]
        public System.Collections.Generic.List<string> DecimalDigitColor
        {
            get
            {
                return this._decimalDigitColor;
            }
            private set
            {
                this._decimalDigitColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DecimalDigitColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecimalDigitColorSpecified
        {
            get
            {
                return (this.DecimalDigitColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _decimalDigits;

        [System.Xml.Serialization.XmlElementAttribute("DecimalDigits")]
        public System.Collections.Generic.List<string> DecimalDigits
        {
            get
            {
                return this._decimalDigits;
            }
            private set
            {
                this._decimalDigits = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DecimalDigits collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecimalDigitsSpecified
        {
            get
            {
                return (this.DecimalDigits.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _digitColor;

        [System.Xml.Serialization.XmlElementAttribute("DigitColor")]
        public System.Collections.Generic.List<string> DigitColor
        {
            get
            {
                return this._digitColor;
            }
            private set
            {
                this._digitColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DigitColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DigitColorSpecified
        {
            get
            {
                return (this.DigitColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _digits;

        [System.Xml.Serialization.XmlElementAttribute("Digits")]
        public System.Collections.Generic.List<string> Digits
        {
            get
            {
                return this._digits;
            }
            private set
            {
                this._digits = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Digits collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DigitsSpecified
        {
            get
            {
                return (this.Digits.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _indicatorStyle;

        [System.Xml.Serialization.XmlElementAttribute("IndicatorStyle")]
        public System.Collections.Generic.List<string> IndicatorStyle
        {
            get
            {
                return this._indicatorStyle;
            }
            private set
            {
                this._indicatorStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IndicatorStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatorStyleSpecified
        {
            get
            {
                return (this.IndicatorStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _ledDimColor;

        [System.Xml.Serialization.XmlElementAttribute("LedDimColor")]
        public System.Collections.Generic.List<string> LedDimColor
        {
            get
            {
                return this._ledDimColor;
            }
            private set
            {
                this._ledDimColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LedDimColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LedDimColorSpecified
        {
            get
            {
                return (this.LedDimColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _multiplier;

        [System.Xml.Serialization.XmlElementAttribute("Multiplier")]
        public System.Collections.Generic.List<string> Multiplier
        {
            get
            {
                return this._multiplier;
            }
            private set
            {
                this._multiplier = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Multiplier collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiplierSpecified
        {
            get
            {
                return (this.Multiplier.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offString;

        [System.Xml.Serialization.XmlElementAttribute("OffString")]
        public System.Collections.Generic.List<string> OffString
        {
            get
            {
                return this._offString;
            }
            private set
            {
                this._offString = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffString collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffStringSpecified
        {
            get
            {
                return (this.OffString.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _outOfRangeString;

        [System.Xml.Serialization.XmlElementAttribute("OutOfRangeString")]
        public System.Collections.Generic.List<string> OutOfRangeString
        {
            get
            {
                return this._outOfRangeString;
            }
            private set
            {
                this._outOfRangeString = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OutOfRangeString collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutOfRangeStringSpecified
        {
            get
            {
                return (this.OutOfRangeString.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _separatorColor;

        [System.Xml.Serialization.XmlElementAttribute("SeparatorColor")]
        public System.Collections.Generic.List<string> SeparatorColor
        {
            get
            {
                return this._separatorColor;
            }
            private set
            {
                this._separatorColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SeparatorColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeparatorColorSpecified
        {
            get
            {
                return (this.SeparatorColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _separatorWidth;

        [System.Xml.Serialization.XmlElementAttribute("SeparatorWidth")]
        public System.Collections.Generic.List<string> SeparatorWidth
        {
            get
            {
                return this._separatorWidth;
            }
            private set
            {
                this._separatorWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SeparatorWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeparatorWidthSpecified
        {
            get
            {
                return (this.SeparatorWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showDecimalPoint;

        [System.Xml.Serialization.XmlElementAttribute("ShowDecimalPoint")]
        public System.Collections.Generic.List<string> ShowDecimalPoint
        {
            get
            {
                return this._showDecimalPoint;
            }
            private set
            {
                this._showDecimalPoint = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowDecimalPoint collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowDecimalPointSpecified
        {
            get
            {
                return (this.ShowDecimalPoint.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showLeadingZeros;

        [System.Xml.Serialization.XmlElementAttribute("ShowLeadingZeros")]
        public System.Collections.Generic.List<string> ShowLeadingZeros
        {
            get
            {
                return this._showLeadingZeros;
            }
            private set
            {
                this._showLeadingZeros = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowLeadingZeros collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowLeadingZerosSpecified
        {
            get
            {
                return (this.ShowLeadingZeros.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showSign;

        [System.Xml.Serialization.XmlElementAttribute("ShowSign")]
        public System.Collections.Generic.List<string> ShowSign
        {
            get
            {
                return this._showSign;
            }
            private set
            {
                this._showSign = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowSign collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowSignSpecified
        {
            get
            {
                return (this.ShowSign.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _snappingEnabled;

        [System.Xml.Serialization.XmlElementAttribute("SnappingEnabled")]
        public System.Collections.Generic.List<string> SnappingEnabled
        {
            get
            {
                return this._snappingEnabled;
            }
            private set
            {
                this._snappingEnabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SnappingEnabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SnappingEnabledSpecified
        {
            get
            {
                return (this.SnappingEnabled.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _snappingInterval;

        [System.Xml.Serialization.XmlElementAttribute("SnappingInterval")]
        public System.Collections.Generic.List<string> SnappingInterval
        {
            get
            {
                return this._snappingInterval;
            }
            private set
            {
                this._snappingInterval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SnappingInterval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SnappingIntervalSpecified
        {
            get
            {
                return (this.SnappingInterval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useFontPercent;

        [System.Xml.Serialization.XmlElementAttribute("UseFontPercent")]
        public System.Collections.Generic.List<string> UseFontPercent
        {
            get
            {
                return this._useFontPercent;
            }
            private set
            {
                this._useFontPercent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseFontPercent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseFontPercentSpecified
        {
            get
            {
                return (this.UseFontPercent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NumericIndicatorRangesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NumericIndicatorRangesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<NumericIndicatorRangeType> _numericIndicatorRange;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("NumericIndicatorRange")]
        public System.Collections.Generic.List<NumericIndicatorRangeType> NumericIndicatorRange
        {
            get
            {
                return this._numericIndicatorRange;
            }
            private set
            {
                this._numericIndicatorRange = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NumericIndicatorRangesType" /> class.</para>
        /// </summary>
        public NumericIndicatorRangesType()
        {
            this._numericIndicatorRange = new System.Collections.Generic.List<NumericIndicatorRangeType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NumericIndicatorRangeType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NumericIndicatorRangeType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<GaugeInputValueType> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NumericIndicatorRangeType" /> class.</para>
        /// </summary>
        public NumericIndicatorRangeType()
        {
            this._startValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._endValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._decimalDigitColor = new System.Collections.Generic.List<string>();
            this._digitColor = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<GaugeInputValueType> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _decimalDigitColor;

        [System.Xml.Serialization.XmlElementAttribute("DecimalDigitColor")]
        public System.Collections.Generic.List<string> DecimalDigitColor
        {
            get
            {
                return this._decimalDigitColor;
            }
            private set
            {
                this._decimalDigitColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DecimalDigitColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecimalDigitColorSpecified
        {
            get
            {
                return (this.DecimalDigitColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _digitColor;

        [System.Xml.Serialization.XmlElementAttribute("DigitColor")]
        public System.Collections.Generic.List<string> DigitColor
        {
            get
            {
                return this._digitColor;
            }
            private set
            {
                this._digitColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DigitColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DigitColorSpecified
        {
            get
            {
                return (this.DigitColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StateIndicatorsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateIndicatorsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StateIndicatorType> _stateIndicator;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("StateIndicator")]
        public System.Collections.Generic.List<StateIndicatorType> StateIndicator
        {
            get
            {
                return this._stateIndicator;
            }
            private set
            {
                this._stateIndicator = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StateIndicatorsType" /> class.</para>
        /// </summary>
        public StateIndicatorsType()
        {
            this._stateIndicator = new System.Collections.Generic.List<StateIndicatorType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StateIndicatorType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateIndicatorType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StateIndicatorType" /> class.</para>
        /// </summary>
        public StateIndicatorType()
        {
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._parentItem = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._indicatorStyle = new System.Collections.Generic.List<string>();
            this._indicatorImage = new System.Collections.Generic.List<IndicatorImageType>();
            this._gaugeInputValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._transformationType = new System.Collections.Generic.List<string>();
            this._transformationScope = new System.Collections.Generic.List<string>();
            this._minimumValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._maximumValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._indicatorStates = new System.Collections.Generic.List<IndicatorStatesType>();
            this._resizeMode = new System.Collections.Generic.List<string>();
            this._angle = new System.Collections.Generic.List<string>();
            this._scaleFactor = new System.Collections.Generic.List<string>();
            this._stateDataElementName = new System.Collections.Generic.List<string>();
            this._stateDataElementOutput = new System.Collections.Generic.List<StateIndicatorTypeStateDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _parentItem;

        [System.Xml.Serialization.XmlElementAttribute("ParentItem")]
        public System.Collections.Generic.List<string> ParentItem
        {
            get
            {
                return this._parentItem;
            }
            private set
            {
                this._parentItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParentItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentItemSpecified
        {
            get
            {
                return (this.ParentItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _indicatorStyle;

        [System.Xml.Serialization.XmlElementAttribute("IndicatorStyle")]
        public System.Collections.Generic.List<string> IndicatorStyle
        {
            get
            {
                return this._indicatorStyle;
            }
            private set
            {
                this._indicatorStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IndicatorStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatorStyleSpecified
        {
            get
            {
                return (this.IndicatorStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<IndicatorImageType> _indicatorImage;

        [System.Xml.Serialization.XmlElementAttribute("IndicatorImage")]
        public System.Collections.Generic.List<IndicatorImageType> IndicatorImage
        {
            get
            {
                return this._indicatorImage;
            }
            private set
            {
                this._indicatorImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IndicatorImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatorImageSpecified
        {
            get
            {
                return (this.IndicatorImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _gaugeInputValue;

        [System.Xml.Serialization.XmlElementAttribute("GaugeInputValue")]
        public System.Collections.Generic.List<GaugeInputValueType> GaugeInputValue
        {
            get
            {
                return this._gaugeInputValue;
            }
            private set
            {
                this._gaugeInputValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeInputValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeInputValueSpecified
        {
            get
            {
                return (this.GaugeInputValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transformationType;

        [System.Xml.Serialization.XmlElementAttribute("TransformationType")]
        public System.Collections.Generic.List<string> TransformationType
        {
            get
            {
                return this._transformationType;
            }
            private set
            {
                this._transformationType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransformationType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransformationTypeSpecified
        {
            get
            {
                return (this.TransformationType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transformationScope;

        [System.Xml.Serialization.XmlElementAttribute("TransformationScope")]
        public System.Collections.Generic.List<string> TransformationScope
        {
            get
            {
                return this._transformationScope;
            }
            private set
            {
                this._transformationScope = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransformationScope collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransformationScopeSpecified
        {
            get
            {
                return (this.TransformationScope.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _minimumValue;

        [System.Xml.Serialization.XmlElementAttribute("MinimumValue")]
        public System.Collections.Generic.List<GaugeInputValueType> MinimumValue
        {
            get
            {
                return this._minimumValue;
            }
            private set
            {
                this._minimumValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumValueSpecified
        {
            get
            {
                return (this.MinimumValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _maximumValue;

        [System.Xml.Serialization.XmlElementAttribute("MaximumValue")]
        public System.Collections.Generic.List<GaugeInputValueType> MaximumValue
        {
            get
            {
                return this._maximumValue;
            }
            private set
            {
                this._maximumValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumValueSpecified
        {
            get
            {
                return (this.MaximumValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<IndicatorStatesType> _indicatorStates;

        [System.Xml.Serialization.XmlElementAttribute("IndicatorStates")]
        public System.Collections.Generic.List<IndicatorStatesType> IndicatorStates
        {
            get
            {
                return this._indicatorStates;
            }
            private set
            {
                this._indicatorStates = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IndicatorStates collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatorStatesSpecified
        {
            get
            {
                return (this.IndicatorStates.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _resizeMode;

        [System.Xml.Serialization.XmlElementAttribute("ResizeMode")]
        public System.Collections.Generic.List<string> ResizeMode
        {
            get
            {
                return this._resizeMode;
            }
            private set
            {
                this._resizeMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ResizeMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResizeModeSpecified
        {
            get
            {
                return (this.ResizeMode.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _angle;

        [System.Xml.Serialization.XmlElementAttribute("Angle")]
        public System.Collections.Generic.List<string> Angle
        {
            get
            {
                return this._angle;
            }
            private set
            {
                this._angle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Angle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AngleSpecified
        {
            get
            {
                return (this.Angle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _scaleFactor;

        [System.Xml.Serialization.XmlElementAttribute("ScaleFactor")]
        public System.Collections.Generic.List<string> ScaleFactor
        {
            get
            {
                return this._scaleFactor;
            }
            private set
            {
                this._scaleFactor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleFactor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleFactorSpecified
        {
            get
            {
                return (this.ScaleFactor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _stateDataElementName;

        [System.Xml.Serialization.XmlElementAttribute("StateDataElementName")]
        public System.Collections.Generic.List<string> StateDataElementName
        {
            get
            {
                return this._stateDataElementName;
            }
            private set
            {
                this._stateDataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StateDataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateDataElementNameSpecified
        {
            get
            {
                return (this.StateDataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StateIndicatorTypeStateDataElementOutput> _stateDataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("StateDataElementOutput")]
        public System.Collections.Generic.List<StateIndicatorTypeStateDataElementOutput> StateDataElementOutput
        {
            get
            {
                return this._stateDataElementOutput;
            }
            private set
            {
                this._stateDataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StateDataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateDataElementOutputSpecified
        {
            get
            {
                return (this.StateDataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IndicatorImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndicatorImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<string> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="IndicatorImageType" /> class.</para>
        /// </summary>
        public IndicatorImageType()
        {
            this._source = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._transparentColor = new System.Collections.Generic.List<string>();
            this._hueColor = new System.Collections.Generic.List<string>();
            this._transparency = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparentColor;

        [System.Xml.Serialization.XmlElementAttribute("TransparentColor")]
        public System.Collections.Generic.List<string> TransparentColor
        {
            get
            {
                return this._transparentColor;
            }
            private set
            {
                this._transparentColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransparentColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentColorSpecified
        {
            get
            {
                return (this.TransparentColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hueColor;

        [System.Xml.Serialization.XmlElementAttribute("HueColor")]
        public System.Collections.Generic.List<string> HueColor
        {
            get
            {
                return this._hueColor;
            }
            private set
            {
                this._hueColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HueColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HueColorSpecified
        {
            get
            {
                return (this.HueColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparency;

        [System.Xml.Serialization.XmlElementAttribute("Transparency")]
        public System.Collections.Generic.List<string> Transparency
        {
            get
            {
                return this._transparency;
            }
            private set
            {
                this._transparency = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transparency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return (this.Transparency.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IndicatorStatesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndicatorStatesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<IndicatorStateType> _indicatorState;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("IndicatorState")]
        public System.Collections.Generic.List<IndicatorStateType> IndicatorState
        {
            get
            {
                return this._indicatorState;
            }
            private set
            {
                this._indicatorState = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="IndicatorStatesType" /> class.</para>
        /// </summary>
        public IndicatorStatesType()
        {
            this._indicatorState = new System.Collections.Generic.List<IndicatorStateType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IndicatorStateType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndicatorStateType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<GaugeInputValueType> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="IndicatorStateType" /> class.</para>
        /// </summary>
        public IndicatorStateType()
        {
            this._startValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._endValue = new System.Collections.Generic.List<GaugeInputValueType>();
            this._color = new System.Collections.Generic.List<string>();
            this._scaleFactor = new System.Collections.Generic.List<string>();
            this._indicatorStyle = new System.Collections.Generic.List<string>();
            this._indicatorImage = new System.Collections.Generic.List<IndicatorImageType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeInputValueType> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<GaugeInputValueType> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _color;

        [System.Xml.Serialization.XmlElementAttribute("Color")]
        public System.Collections.Generic.List<string> Color
        {
            get
            {
                return this._color;
            }
            private set
            {
                this._color = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Color collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColorSpecified
        {
            get
            {
                return (this.Color.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _scaleFactor;

        [System.Xml.Serialization.XmlElementAttribute("ScaleFactor")]
        public System.Collections.Generic.List<string> ScaleFactor
        {
            get
            {
                return this._scaleFactor;
            }
            private set
            {
                this._scaleFactor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleFactor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleFactorSpecified
        {
            get
            {
                return (this.ScaleFactor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _indicatorStyle;

        [System.Xml.Serialization.XmlElementAttribute("IndicatorStyle")]
        public System.Collections.Generic.List<string> IndicatorStyle
        {
            get
            {
                return this._indicatorStyle;
            }
            private set
            {
                this._indicatorStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IndicatorStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatorStyleSpecified
        {
            get
            {
                return (this.IndicatorStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<IndicatorImageType> _indicatorImage;

        [System.Xml.Serialization.XmlElementAttribute("IndicatorImage")]
        public System.Collections.Generic.List<IndicatorImageType> IndicatorImage
        {
            get
            {
                return this._indicatorImage;
            }
            private set
            {
                this._indicatorImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IndicatorImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndicatorImageSpecified
        {
            get
            {
                return (this.IndicatorImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StateIndicatorTypeStateDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum StateIndicatorTypeStateDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugeImagesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GaugeImagesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeImageType> _gaugeImage;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("GaugeImage")]
        public System.Collections.Generic.List<GaugeImageType> GaugeImage
        {
            get
            {
                return this._gaugeImage;
            }
            private set
            {
                this._gaugeImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GaugeImagesType" /> class.</para>
        /// </summary>
        public GaugeImagesType()
        {
            this._gaugeImage = new System.Collections.Generic.List<GaugeImageType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugeImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GaugeImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GaugeImageType" /> class.</para>
        /// </summary>
        public GaugeImageType()
        {
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._parentItem = new System.Collections.Generic.List<string>();
            this._source = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._transparentColor = new System.Collections.Generic.List<string>();
            this._transparency = new System.Collections.Generic.List<string>();
            this._angle = new System.Collections.Generic.List<string>();
            this._resizeMode = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _parentItem;

        [System.Xml.Serialization.XmlElementAttribute("ParentItem")]
        public System.Collections.Generic.List<string> ParentItem
        {
            get
            {
                return this._parentItem;
            }
            private set
            {
                this._parentItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParentItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentItemSpecified
        {
            get
            {
                return (this.ParentItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<string> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparentColor;

        [System.Xml.Serialization.XmlElementAttribute("TransparentColor")]
        public System.Collections.Generic.List<string> TransparentColor
        {
            get
            {
                return this._transparentColor;
            }
            private set
            {
                this._transparentColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransparentColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentColorSpecified
        {
            get
            {
                return (this.TransparentColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparency;

        [System.Xml.Serialization.XmlElementAttribute("Transparency")]
        public System.Collections.Generic.List<string> Transparency
        {
            get
            {
                return this._transparency;
            }
            private set
            {
                this._transparency = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transparency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return (this.Transparency.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _angle;

        [System.Xml.Serialization.XmlElementAttribute("Angle")]
        public System.Collections.Generic.List<string> Angle
        {
            get
            {
                return this._angle;
            }
            private set
            {
                this._angle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Angle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AngleSpecified
        {
            get
            {
                return (this.Angle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _resizeMode;

        [System.Xml.Serialization.XmlElementAttribute("ResizeMode")]
        public System.Collections.Generic.List<string> ResizeMode
        {
            get
            {
                return this._resizeMode;
            }
            private set
            {
                this._resizeMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ResizeMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResizeModeSpecified
        {
            get
            {
                return (this.ResizeMode.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugeLabelsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GaugeLabelsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeLabelType> _gaugeLabel;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("GaugeLabel")]
        public System.Collections.Generic.List<GaugeLabelType> GaugeLabel
        {
            get
            {
                return this._gaugeLabel;
            }
            private set
            {
                this._gaugeLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GaugeLabelsType" /> class.</para>
        /// </summary>
        public GaugeLabelsType()
        {
            this._gaugeLabel = new System.Collections.Generic.List<GaugeLabelType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugeLabelType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GaugeLabelType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GaugeLabelType" /> class.</para>
        /// </summary>
        public GaugeLabelType()
        {
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._parentItem = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._text = new System.Collections.Generic.List<string>();
            this._angle = new System.Collections.Generic.List<string>();
            this._resizeMode = new System.Collections.Generic.List<string>();
            this._textShadowOffset = new System.Collections.Generic.List<string>();
            this._useFontPercent = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _parentItem;

        [System.Xml.Serialization.XmlElementAttribute("ParentItem")]
        public System.Collections.Generic.List<string> ParentItem
        {
            get
            {
                return this._parentItem;
            }
            private set
            {
                this._parentItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParentItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentItemSpecified
        {
            get
            {
                return (this.ParentItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _text;

        [System.Xml.Serialization.XmlElementAttribute("Text")]
        public System.Collections.Generic.List<string> Text
        {
            get
            {
                return this._text;
            }
            private set
            {
                this._text = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Text collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextSpecified
        {
            get
            {
                return (this.Text.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _angle;

        [System.Xml.Serialization.XmlElementAttribute("Angle")]
        public System.Collections.Generic.List<string> Angle
        {
            get
            {
                return this._angle;
            }
            private set
            {
                this._angle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Angle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AngleSpecified
        {
            get
            {
                return (this.Angle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _resizeMode;

        [System.Xml.Serialization.XmlElementAttribute("ResizeMode")]
        public System.Collections.Generic.List<string> ResizeMode
        {
            get
            {
                return this._resizeMode;
            }
            private set
            {
                this._resizeMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ResizeMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResizeModeSpecified
        {
            get
            {
                return (this.ResizeMode.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textShadowOffset;

        [System.Xml.Serialization.XmlElementAttribute("TextShadowOffset")]
        public System.Collections.Generic.List<string> TextShadowOffset
        {
            get
            {
                return this._textShadowOffset;
            }
            private set
            {
                this._textShadowOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextShadowOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextShadowOffsetSpecified
        {
            get
            {
                return (this.TextShadowOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useFontPercent;

        [System.Xml.Serialization.XmlElementAttribute("UseFontPercent")]
        public System.Collections.Generic.List<string> UseFontPercent
        {
            get
            {
                return this._useFontPercent;
            }
            private set
            {
                this._useFontPercent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseFontPercent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseFontPercentSpecified
        {
            get
            {
                return (this.UseFontPercent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GaugeMemberType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GaugeMemberType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GroupType> _group;

        [System.Xml.Serialization.XmlElementAttribute("Group")]
        public System.Collections.Generic.List<GroupType> Group
        {
            get
            {
                return this._group;
            }
            private set
            {
                this._group = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupSpecified
        {
            get
            {
                return (this.Group.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GaugeMemberType" /> class.</para>
        /// </summary>
        public GaugeMemberType()
        {
            this._group = new System.Collections.Generic.List<GroupType>();
            this._sortExpressions = new System.Collections.Generic.List<SortExpressionsType>();
            this._gaugeMember = new System.Collections.Generic.List<GaugeMemberType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionsType> _sortExpressions;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressions")]
        public System.Collections.Generic.List<SortExpressionsType> SortExpressions
        {
            get
            {
                return this._sortExpressions;
            }
            private set
            {
                this._sortExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionsSpecified
        {
            get
            {
                return (this.SortExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugeMemberType> _gaugeMember;

        [System.Xml.Serialization.XmlElementAttribute("GaugeMember")]
        public System.Collections.Generic.List<GaugeMemberType> GaugeMember
        {
            get
            {
                return this._gaugeMember;
            }
            private set
            {
                this._gaugeMember = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugeMember collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugeMemberSpecified
        {
            get
            {
                return (this.GaugeMember.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapType" /> class.</para>
        /// </summary>
        public MapType()
        {
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<object>();
            this._pageBreak = new System.Collections.Generic.List<PageBreakType>();
            this._pageName = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._tileLanguage = new System.Collections.Generic.List<string>();
            this._mapLayers = new System.Collections.Generic.List<MapLayersType>();
            this._mapDataRegions = new System.Collections.Generic.List<MapDataRegionsType>();
            this._mapViewport = new System.Collections.Generic.List<MapViewportType>();
            this._mapLegends = new System.Collections.Generic.List<MapLegendsType>();
            this._mapTitles = new System.Collections.Generic.List<MapTitlesType>();
            this._mapDistanceScale = new System.Collections.Generic.List<MapDistanceScaleType>();
            this._mapColorScale = new System.Collections.Generic.List<MapColorScaleType>();
            this._mapBorderSkin = new System.Collections.Generic.List<MapBorderSkinType>();
            this._antiAliasing = new System.Collections.Generic.List<string>();
            this._textAntiAliasingQuality = new System.Collections.Generic.List<string>();
            this._shadowIntensity = new System.Collections.Generic.List<string>();
            this._maximumSpatialElementCount = new System.Collections.Generic.List<uint>();
            this._maximumTotalPointCount = new System.Collections.Generic.List<uint>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<object> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<object> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageBreakType> _pageBreak;

        [System.Xml.Serialization.XmlElementAttribute("PageBreak")]
        public System.Collections.Generic.List<PageBreakType> PageBreak
        {
            get
            {
                return this._pageBreak;
            }
            private set
            {
                this._pageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageBreakSpecified
        {
            get
            {
                return (this.PageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pageName;

        [System.Xml.Serialization.XmlElementAttribute("PageName")]
        public System.Collections.Generic.List<string> PageName
        {
            get
            {
                return this._pageName;
            }
            private set
            {
                this._pageName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageNameSpecified
        {
            get
            {
                return (this.PageName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _tileLanguage;

        [System.Xml.Serialization.XmlElementAttribute("TileLanguage")]
        public System.Collections.Generic.List<string> TileLanguage
        {
            get
            {
                return this._tileLanguage;
            }
            private set
            {
                this._tileLanguage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TileLanguage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TileLanguageSpecified
        {
            get
            {
                return (this.TileLanguage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLayersType> _mapLayers;

        [System.Xml.Serialization.XmlElementAttribute("MapLayers")]
        public System.Collections.Generic.List<MapLayersType> MapLayers
        {
            get
            {
                return this._mapLayers;
            }
            private set
            {
                this._mapLayers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLayers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLayersSpecified
        {
            get
            {
                return (this.MapLayers.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapDataRegionsType> _mapDataRegions;

        [System.Xml.Serialization.XmlElementAttribute("MapDataRegions")]
        public System.Collections.Generic.List<MapDataRegionsType> MapDataRegions
        {
            get
            {
                return this._mapDataRegions;
            }
            private set
            {
                this._mapDataRegions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapDataRegions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapDataRegionsSpecified
        {
            get
            {
                return (this.MapDataRegions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapViewportType> _mapViewport;

        [System.Xml.Serialization.XmlElementAttribute("MapViewport")]
        public System.Collections.Generic.List<MapViewportType> MapViewport
        {
            get
            {
                return this._mapViewport;
            }
            private set
            {
                this._mapViewport = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapViewport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapViewportSpecified
        {
            get
            {
                return (this.MapViewport.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLegendsType> _mapLegends;

        [System.Xml.Serialization.XmlElementAttribute("MapLegends")]
        public System.Collections.Generic.List<MapLegendsType> MapLegends
        {
            get
            {
                return this._mapLegends;
            }
            private set
            {
                this._mapLegends = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLegends collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLegendsSpecified
        {
            get
            {
                return (this.MapLegends.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapTitlesType> _mapTitles;

        [System.Xml.Serialization.XmlElementAttribute("MapTitles")]
        public System.Collections.Generic.List<MapTitlesType> MapTitles
        {
            get
            {
                return this._mapTitles;
            }
            private set
            {
                this._mapTitles = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapTitles collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapTitlesSpecified
        {
            get
            {
                return (this.MapTitles.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapDistanceScaleType> _mapDistanceScale;

        [System.Xml.Serialization.XmlElementAttribute("MapDistanceScale")]
        public System.Collections.Generic.List<MapDistanceScaleType> MapDistanceScale
        {
            get
            {
                return this._mapDistanceScale;
            }
            private set
            {
                this._mapDistanceScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapDistanceScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapDistanceScaleSpecified
        {
            get
            {
                return (this.MapDistanceScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorScaleType> _mapColorScale;

        [System.Xml.Serialization.XmlElementAttribute("MapColorScale")]
        public System.Collections.Generic.List<MapColorScaleType> MapColorScale
        {
            get
            {
                return this._mapColorScale;
            }
            private set
            {
                this._mapColorScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapColorScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapColorScaleSpecified
        {
            get
            {
                return (this.MapColorScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBorderSkinType> _mapBorderSkin;

        [System.Xml.Serialization.XmlElementAttribute("MapBorderSkin")]
        public System.Collections.Generic.List<MapBorderSkinType> MapBorderSkin
        {
            get
            {
                return this._mapBorderSkin;
            }
            private set
            {
                this._mapBorderSkin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBorderSkin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBorderSkinSpecified
        {
            get
            {
                return (this.MapBorderSkin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _antiAliasing;

        [System.Xml.Serialization.XmlElementAttribute("AntiAliasing")]
        public System.Collections.Generic.List<string> AntiAliasing
        {
            get
            {
                return this._antiAliasing;
            }
            private set
            {
                this._antiAliasing = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AntiAliasing collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AntiAliasingSpecified
        {
            get
            {
                return (this.AntiAliasing.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textAntiAliasingQuality;

        [System.Xml.Serialization.XmlElementAttribute("TextAntiAliasingQuality")]
        public System.Collections.Generic.List<string> TextAntiAliasingQuality
        {
            get
            {
                return this._textAntiAliasingQuality;
            }
            private set
            {
                this._textAntiAliasingQuality = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextAntiAliasingQuality collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextAntiAliasingQualitySpecified
        {
            get
            {
                return (this.TextAntiAliasingQuality.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _shadowIntensity;

        [System.Xml.Serialization.XmlElementAttribute("ShadowIntensity")]
        public System.Collections.Generic.List<string> ShadowIntensity
        {
            get
            {
                return this._shadowIntensity;
            }
            private set
            {
                this._shadowIntensity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShadowIntensity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShadowIntensitySpecified
        {
            get
            {
                return (this.ShadowIntensity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _maximumSpatialElementCount;

        [System.Xml.Serialization.XmlElementAttribute("MaximumSpatialElementCount")]
        public System.Collections.Generic.List<uint> MaximumSpatialElementCount
        {
            get
            {
                return this._maximumSpatialElementCount;
            }
            private set
            {
                this._maximumSpatialElementCount = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumSpatialElementCount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumSpatialElementCountSpecified
        {
            get
            {
                return (this.MaximumSpatialElementCount.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _maximumTotalPointCount;

        [System.Xml.Serialization.XmlElementAttribute("MaximumTotalPointCount")]
        public System.Collections.Generic.List<uint> MaximumTotalPointCount
        {
            get
            {
                return this._maximumTotalPointCount;
            }
            private set
            {
                this._maximumTotalPointCount = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumTotalPointCount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumTotalPointCountSpecified
        {
            get
            {
                return (this.MaximumTotalPointCount.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLayersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLayersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapTileLayerType> _mapTileLayer;

        [System.Xml.Serialization.XmlElementAttribute("MapTileLayer")]
        public System.Collections.Generic.List<MapTileLayerType> MapTileLayer
        {
            get
            {
                return this._mapTileLayer;
            }
            private set
            {
                this._mapTileLayer = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapTileLayer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapTileLayerSpecified
        {
            get
            {
                return (this.MapTileLayer.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLayersType" /> class.</para>
        /// </summary>
        public MapLayersType()
        {
            this._mapTileLayer = new System.Collections.Generic.List<MapTileLayerType>();
            this._mapPolygonLayer = new System.Collections.Generic.List<MapPolygonLayerType>();
            this._mapPointLayer = new System.Collections.Generic.List<MapPointLayerType>();
            this._mapLineLayer = new System.Collections.Generic.List<MapLineLayerType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPolygonLayerType> _mapPolygonLayer;

        [System.Xml.Serialization.XmlElementAttribute("MapPolygonLayer")]
        public System.Collections.Generic.List<MapPolygonLayerType> MapPolygonLayer
        {
            get
            {
                return this._mapPolygonLayer;
            }
            private set
            {
                this._mapPolygonLayer = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapPolygonLayer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapPolygonLayerSpecified
        {
            get
            {
                return (this.MapPolygonLayer.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPointLayerType> _mapPointLayer;

        [System.Xml.Serialization.XmlElementAttribute("MapPointLayer")]
        public System.Collections.Generic.List<MapPointLayerType> MapPointLayer
        {
            get
            {
                return this._mapPointLayer;
            }
            private set
            {
                this._mapPointLayer = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapPointLayer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapPointLayerSpecified
        {
            get
            {
                return (this.MapPointLayer.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLineLayerType> _mapLineLayer;

        [System.Xml.Serialization.XmlElementAttribute("MapLineLayer")]
        public System.Collections.Generic.List<MapLineLayerType> MapLineLayer
        {
            get
            {
                return this._mapLineLayer;
            }
            private set
            {
                this._mapLineLayer = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLineLayer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLineLayerSpecified
        {
            get
            {
                return (this.MapLineLayer.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapTileLayerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapTileLayerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _visibilityMode;

        [System.Xml.Serialization.XmlElementAttribute("VisibilityMode")]
        public System.Collections.Generic.List<string> VisibilityMode
        {
            get
            {
                return this._visibilityMode;
            }
            private set
            {
                this._visibilityMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VisibilityMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilityModeSpecified
        {
            get
            {
                return (this.VisibilityMode.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapTileLayerType" /> class.</para>
        /// </summary>
        public MapTileLayerType()
        {
            this._visibilityMode = new System.Collections.Generic.List<string>();
            this._minimumZoom = new System.Collections.Generic.List<string>();
            this._maximumZoom = new System.Collections.Generic.List<string>();
            this._transparency = new System.Collections.Generic.List<string>();
            this._tileStyle = new System.Collections.Generic.List<string>();
            this._useSecureConnection = new System.Collections.Generic.List<string>();
            this._mapTiles = new System.Collections.Generic.List<MapTilesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MinimumZoom")]
        public System.Collections.Generic.List<string> MinimumZoom
        {
            get
            {
                return this._minimumZoom;
            }
            private set
            {
                this._minimumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumZoomSpecified
        {
            get
            {
                return (this.MinimumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MaximumZoom")]
        public System.Collections.Generic.List<string> MaximumZoom
        {
            get
            {
                return this._maximumZoom;
            }
            private set
            {
                this._maximumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumZoomSpecified
        {
            get
            {
                return (this.MaximumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparency;

        [System.Xml.Serialization.XmlElementAttribute("Transparency")]
        public System.Collections.Generic.List<string> Transparency
        {
            get
            {
                return this._transparency;
            }
            private set
            {
                this._transparency = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transparency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return (this.Transparency.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _tileStyle;

        [System.Xml.Serialization.XmlElementAttribute("TileStyle")]
        public System.Collections.Generic.List<string> TileStyle
        {
            get
            {
                return this._tileStyle;
            }
            private set
            {
                this._tileStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TileStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TileStyleSpecified
        {
            get
            {
                return (this.TileStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useSecureConnection;

        [System.Xml.Serialization.XmlElementAttribute("UseSecureConnection")]
        public System.Collections.Generic.List<string> UseSecureConnection
        {
            get
            {
                return this._useSecureConnection;
            }
            private set
            {
                this._useSecureConnection = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseSecureConnection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseSecureConnectionSpecified
        {
            get
            {
                return (this.UseSecureConnection.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapTilesType> _mapTiles;

        [System.Xml.Serialization.XmlElementAttribute("MapTiles")]
        public System.Collections.Generic.List<MapTilesType> MapTiles
        {
            get
            {
                return this._mapTiles;
            }
            private set
            {
                this._mapTiles = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapTiles collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapTilesSpecified
        {
            get
            {
                return (this.MapTiles.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapTilesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapTilesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapTileType> _mapTile;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapTile")]
        public System.Collections.Generic.List<MapTileType> MapTile
        {
            get
            {
                return this._mapTile;
            }
            private set
            {
                this._mapTile = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapTilesType" /> class.</para>
        /// </summary>
        public MapTilesType()
        {
            this._mapTile = new System.Collections.Generic.List<MapTileType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapTileType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapTileType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _name;

        [System.Xml.Serialization.XmlElementAttribute("Name")]
        public System.Collections.Generic.List<string> Name
        {
            get
            {
                return this._name;
            }
            private set
            {
                this._name = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified
        {
            get
            {
                return (this.Name.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapTileType" /> class.</para>
        /// </summary>
        public MapTileType()
        {
            this._name = new System.Collections.Generic.List<string>();
            this._tileData = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _tileData;

        [System.Xml.Serialization.XmlElementAttribute("TileData")]
        public System.Collections.Generic.List<string> TileData
        {
            get
            {
                return this._tileData;
            }
            private set
            {
                this._tileData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TileData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TileDataSpecified
        {
            get
            {
                return (this.TileData.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPolygonLayerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPolygonLayerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _visibilityMode;

        [System.Xml.Serialization.XmlElementAttribute("VisibilityMode")]
        public System.Collections.Generic.List<string> VisibilityMode
        {
            get
            {
                return this._visibilityMode;
            }
            private set
            {
                this._visibilityMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VisibilityMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilityModeSpecified
        {
            get
            {
                return (this.VisibilityMode.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPolygonLayerType" /> class.</para>
        /// </summary>
        public MapPolygonLayerType()
        {
            this._visibilityMode = new System.Collections.Generic.List<string>();
            this._minimumZoom = new System.Collections.Generic.List<string>();
            this._maximumZoom = new System.Collections.Generic.List<string>();
            this._transparency = new System.Collections.Generic.List<string>();
            this._mapDataRegionName = new System.Collections.Generic.List<string>();
            this._mapBindingFieldPairs = new System.Collections.Generic.List<MapBindingFieldPairsType>();
            this._mapFieldDefinitions = new System.Collections.Generic.List<MapFieldDefinitionsType>();
            this._mapShapefile = new System.Collections.Generic.List<MapShapefileType>();
            this._mapSpatialDataSet = new System.Collections.Generic.List<MapSpatialDataSetType>();
            this._mapSpatialDataRegion = new System.Collections.Generic.List<MapSpatialDataRegionType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapPolygonLayerTypeDataElementOutput>();
            this._mapPolygonTemplate = new System.Collections.Generic.List<MapPolygonTemplateType>();
            this._mapPolygonRules = new System.Collections.Generic.List<MapPolygonRulesType>();
            this._mapMarkerTemplate = new System.Collections.Generic.List<MapMarkerTemplateType>();
            this._mapCenterPointRules = new System.Collections.Generic.List<MapPointRulesType>();
            this._mapPolygons = new System.Collections.Generic.List<MapPolygonsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MinimumZoom")]
        public System.Collections.Generic.List<string> MinimumZoom
        {
            get
            {
                return this._minimumZoom;
            }
            private set
            {
                this._minimumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumZoomSpecified
        {
            get
            {
                return (this.MinimumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MaximumZoom")]
        public System.Collections.Generic.List<string> MaximumZoom
        {
            get
            {
                return this._maximumZoom;
            }
            private set
            {
                this._maximumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumZoomSpecified
        {
            get
            {
                return (this.MaximumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparency;

        [System.Xml.Serialization.XmlElementAttribute("Transparency")]
        public System.Collections.Generic.List<string> Transparency
        {
            get
            {
                return this._transparency;
            }
            private set
            {
                this._transparency = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transparency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return (this.Transparency.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapDataRegionName;

        [System.Xml.Serialization.XmlElementAttribute("MapDataRegionName")]
        public System.Collections.Generic.List<string> MapDataRegionName
        {
            get
            {
                return this._mapDataRegionName;
            }
            private set
            {
                this._mapDataRegionName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapDataRegionName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapDataRegionNameSpecified
        {
            get
            {
                return (this.MapDataRegionName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBindingFieldPairsType> _mapBindingFieldPairs;

        [System.Xml.Serialization.XmlElementAttribute("MapBindingFieldPairs")]
        public System.Collections.Generic.List<MapBindingFieldPairsType> MapBindingFieldPairs
        {
            get
            {
                return this._mapBindingFieldPairs;
            }
            private set
            {
                this._mapBindingFieldPairs = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBindingFieldPairs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBindingFieldPairsSpecified
        {
            get
            {
                return (this.MapBindingFieldPairs.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldDefinitionsType> _mapFieldDefinitions;

        [System.Xml.Serialization.XmlElementAttribute("MapFieldDefinitions")]
        public System.Collections.Generic.List<MapFieldDefinitionsType> MapFieldDefinitions
        {
            get
            {
                return this._mapFieldDefinitions;
            }
            private set
            {
                this._mapFieldDefinitions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapFieldDefinitions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapFieldDefinitionsSpecified
        {
            get
            {
                return (this.MapFieldDefinitions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapShapefileType> _mapShapefile;

        [System.Xml.Serialization.XmlElementAttribute("MapShapefile")]
        public System.Collections.Generic.List<MapShapefileType> MapShapefile
        {
            get
            {
                return this._mapShapefile;
            }
            private set
            {
                this._mapShapefile = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapShapefile collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapShapefileSpecified
        {
            get
            {
                return (this.MapShapefile.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSpatialDataSetType> _mapSpatialDataSet;

        [System.Xml.Serialization.XmlElementAttribute("MapSpatialDataSet")]
        public System.Collections.Generic.List<MapSpatialDataSetType> MapSpatialDataSet
        {
            get
            {
                return this._mapSpatialDataSet;
            }
            private set
            {
                this._mapSpatialDataSet = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSpatialDataSet collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSpatialDataSetSpecified
        {
            get
            {
                return (this.MapSpatialDataSet.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSpatialDataRegionType> _mapSpatialDataRegion;

        [System.Xml.Serialization.XmlElementAttribute("MapSpatialDataRegion")]
        public System.Collections.Generic.List<MapSpatialDataRegionType> MapSpatialDataRegion
        {
            get
            {
                return this._mapSpatialDataRegion;
            }
            private set
            {
                this._mapSpatialDataRegion = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSpatialDataRegion collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSpatialDataRegionSpecified
        {
            get
            {
                return (this.MapSpatialDataRegion.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPolygonLayerTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapPolygonLayerTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPolygonTemplateType> _mapPolygonTemplate;

        [System.Xml.Serialization.XmlElementAttribute("MapPolygonTemplate")]
        public System.Collections.Generic.List<MapPolygonTemplateType> MapPolygonTemplate
        {
            get
            {
                return this._mapPolygonTemplate;
            }
            private set
            {
                this._mapPolygonTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapPolygonTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapPolygonTemplateSpecified
        {
            get
            {
                return (this.MapPolygonTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPolygonRulesType> _mapPolygonRules;

        [System.Xml.Serialization.XmlElementAttribute("MapPolygonRules")]
        public System.Collections.Generic.List<MapPolygonRulesType> MapPolygonRules
        {
            get
            {
                return this._mapPolygonRules;
            }
            private set
            {
                this._mapPolygonRules = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapPolygonRules collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapPolygonRulesSpecified
        {
            get
            {
                return (this.MapPolygonRules.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerTemplateType> _mapMarkerTemplate;

        [System.Xml.Serialization.XmlElementAttribute("MapMarkerTemplate")]
        public System.Collections.Generic.List<MapMarkerTemplateType> MapMarkerTemplate
        {
            get
            {
                return this._mapMarkerTemplate;
            }
            private set
            {
                this._mapMarkerTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarkerTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkerTemplateSpecified
        {
            get
            {
                return (this.MapMarkerTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPointRulesType> _mapCenterPointRules;

        [System.Xml.Serialization.XmlElementAttribute("MapCenterPointRules")]
        public System.Collections.Generic.List<MapPointRulesType> MapCenterPointRules
        {
            get
            {
                return this._mapCenterPointRules;
            }
            private set
            {
                this._mapCenterPointRules = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapCenterPointRules collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapCenterPointRulesSpecified
        {
            get
            {
                return (this.MapCenterPointRules.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPolygonsType> _mapPolygons;

        [System.Xml.Serialization.XmlElementAttribute("MapPolygons")]
        public System.Collections.Generic.List<MapPolygonsType> MapPolygons
        {
            get
            {
                return this._mapPolygons;
            }
            private set
            {
                this._mapPolygons = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapPolygons collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapPolygonsSpecified
        {
            get
            {
                return (this.MapPolygons.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapBindingFieldPairsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapBindingFieldPairsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBindingFieldPairType> _mapBindingFieldPair;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapBindingFieldPair")]
        public System.Collections.Generic.List<MapBindingFieldPairType> MapBindingFieldPair
        {
            get
            {
                return this._mapBindingFieldPair;
            }
            private set
            {
                this._mapBindingFieldPair = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapBindingFieldPairsType" /> class.</para>
        /// </summary>
        public MapBindingFieldPairsType()
        {
            this._mapBindingFieldPair = new System.Collections.Generic.List<MapBindingFieldPairType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapBindingFieldPairType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapBindingFieldPairType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _fieldName;

        [System.Xml.Serialization.XmlElementAttribute("FieldName")]
        public System.Collections.Generic.List<string> FieldName
        {
            get
            {
                return this._fieldName;
            }
            private set
            {
                this._fieldName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FieldName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldNameSpecified
        {
            get
            {
                return (this.FieldName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapBindingFieldPairType" /> class.</para>
        /// </summary>
        public MapBindingFieldPairType()
        {
            this._fieldName = new System.Collections.Generic.List<string>();
            this._bindingExpression = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bindingExpression;

        [System.Xml.Serialization.XmlElementAttribute("BindingExpression")]
        public System.Collections.Generic.List<string> BindingExpression
        {
            get
            {
                return this._bindingExpression;
            }
            private set
            {
                this._bindingExpression = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BindingExpression collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BindingExpressionSpecified
        {
            get
            {
                return (this.BindingExpression.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapFieldDefinitionsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapFieldDefinitionsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldDefinitionType> _mapFieldDefinition;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapFieldDefinition")]
        public System.Collections.Generic.List<MapFieldDefinitionType> MapFieldDefinition
        {
            get
            {
                return this._mapFieldDefinition;
            }
            private set
            {
                this._mapFieldDefinition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapFieldDefinitionsType" /> class.</para>
        /// </summary>
        public MapFieldDefinitionsType()
        {
            this._mapFieldDefinition = new System.Collections.Generic.List<MapFieldDefinitionType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapFieldDefinitionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapFieldDefinitionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _name;

        [System.Xml.Serialization.XmlElementAttribute("Name")]
        public System.Collections.Generic.List<string> Name
        {
            get
            {
                return this._name;
            }
            private set
            {
                this._name = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified
        {
            get
            {
                return (this.Name.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapFieldDefinitionType" /> class.</para>
        /// </summary>
        public MapFieldDefinitionType()
        {
            this._name = new System.Collections.Generic.List<string>();
            this._dataType = new System.Collections.Generic.List<MapFieldDefinitionTypeDataType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldDefinitionTypeDataType> _dataType;

        [System.Xml.Serialization.XmlElementAttribute("DataType")]
        public System.Collections.Generic.List<MapFieldDefinitionTypeDataType> DataType
        {
            get
            {
                return this._dataType;
            }
            private set
            {
                this._dataType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataTypeSpecified
        {
            get
            {
                return (this.DataType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapFieldDefinitionTypeDataType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapFieldDefinitionTypeDataType
    {

        Boolean,

        DateTime,

        Integer,

        Float,

        String,

        Decimal,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapShapefileType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapShapefileType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<string> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapShapefileType" /> class.</para>
        /// </summary>
        public MapShapefileType()
        {
            this._source = new System.Collections.Generic.List<string>();
            this._mapFieldNames = new System.Collections.Generic.List<MapFieldNamesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldNamesType> _mapFieldNames;

        [System.Xml.Serialization.XmlElementAttribute("MapFieldNames")]
        public System.Collections.Generic.List<MapFieldNamesType> MapFieldNames
        {
            get
            {
                return this._mapFieldNames;
            }
            private set
            {
                this._mapFieldNames = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapFieldNames collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapFieldNamesSpecified
        {
            get
            {
                return (this.MapFieldNames.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapFieldNamesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapFieldNamesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapFieldName;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapFieldName")]
        public System.Collections.Generic.List<string> MapFieldName
        {
            get
            {
                return this._mapFieldName;
            }
            private set
            {
                this._mapFieldName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapFieldNamesType" /> class.</para>
        /// </summary>
        public MapFieldNamesType()
        {
            this._mapFieldName = new System.Collections.Generic.List<string>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapSpatialDataSetType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapSpatialDataSetType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSetName;

        [System.Xml.Serialization.XmlElementAttribute("DataSetName")]
        public System.Collections.Generic.List<string> DataSetName
        {
            get
            {
                return this._dataSetName;
            }
            private set
            {
                this._dataSetName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetNameSpecified
        {
            get
            {
                return (this.DataSetName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapSpatialDataSetType" /> class.</para>
        /// </summary>
        public MapSpatialDataSetType()
        {
            this._dataSetName = new System.Collections.Generic.List<string>();
            this._spatialField = new System.Collections.Generic.List<string>();
            this._mapFieldNames = new System.Collections.Generic.List<MapFieldNamesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _spatialField;

        [System.Xml.Serialization.XmlElementAttribute("SpatialField")]
        public System.Collections.Generic.List<string> SpatialField
        {
            get
            {
                return this._spatialField;
            }
            private set
            {
                this._spatialField = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SpatialField collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpatialFieldSpecified
        {
            get
            {
                return (this.SpatialField.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldNamesType> _mapFieldNames;

        [System.Xml.Serialization.XmlElementAttribute("MapFieldNames")]
        public System.Collections.Generic.List<MapFieldNamesType> MapFieldNames
        {
            get
            {
                return this._mapFieldNames;
            }
            private set
            {
                this._mapFieldNames = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapFieldNames collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapFieldNamesSpecified
        {
            get
            {
                return (this.MapFieldNames.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapSpatialDataRegionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapSpatialDataRegionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _vectorData;

        [System.Xml.Serialization.XmlElementAttribute("VectorData")]
        public System.Collections.Generic.List<string> VectorData
        {
            get
            {
                return this._vectorData;
            }
            private set
            {
                this._vectorData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VectorData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VectorDataSpecified
        {
            get
            {
                return (this.VectorData.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapSpatialDataRegionType" /> class.</para>
        /// </summary>
        public MapSpatialDataRegionType()
        {
            this._vectorData = new System.Collections.Generic.List<string>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPolygonLayerTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapPolygonLayerTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPolygonTemplateType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPolygonTemplateType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPolygonTemplateType" /> class.</para>
        /// </summary>
        public MapPolygonTemplateType()
        {
            this._hidden = new System.Collections.Generic.List<string>();
            this._offsetX = new System.Collections.Generic.List<string>();
            this._offsetY = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._label = new System.Collections.Generic.List<string>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapPolygonTemplateTypeDataElementOutput>();
            this._dataElementLabel = new System.Collections.Generic.List<string>();
            this._scaleFactor = new System.Collections.Generic.List<string>();
            this._centerPointOffsetX = new System.Collections.Generic.List<string>();
            this._centerPointOffsetY = new System.Collections.Generic.List<string>();
            this._showLabel = new System.Collections.Generic.List<string>();
            this._labelPlacement = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetX;

        [System.Xml.Serialization.XmlElementAttribute("OffsetX")]
        public System.Collections.Generic.List<string> OffsetX
        {
            get
            {
                return this._offsetX;
            }
            private set
            {
                this._offsetX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetXSpecified
        {
            get
            {
                return (this.OffsetX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetY;

        [System.Xml.Serialization.XmlElementAttribute("OffsetY")]
        public System.Collections.Generic.List<string> OffsetY
        {
            get
            {
                return this._offsetY;
            }
            private set
            {
                this._offsetY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetYSpecified
        {
            get
            {
                return (this.OffsetY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _label;

        [System.Xml.Serialization.XmlElementAttribute("Label")]
        public System.Collections.Generic.List<string> Label
        {
            get
            {
                return this._label;
            }
            private set
            {
                this._label = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Label collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelSpecified
        {
            get
            {
                return (this.Label.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPolygonTemplateTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapPolygonTemplateTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementLabel;

        [System.Xml.Serialization.XmlElementAttribute("DataElementLabel")]
        public System.Collections.Generic.List<string> DataElementLabel
        {
            get
            {
                return this._dataElementLabel;
            }
            private set
            {
                this._dataElementLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementLabelSpecified
        {
            get
            {
                return (this.DataElementLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _scaleFactor;

        [System.Xml.Serialization.XmlElementAttribute("ScaleFactor")]
        public System.Collections.Generic.List<string> ScaleFactor
        {
            get
            {
                return this._scaleFactor;
            }
            private set
            {
                this._scaleFactor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleFactor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleFactorSpecified
        {
            get
            {
                return (this.ScaleFactor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _centerPointOffsetX;

        [System.Xml.Serialization.XmlElementAttribute("CenterPointOffsetX")]
        public System.Collections.Generic.List<string> CenterPointOffsetX
        {
            get
            {
                return this._centerPointOffsetX;
            }
            private set
            {
                this._centerPointOffsetX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CenterPointOffsetX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CenterPointOffsetXSpecified
        {
            get
            {
                return (this.CenterPointOffsetX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _centerPointOffsetY;

        [System.Xml.Serialization.XmlElementAttribute("CenterPointOffsetY")]
        public System.Collections.Generic.List<string> CenterPointOffsetY
        {
            get
            {
                return this._centerPointOffsetY;
            }
            private set
            {
                this._centerPointOffsetY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CenterPointOffsetY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CenterPointOffsetYSpecified
        {
            get
            {
                return (this.CenterPointOffsetY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showLabel;

        [System.Xml.Serialization.XmlElementAttribute("ShowLabel")]
        public System.Collections.Generic.List<string> ShowLabel
        {
            get
            {
                return this._showLabel;
            }
            private set
            {
                this._showLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowLabelSpecified
        {
            get
            {
                return (this.ShowLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelPlacement;

        [System.Xml.Serialization.XmlElementAttribute("LabelPlacement")]
        public System.Collections.Generic.List<string> LabelPlacement
        {
            get
            {
                return this._labelPlacement;
            }
            private set
            {
                this._labelPlacement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelPlacement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelPlacementSpecified
        {
            get
            {
                return (this.LabelPlacement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPolygonTemplateTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapPolygonTemplateTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPolygonRulesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPolygonRulesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorRangeRuleType> _mapColorRangeRule;

        [System.Xml.Serialization.XmlElementAttribute("MapColorRangeRule")]
        public System.Collections.Generic.List<MapColorRangeRuleType> MapColorRangeRule
        {
            get
            {
                return this._mapColorRangeRule;
            }
            private set
            {
                this._mapColorRangeRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapColorRangeRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapColorRangeRuleSpecified
        {
            get
            {
                return (this.MapColorRangeRule.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPolygonRulesType" /> class.</para>
        /// </summary>
        public MapPolygonRulesType()
        {
            this._mapColorRangeRule = new System.Collections.Generic.List<MapColorRangeRuleType>();
            this._mapColorPaletteRule = new System.Collections.Generic.List<MapColorPaletteRuleType>();
            this._mapCustomColorRule = new System.Collections.Generic.List<MapCustomColorRuleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorPaletteRuleType> _mapColorPaletteRule;

        [System.Xml.Serialization.XmlElementAttribute("MapColorPaletteRule")]
        public System.Collections.Generic.List<MapColorPaletteRuleType> MapColorPaletteRule
        {
            get
            {
                return this._mapColorPaletteRule;
            }
            private set
            {
                this._mapColorPaletteRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapColorPaletteRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapColorPaletteRuleSpecified
        {
            get
            {
                return (this.MapColorPaletteRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapCustomColorRuleType> _mapCustomColorRule;

        [System.Xml.Serialization.XmlElementAttribute("MapCustomColorRule")]
        public System.Collections.Generic.List<MapCustomColorRuleType> MapCustomColorRule
        {
            get
            {
                return this._mapCustomColorRule;
            }
            private set
            {
                this._mapCustomColorRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapCustomColorRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapCustomColorRuleSpecified
        {
            get
            {
                return (this.MapCustomColorRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapColorRangeRuleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapColorRangeRuleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataValue;

        [System.Xml.Serialization.XmlElementAttribute("DataValue")]
        public System.Collections.Generic.List<string> DataValue
        {
            get
            {
                return this._dataValue;
            }
            private set
            {
                this._dataValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataValueSpecified
        {
            get
            {
                return (this.DataValue.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapColorRangeRuleType" /> class.</para>
        /// </summary>
        public MapColorRangeRuleType()
        {
            this._dataValue = new System.Collections.Generic.List<string>();
            this._distributionType = new System.Collections.Generic.List<string>();
            this._bucketCount = new System.Collections.Generic.List<string>();
            this._startValue = new System.Collections.Generic.List<string>();
            this._endValue = new System.Collections.Generic.List<string>();
            this._mapBuckets = new System.Collections.Generic.List<MapBucketsType>();
            this._legendName = new System.Collections.Generic.List<string>();
            this._legendText = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapColorRangeRuleTypeDataElementOutput>();
            this._showInColorScale = new System.Collections.Generic.List<string>();
            this._startColor = new System.Collections.Generic.List<string>();
            this._middleColor = new System.Collections.Generic.List<string>();
            this._endColor = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distributionType;

        [System.Xml.Serialization.XmlElementAttribute("DistributionType")]
        public System.Collections.Generic.List<string> DistributionType
        {
            get
            {
                return this._distributionType;
            }
            private set
            {
                this._distributionType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistributionType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistributionTypeSpecified
        {
            get
            {
                return (this.DistributionType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bucketCount;

        [System.Xml.Serialization.XmlElementAttribute("BucketCount")]
        public System.Collections.Generic.List<string> BucketCount
        {
            get
            {
                return this._bucketCount;
            }
            private set
            {
                this._bucketCount = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BucketCount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BucketCountSpecified
        {
            get
            {
                return (this.BucketCount.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<string> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<string> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBucketsType> _mapBuckets;

        [System.Xml.Serialization.XmlElementAttribute("MapBuckets")]
        public System.Collections.Generic.List<MapBucketsType> MapBuckets
        {
            get
            {
                return this._mapBuckets;
            }
            private set
            {
                this._mapBuckets = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBuckets collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBucketsSpecified
        {
            get
            {
                return (this.MapBuckets.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendName;

        [System.Xml.Serialization.XmlElementAttribute("LegendName")]
        public System.Collections.Generic.List<string> LegendName
        {
            get
            {
                return this._legendName;
            }
            private set
            {
                this._legendName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendNameSpecified
        {
            get
            {
                return (this.LegendName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendText;

        [System.Xml.Serialization.XmlElementAttribute("LegendText")]
        public System.Collections.Generic.List<string> LegendText
        {
            get
            {
                return this._legendText;
            }
            private set
            {
                this._legendText = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendTextSpecified
        {
            get
            {
                return (this.LegendText.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorRangeRuleTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapColorRangeRuleTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showInColorScale;

        [System.Xml.Serialization.XmlElementAttribute("ShowInColorScale")]
        public System.Collections.Generic.List<string> ShowInColorScale
        {
            get
            {
                return this._showInColorScale;
            }
            private set
            {
                this._showInColorScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowInColorScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowInColorScaleSpecified
        {
            get
            {
                return (this.ShowInColorScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startColor;

        [System.Xml.Serialization.XmlElementAttribute("StartColor")]
        public System.Collections.Generic.List<string> StartColor
        {
            get
            {
                return this._startColor;
            }
            private set
            {
                this._startColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartColorSpecified
        {
            get
            {
                return (this.StartColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _middleColor;

        [System.Xml.Serialization.XmlElementAttribute("MiddleColor")]
        public System.Collections.Generic.List<string> MiddleColor
        {
            get
            {
                return this._middleColor;
            }
            private set
            {
                this._middleColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MiddleColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MiddleColorSpecified
        {
            get
            {
                return (this.MiddleColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endColor;

        [System.Xml.Serialization.XmlElementAttribute("EndColor")]
        public System.Collections.Generic.List<string> EndColor
        {
            get
            {
                return this._endColor;
            }
            private set
            {
                this._endColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndColorSpecified
        {
            get
            {
                return (this.EndColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapBucketsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapBucketsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBucketType> _mapBucket;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapBucket")]
        public System.Collections.Generic.List<MapBucketType> MapBucket
        {
            get
            {
                return this._mapBucket;
            }
            private set
            {
                this._mapBucket = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapBucketsType" /> class.</para>
        /// </summary>
        public MapBucketsType()
        {
            this._mapBucket = new System.Collections.Generic.List<MapBucketType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapBucketType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapBucketType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<string> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapBucketType" /> class.</para>
        /// </summary>
        public MapBucketType()
        {
            this._startValue = new System.Collections.Generic.List<string>();
            this._endValue = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<string> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapColorRangeRuleTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapColorRangeRuleTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapColorPaletteRuleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapColorPaletteRuleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataValue;

        [System.Xml.Serialization.XmlElementAttribute("DataValue")]
        public System.Collections.Generic.List<string> DataValue
        {
            get
            {
                return this._dataValue;
            }
            private set
            {
                this._dataValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataValueSpecified
        {
            get
            {
                return (this.DataValue.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapColorPaletteRuleType" /> class.</para>
        /// </summary>
        public MapColorPaletteRuleType()
        {
            this._dataValue = new System.Collections.Generic.List<string>();
            this._distributionType = new System.Collections.Generic.List<string>();
            this._bucketCount = new System.Collections.Generic.List<string>();
            this._startValue = new System.Collections.Generic.List<string>();
            this._endValue = new System.Collections.Generic.List<string>();
            this._mapBuckets = new System.Collections.Generic.List<MapBucketsType>();
            this._legendName = new System.Collections.Generic.List<string>();
            this._legendText = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapColorPaletteRuleTypeDataElementOutput>();
            this._showInColorScale = new System.Collections.Generic.List<string>();
            this._palette = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distributionType;

        [System.Xml.Serialization.XmlElementAttribute("DistributionType")]
        public System.Collections.Generic.List<string> DistributionType
        {
            get
            {
                return this._distributionType;
            }
            private set
            {
                this._distributionType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistributionType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistributionTypeSpecified
        {
            get
            {
                return (this.DistributionType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bucketCount;

        [System.Xml.Serialization.XmlElementAttribute("BucketCount")]
        public System.Collections.Generic.List<string> BucketCount
        {
            get
            {
                return this._bucketCount;
            }
            private set
            {
                this._bucketCount = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BucketCount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BucketCountSpecified
        {
            get
            {
                return (this.BucketCount.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<string> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<string> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBucketsType> _mapBuckets;

        [System.Xml.Serialization.XmlElementAttribute("MapBuckets")]
        public System.Collections.Generic.List<MapBucketsType> MapBuckets
        {
            get
            {
                return this._mapBuckets;
            }
            private set
            {
                this._mapBuckets = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBuckets collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBucketsSpecified
        {
            get
            {
                return (this.MapBuckets.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendName;

        [System.Xml.Serialization.XmlElementAttribute("LegendName")]
        public System.Collections.Generic.List<string> LegendName
        {
            get
            {
                return this._legendName;
            }
            private set
            {
                this._legendName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendNameSpecified
        {
            get
            {
                return (this.LegendName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendText;

        [System.Xml.Serialization.XmlElementAttribute("LegendText")]
        public System.Collections.Generic.List<string> LegendText
        {
            get
            {
                return this._legendText;
            }
            private set
            {
                this._legendText = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendTextSpecified
        {
            get
            {
                return (this.LegendText.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorPaletteRuleTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapColorPaletteRuleTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showInColorScale;

        [System.Xml.Serialization.XmlElementAttribute("ShowInColorScale")]
        public System.Collections.Generic.List<string> ShowInColorScale
        {
            get
            {
                return this._showInColorScale;
            }
            private set
            {
                this._showInColorScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowInColorScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowInColorScaleSpecified
        {
            get
            {
                return (this.ShowInColorScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _palette;

        [System.Xml.Serialization.XmlElementAttribute("Palette")]
        public System.Collections.Generic.List<string> Palette
        {
            get
            {
                return this._palette;
            }
            private set
            {
                this._palette = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Palette collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaletteSpecified
        {
            get
            {
                return (this.Palette.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapColorPaletteRuleTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapColorPaletteRuleTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapCustomColorRuleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapCustomColorRuleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataValue;

        [System.Xml.Serialization.XmlElementAttribute("DataValue")]
        public System.Collections.Generic.List<string> DataValue
        {
            get
            {
                return this._dataValue;
            }
            private set
            {
                this._dataValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataValueSpecified
        {
            get
            {
                return (this.DataValue.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapCustomColorRuleType" /> class.</para>
        /// </summary>
        public MapCustomColorRuleType()
        {
            this._dataValue = new System.Collections.Generic.List<string>();
            this._distributionType = new System.Collections.Generic.List<string>();
            this._bucketCount = new System.Collections.Generic.List<string>();
            this._startValue = new System.Collections.Generic.List<string>();
            this._endValue = new System.Collections.Generic.List<string>();
            this._mapBuckets = new System.Collections.Generic.List<MapBucketsType>();
            this._legendName = new System.Collections.Generic.List<string>();
            this._legendText = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapCustomColorRuleTypeDataElementOutput>();
            this._showInColorScale = new System.Collections.Generic.List<string>();
            this._mapCustomColors = new System.Collections.Generic.List<MapCustomColorsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distributionType;

        [System.Xml.Serialization.XmlElementAttribute("DistributionType")]
        public System.Collections.Generic.List<string> DistributionType
        {
            get
            {
                return this._distributionType;
            }
            private set
            {
                this._distributionType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistributionType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistributionTypeSpecified
        {
            get
            {
                return (this.DistributionType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bucketCount;

        [System.Xml.Serialization.XmlElementAttribute("BucketCount")]
        public System.Collections.Generic.List<string> BucketCount
        {
            get
            {
                return this._bucketCount;
            }
            private set
            {
                this._bucketCount = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BucketCount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BucketCountSpecified
        {
            get
            {
                return (this.BucketCount.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<string> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<string> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBucketsType> _mapBuckets;

        [System.Xml.Serialization.XmlElementAttribute("MapBuckets")]
        public System.Collections.Generic.List<MapBucketsType> MapBuckets
        {
            get
            {
                return this._mapBuckets;
            }
            private set
            {
                this._mapBuckets = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBuckets collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBucketsSpecified
        {
            get
            {
                return (this.MapBuckets.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendName;

        [System.Xml.Serialization.XmlElementAttribute("LegendName")]
        public System.Collections.Generic.List<string> LegendName
        {
            get
            {
                return this._legendName;
            }
            private set
            {
                this._legendName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendNameSpecified
        {
            get
            {
                return (this.LegendName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendText;

        [System.Xml.Serialization.XmlElementAttribute("LegendText")]
        public System.Collections.Generic.List<string> LegendText
        {
            get
            {
                return this._legendText;
            }
            private set
            {
                this._legendText = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendTextSpecified
        {
            get
            {
                return (this.LegendText.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapCustomColorRuleTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapCustomColorRuleTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showInColorScale;

        [System.Xml.Serialization.XmlElementAttribute("ShowInColorScale")]
        public System.Collections.Generic.List<string> ShowInColorScale
        {
            get
            {
                return this._showInColorScale;
            }
            private set
            {
                this._showInColorScale = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowInColorScale collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowInColorScaleSpecified
        {
            get
            {
                return (this.ShowInColorScale.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapCustomColorsType> _mapCustomColors;

        [System.Xml.Serialization.XmlElementAttribute("MapCustomColors")]
        public System.Collections.Generic.List<MapCustomColorsType> MapCustomColors
        {
            get
            {
                return this._mapCustomColors;
            }
            private set
            {
                this._mapCustomColors = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapCustomColors collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapCustomColorsSpecified
        {
            get
            {
                return (this.MapCustomColors.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapCustomColorRuleTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapCustomColorRuleTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapCustomColorsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapCustomColorsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapCustomColor;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapCustomColor")]
        public System.Collections.Generic.List<string> MapCustomColor
        {
            get
            {
                return this._mapCustomColor;
            }
            private set
            {
                this._mapCustomColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapCustomColorsType" /> class.</para>
        /// </summary>
        public MapCustomColorsType()
        {
            this._mapCustomColor = new System.Collections.Generic.List<string>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapMarkerTemplateType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapMarkerTemplateType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapMarkerTemplateType" /> class.</para>
        /// </summary>
        public MapMarkerTemplateType()
        {
            this._hidden = new System.Collections.Generic.List<string>();
            this._offsetX = new System.Collections.Generic.List<string>();
            this._offsetY = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._label = new System.Collections.Generic.List<string>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapMarkerTemplateTypeDataElementOutput>();
            this._dataElementLabel = new System.Collections.Generic.List<string>();
            this._size = new System.Collections.Generic.List<string>();
            this._labelPlacement = new System.Collections.Generic.List<string>();
            this._mapMarker = new System.Collections.Generic.List<MapMarkerType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetX;

        [System.Xml.Serialization.XmlElementAttribute("OffsetX")]
        public System.Collections.Generic.List<string> OffsetX
        {
            get
            {
                return this._offsetX;
            }
            private set
            {
                this._offsetX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetXSpecified
        {
            get
            {
                return (this.OffsetX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetY;

        [System.Xml.Serialization.XmlElementAttribute("OffsetY")]
        public System.Collections.Generic.List<string> OffsetY
        {
            get
            {
                return this._offsetY;
            }
            private set
            {
                this._offsetY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetYSpecified
        {
            get
            {
                return (this.OffsetY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _label;

        [System.Xml.Serialization.XmlElementAttribute("Label")]
        public System.Collections.Generic.List<string> Label
        {
            get
            {
                return this._label;
            }
            private set
            {
                this._label = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Label collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelSpecified
        {
            get
            {
                return (this.Label.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerTemplateTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapMarkerTemplateTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementLabel;

        [System.Xml.Serialization.XmlElementAttribute("DataElementLabel")]
        public System.Collections.Generic.List<string> DataElementLabel
        {
            get
            {
                return this._dataElementLabel;
            }
            private set
            {
                this._dataElementLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementLabelSpecified
        {
            get
            {
                return (this.DataElementLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _size;

        [System.Xml.Serialization.XmlElementAttribute("Size")]
        public System.Collections.Generic.List<string> Size
        {
            get
            {
                return this._size;
            }
            private set
            {
                this._size = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Size collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified
        {
            get
            {
                return (this.Size.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelPlacement;

        [System.Xml.Serialization.XmlElementAttribute("LabelPlacement")]
        public System.Collections.Generic.List<string> LabelPlacement
        {
            get
            {
                return this._labelPlacement;
            }
            private set
            {
                this._labelPlacement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelPlacement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelPlacementSpecified
        {
            get
            {
                return (this.LabelPlacement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerType> _mapMarker;

        [System.Xml.Serialization.XmlElementAttribute("MapMarker")]
        public System.Collections.Generic.List<MapMarkerType> MapMarker
        {
            get
            {
                return this._mapMarker;
            }
            private set
            {
                this._mapMarker = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarker collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkerSpecified
        {
            get
            {
                return (this.MapMarker.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapMarkerTemplateTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapMarkerTemplateTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapMarkerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapMarkerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapMarkerStyle;

        [System.Xml.Serialization.XmlElementAttribute("MapMarkerStyle")]
        public System.Collections.Generic.List<string> MapMarkerStyle
        {
            get
            {
                return this._mapMarkerStyle;
            }
            private set
            {
                this._mapMarkerStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarkerStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkerStyleSpecified
        {
            get
            {
                return (this.MapMarkerStyle.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapMarkerType" /> class.</para>
        /// </summary>
        public MapMarkerType()
        {
            this._mapMarkerStyle = new System.Collections.Generic.List<string>();
            this._mapMarkerImage = new System.Collections.Generic.List<MapMarkerImageType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerImageType> _mapMarkerImage;

        [System.Xml.Serialization.XmlElementAttribute("MapMarkerImage")]
        public System.Collections.Generic.List<MapMarkerImageType> MapMarkerImage
        {
            get
            {
                return this._mapMarkerImage;
            }
            private set
            {
                this._mapMarkerImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarkerImage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkerImageSpecified
        {
            get
            {
                return (this.MapMarkerImage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapMarkerImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapMarkerImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _source;

        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public System.Collections.Generic.List<string> Source
        {
            get
            {
                return this._source;
            }
            private set
            {
                this._source = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Source collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified
        {
            get
            {
                return (this.Source.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapMarkerImageType" /> class.</para>
        /// </summary>
        public MapMarkerImageType()
        {
            this._source = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._transparentColor = new System.Collections.Generic.List<string>();
            this._resizeMode = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparentColor;

        [System.Xml.Serialization.XmlElementAttribute("TransparentColor")]
        public System.Collections.Generic.List<string> TransparentColor
        {
            get
            {
                return this._transparentColor;
            }
            private set
            {
                this._transparentColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransparentColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentColorSpecified
        {
            get
            {
                return (this.TransparentColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _resizeMode;

        [System.Xml.Serialization.XmlElementAttribute("ResizeMode")]
        public System.Collections.Generic.List<string> ResizeMode
        {
            get
            {
                return this._resizeMode;
            }
            private set
            {
                this._resizeMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ResizeMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResizeModeSpecified
        {
            get
            {
                return (this.ResizeMode.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPointRulesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPointRulesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorRangeRuleType> _mapColorRangeRule;

        [System.Xml.Serialization.XmlElementAttribute("MapColorRangeRule")]
        public System.Collections.Generic.List<MapColorRangeRuleType> MapColorRangeRule
        {
            get
            {
                return this._mapColorRangeRule;
            }
            private set
            {
                this._mapColorRangeRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapColorRangeRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapColorRangeRuleSpecified
        {
            get
            {
                return (this.MapColorRangeRule.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPointRulesType" /> class.</para>
        /// </summary>
        public MapPointRulesType()
        {
            this._mapColorRangeRule = new System.Collections.Generic.List<MapColorRangeRuleType>();
            this._mapColorPaletteRule = new System.Collections.Generic.List<MapColorPaletteRuleType>();
            this._mapCustomColorRule = new System.Collections.Generic.List<MapCustomColorRuleType>();
            this._mapSizeRule = new System.Collections.Generic.List<MapSizeRuleType>();
            this._mapMarkerRule = new System.Collections.Generic.List<MapMarkerRuleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorPaletteRuleType> _mapColorPaletteRule;

        [System.Xml.Serialization.XmlElementAttribute("MapColorPaletteRule")]
        public System.Collections.Generic.List<MapColorPaletteRuleType> MapColorPaletteRule
        {
            get
            {
                return this._mapColorPaletteRule;
            }
            private set
            {
                this._mapColorPaletteRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapColorPaletteRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapColorPaletteRuleSpecified
        {
            get
            {
                return (this.MapColorPaletteRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapCustomColorRuleType> _mapCustomColorRule;

        [System.Xml.Serialization.XmlElementAttribute("MapCustomColorRule")]
        public System.Collections.Generic.List<MapCustomColorRuleType> MapCustomColorRule
        {
            get
            {
                return this._mapCustomColorRule;
            }
            private set
            {
                this._mapCustomColorRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapCustomColorRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapCustomColorRuleSpecified
        {
            get
            {
                return (this.MapCustomColorRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSizeRuleType> _mapSizeRule;

        [System.Xml.Serialization.XmlElementAttribute("MapSizeRule")]
        public System.Collections.Generic.List<MapSizeRuleType> MapSizeRule
        {
            get
            {
                return this._mapSizeRule;
            }
            private set
            {
                this._mapSizeRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSizeRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSizeRuleSpecified
        {
            get
            {
                return (this.MapSizeRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerRuleType> _mapMarkerRule;

        [System.Xml.Serialization.XmlElementAttribute("MapMarkerRule")]
        public System.Collections.Generic.List<MapMarkerRuleType> MapMarkerRule
        {
            get
            {
                return this._mapMarkerRule;
            }
            private set
            {
                this._mapMarkerRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarkerRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkerRuleSpecified
        {
            get
            {
                return (this.MapMarkerRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapSizeRuleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapSizeRuleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataValue;

        [System.Xml.Serialization.XmlElementAttribute("DataValue")]
        public System.Collections.Generic.List<string> DataValue
        {
            get
            {
                return this._dataValue;
            }
            private set
            {
                this._dataValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataValueSpecified
        {
            get
            {
                return (this.DataValue.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapSizeRuleType" /> class.</para>
        /// </summary>
        public MapSizeRuleType()
        {
            this._dataValue = new System.Collections.Generic.List<string>();
            this._distributionType = new System.Collections.Generic.List<string>();
            this._bucketCount = new System.Collections.Generic.List<string>();
            this._startValue = new System.Collections.Generic.List<string>();
            this._endValue = new System.Collections.Generic.List<string>();
            this._mapBuckets = new System.Collections.Generic.List<MapBucketsType>();
            this._legendName = new System.Collections.Generic.List<string>();
            this._legendText = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapSizeRuleTypeDataElementOutput>();
            this._startSize = new System.Collections.Generic.List<string>();
            this._endSize = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distributionType;

        [System.Xml.Serialization.XmlElementAttribute("DistributionType")]
        public System.Collections.Generic.List<string> DistributionType
        {
            get
            {
                return this._distributionType;
            }
            private set
            {
                this._distributionType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistributionType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistributionTypeSpecified
        {
            get
            {
                return (this.DistributionType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bucketCount;

        [System.Xml.Serialization.XmlElementAttribute("BucketCount")]
        public System.Collections.Generic.List<string> BucketCount
        {
            get
            {
                return this._bucketCount;
            }
            private set
            {
                this._bucketCount = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BucketCount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BucketCountSpecified
        {
            get
            {
                return (this.BucketCount.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<string> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<string> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBucketsType> _mapBuckets;

        [System.Xml.Serialization.XmlElementAttribute("MapBuckets")]
        public System.Collections.Generic.List<MapBucketsType> MapBuckets
        {
            get
            {
                return this._mapBuckets;
            }
            private set
            {
                this._mapBuckets = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBuckets collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBucketsSpecified
        {
            get
            {
                return (this.MapBuckets.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendName;

        [System.Xml.Serialization.XmlElementAttribute("LegendName")]
        public System.Collections.Generic.List<string> LegendName
        {
            get
            {
                return this._legendName;
            }
            private set
            {
                this._legendName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendNameSpecified
        {
            get
            {
                return (this.LegendName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendText;

        [System.Xml.Serialization.XmlElementAttribute("LegendText")]
        public System.Collections.Generic.List<string> LegendText
        {
            get
            {
                return this._legendText;
            }
            private set
            {
                this._legendText = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendTextSpecified
        {
            get
            {
                return (this.LegendText.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSizeRuleTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapSizeRuleTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startSize;

        [System.Xml.Serialization.XmlElementAttribute("StartSize")]
        public System.Collections.Generic.List<string> StartSize
        {
            get
            {
                return this._startSize;
            }
            private set
            {
                this._startSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartSizeSpecified
        {
            get
            {
                return (this.StartSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endSize;

        [System.Xml.Serialization.XmlElementAttribute("EndSize")]
        public System.Collections.Generic.List<string> EndSize
        {
            get
            {
                return this._endSize;
            }
            private set
            {
                this._endSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndSizeSpecified
        {
            get
            {
                return (this.EndSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapSizeRuleTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapSizeRuleTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapMarkerRuleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapMarkerRuleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataValue;

        [System.Xml.Serialization.XmlElementAttribute("DataValue")]
        public System.Collections.Generic.List<string> DataValue
        {
            get
            {
                return this._dataValue;
            }
            private set
            {
                this._dataValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataValueSpecified
        {
            get
            {
                return (this.DataValue.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapMarkerRuleType" /> class.</para>
        /// </summary>
        public MapMarkerRuleType()
        {
            this._dataValue = new System.Collections.Generic.List<string>();
            this._distributionType = new System.Collections.Generic.List<string>();
            this._bucketCount = new System.Collections.Generic.List<string>();
            this._startValue = new System.Collections.Generic.List<string>();
            this._endValue = new System.Collections.Generic.List<string>();
            this._mapBuckets = new System.Collections.Generic.List<MapBucketsType>();
            this._legendName = new System.Collections.Generic.List<string>();
            this._legendText = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapMarkerRuleTypeDataElementOutput>();
            this._mapMarkers = new System.Collections.Generic.List<MapMarkersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _distributionType;

        [System.Xml.Serialization.XmlElementAttribute("DistributionType")]
        public System.Collections.Generic.List<string> DistributionType
        {
            get
            {
                return this._distributionType;
            }
            private set
            {
                this._distributionType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistributionType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistributionTypeSpecified
        {
            get
            {
                return (this.DistributionType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bucketCount;

        [System.Xml.Serialization.XmlElementAttribute("BucketCount")]
        public System.Collections.Generic.List<string> BucketCount
        {
            get
            {
                return this._bucketCount;
            }
            private set
            {
                this._bucketCount = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BucketCount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BucketCountSpecified
        {
            get
            {
                return (this.BucketCount.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _startValue;

        [System.Xml.Serialization.XmlElementAttribute("StartValue")]
        public System.Collections.Generic.List<string> StartValue
        {
            get
            {
                return this._startValue;
            }
            private set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StartValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartValueSpecified
        {
            get
            {
                return (this.StartValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _endValue;

        [System.Xml.Serialization.XmlElementAttribute("EndValue")]
        public System.Collections.Generic.List<string> EndValue
        {
            get
            {
                return this._endValue;
            }
            private set
            {
                this._endValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EndValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndValueSpecified
        {
            get
            {
                return (this.EndValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBucketsType> _mapBuckets;

        [System.Xml.Serialization.XmlElementAttribute("MapBuckets")]
        public System.Collections.Generic.List<MapBucketsType> MapBuckets
        {
            get
            {
                return this._mapBuckets;
            }
            private set
            {
                this._mapBuckets = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBuckets collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBucketsSpecified
        {
            get
            {
                return (this.MapBuckets.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendName;

        [System.Xml.Serialization.XmlElementAttribute("LegendName")]
        public System.Collections.Generic.List<string> LegendName
        {
            get
            {
                return this._legendName;
            }
            private set
            {
                this._legendName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendNameSpecified
        {
            get
            {
                return (this.LegendName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _legendText;

        [System.Xml.Serialization.XmlElementAttribute("LegendText")]
        public System.Collections.Generic.List<string> LegendText
        {
            get
            {
                return this._legendText;
            }
            private set
            {
                this._legendText = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LegendText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendTextSpecified
        {
            get
            {
                return (this.LegendText.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerRuleTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapMarkerRuleTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkersType> _mapMarkers;

        [System.Xml.Serialization.XmlElementAttribute("MapMarkers")]
        public System.Collections.Generic.List<MapMarkersType> MapMarkers
        {
            get
            {
                return this._mapMarkers;
            }
            private set
            {
                this._mapMarkers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarkers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkersSpecified
        {
            get
            {
                return (this.MapMarkers.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapMarkerRuleTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapMarkerRuleTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapMarkersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapMarkersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerType> _mapMarker;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapMarker")]
        public System.Collections.Generic.List<MapMarkerType> MapMarker
        {
            get
            {
                return this._mapMarker;
            }
            private set
            {
                this._mapMarker = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapMarkersType" /> class.</para>
        /// </summary>
        public MapMarkersType()
        {
            this._mapMarker = new System.Collections.Generic.List<MapMarkerType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPolygonsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPolygonsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPolygonType> _mapPolygon;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapPolygon")]
        public System.Collections.Generic.List<MapPolygonType> MapPolygon
        {
            get
            {
                return this._mapPolygon;
            }
            private set
            {
                this._mapPolygon = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPolygonsType" /> class.</para>
        /// </summary>
        public MapPolygonsType()
        {
            this._mapPolygon = new System.Collections.Generic.List<MapPolygonType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPolygonType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPolygonType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _vectorData;

        [System.Xml.Serialization.XmlElementAttribute("VectorData")]
        public System.Collections.Generic.List<string> VectorData
        {
            get
            {
                return this._vectorData;
            }
            private set
            {
                this._vectorData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VectorData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VectorDataSpecified
        {
            get
            {
                return (this.VectorData.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPolygonType" /> class.</para>
        /// </summary>
        public MapPolygonType()
        {
            this._vectorData = new System.Collections.Generic.List<string>();
            this._mapFields = new System.Collections.Generic.List<MapFieldsType>();
            this._useCustomPolygonTemplate = new System.Collections.Generic.List<string>();
            this._mapPolygonTemplate = new System.Collections.Generic.List<MapPolygonTemplateType>();
            this._useCustomCenterPointTemplate = new System.Collections.Generic.List<string>();
            this._mapMarkerTemplate = new System.Collections.Generic.List<MapMarkerTemplateType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldsType> _mapFields;

        [System.Xml.Serialization.XmlElementAttribute("MapFields")]
        public System.Collections.Generic.List<MapFieldsType> MapFields
        {
            get
            {
                return this._mapFields;
            }
            private set
            {
                this._mapFields = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapFields collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapFieldsSpecified
        {
            get
            {
                return (this.MapFields.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useCustomPolygonTemplate;

        [System.Xml.Serialization.XmlElementAttribute("UseCustomPolygonTemplate")]
        public System.Collections.Generic.List<string> UseCustomPolygonTemplate
        {
            get
            {
                return this._useCustomPolygonTemplate;
            }
            private set
            {
                this._useCustomPolygonTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseCustomPolygonTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseCustomPolygonTemplateSpecified
        {
            get
            {
                return (this.UseCustomPolygonTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPolygonTemplateType> _mapPolygonTemplate;

        [System.Xml.Serialization.XmlElementAttribute("MapPolygonTemplate")]
        public System.Collections.Generic.List<MapPolygonTemplateType> MapPolygonTemplate
        {
            get
            {
                return this._mapPolygonTemplate;
            }
            private set
            {
                this._mapPolygonTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapPolygonTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapPolygonTemplateSpecified
        {
            get
            {
                return (this.MapPolygonTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useCustomCenterPointTemplate;

        [System.Xml.Serialization.XmlElementAttribute("UseCustomCenterPointTemplate")]
        public System.Collections.Generic.List<string> UseCustomCenterPointTemplate
        {
            get
            {
                return this._useCustomCenterPointTemplate;
            }
            private set
            {
                this._useCustomCenterPointTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseCustomCenterPointTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseCustomCenterPointTemplateSpecified
        {
            get
            {
                return (this.UseCustomCenterPointTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerTemplateType> _mapMarkerTemplate;

        [System.Xml.Serialization.XmlElementAttribute("MapMarkerTemplate")]
        public System.Collections.Generic.List<MapMarkerTemplateType> MapMarkerTemplate
        {
            get
            {
                return this._mapMarkerTemplate;
            }
            private set
            {
                this._mapMarkerTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarkerTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkerTemplateSpecified
        {
            get
            {
                return (this.MapMarkerTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapFieldsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapFieldsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldType> _mapField;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapField")]
        public System.Collections.Generic.List<MapFieldType> MapField
        {
            get
            {
                return this._mapField;
            }
            private set
            {
                this._mapField = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapFieldsType" /> class.</para>
        /// </summary>
        public MapFieldsType()
        {
            this._mapField = new System.Collections.Generic.List<MapFieldType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapFieldType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapFieldType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _name;

        [System.Xml.Serialization.XmlElementAttribute("Name")]
        public System.Collections.Generic.List<string> Name
        {
            get
            {
                return this._name;
            }
            private set
            {
                this._name = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified
        {
            get
            {
                return (this.Name.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapFieldType" /> class.</para>
        /// </summary>
        public MapFieldType()
        {
            this._name = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPointLayerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPointLayerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _visibilityMode;

        [System.Xml.Serialization.XmlElementAttribute("VisibilityMode")]
        public System.Collections.Generic.List<string> VisibilityMode
        {
            get
            {
                return this._visibilityMode;
            }
            private set
            {
                this._visibilityMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VisibilityMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilityModeSpecified
        {
            get
            {
                return (this.VisibilityMode.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPointLayerType" /> class.</para>
        /// </summary>
        public MapPointLayerType()
        {
            this._visibilityMode = new System.Collections.Generic.List<string>();
            this._minimumZoom = new System.Collections.Generic.List<string>();
            this._maximumZoom = new System.Collections.Generic.List<string>();
            this._transparency = new System.Collections.Generic.List<string>();
            this._mapDataRegionName = new System.Collections.Generic.List<string>();
            this._mapBindingFieldPairs = new System.Collections.Generic.List<MapBindingFieldPairsType>();
            this._mapFieldDefinitions = new System.Collections.Generic.List<MapFieldDefinitionsType>();
            this._mapShapefile = new System.Collections.Generic.List<MapShapefileType>();
            this._mapSpatialDataSet = new System.Collections.Generic.List<MapSpatialDataSetType>();
            this._mapSpatialDataRegion = new System.Collections.Generic.List<MapSpatialDataRegionType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapPointLayerTypeDataElementOutput>();
            this._mapMarkerTemplate = new System.Collections.Generic.List<MapMarkerTemplateType>();
            this._mapPointRules = new System.Collections.Generic.List<MapPointRulesType>();
            this._mapPoints = new System.Collections.Generic.List<MapPointsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MinimumZoom")]
        public System.Collections.Generic.List<string> MinimumZoom
        {
            get
            {
                return this._minimumZoom;
            }
            private set
            {
                this._minimumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumZoomSpecified
        {
            get
            {
                return (this.MinimumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MaximumZoom")]
        public System.Collections.Generic.List<string> MaximumZoom
        {
            get
            {
                return this._maximumZoom;
            }
            private set
            {
                this._maximumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumZoomSpecified
        {
            get
            {
                return (this.MaximumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparency;

        [System.Xml.Serialization.XmlElementAttribute("Transparency")]
        public System.Collections.Generic.List<string> Transparency
        {
            get
            {
                return this._transparency;
            }
            private set
            {
                this._transparency = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transparency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return (this.Transparency.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapDataRegionName;

        [System.Xml.Serialization.XmlElementAttribute("MapDataRegionName")]
        public System.Collections.Generic.List<string> MapDataRegionName
        {
            get
            {
                return this._mapDataRegionName;
            }
            private set
            {
                this._mapDataRegionName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapDataRegionName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapDataRegionNameSpecified
        {
            get
            {
                return (this.MapDataRegionName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBindingFieldPairsType> _mapBindingFieldPairs;

        [System.Xml.Serialization.XmlElementAttribute("MapBindingFieldPairs")]
        public System.Collections.Generic.List<MapBindingFieldPairsType> MapBindingFieldPairs
        {
            get
            {
                return this._mapBindingFieldPairs;
            }
            private set
            {
                this._mapBindingFieldPairs = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBindingFieldPairs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBindingFieldPairsSpecified
        {
            get
            {
                return (this.MapBindingFieldPairs.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldDefinitionsType> _mapFieldDefinitions;

        [System.Xml.Serialization.XmlElementAttribute("MapFieldDefinitions")]
        public System.Collections.Generic.List<MapFieldDefinitionsType> MapFieldDefinitions
        {
            get
            {
                return this._mapFieldDefinitions;
            }
            private set
            {
                this._mapFieldDefinitions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapFieldDefinitions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapFieldDefinitionsSpecified
        {
            get
            {
                return (this.MapFieldDefinitions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapShapefileType> _mapShapefile;

        [System.Xml.Serialization.XmlElementAttribute("MapShapefile")]
        public System.Collections.Generic.List<MapShapefileType> MapShapefile
        {
            get
            {
                return this._mapShapefile;
            }
            private set
            {
                this._mapShapefile = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapShapefile collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapShapefileSpecified
        {
            get
            {
                return (this.MapShapefile.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSpatialDataSetType> _mapSpatialDataSet;

        [System.Xml.Serialization.XmlElementAttribute("MapSpatialDataSet")]
        public System.Collections.Generic.List<MapSpatialDataSetType> MapSpatialDataSet
        {
            get
            {
                return this._mapSpatialDataSet;
            }
            private set
            {
                this._mapSpatialDataSet = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSpatialDataSet collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSpatialDataSetSpecified
        {
            get
            {
                return (this.MapSpatialDataSet.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSpatialDataRegionType> _mapSpatialDataRegion;

        [System.Xml.Serialization.XmlElementAttribute("MapSpatialDataRegion")]
        public System.Collections.Generic.List<MapSpatialDataRegionType> MapSpatialDataRegion
        {
            get
            {
                return this._mapSpatialDataRegion;
            }
            private set
            {
                this._mapSpatialDataRegion = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSpatialDataRegion collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSpatialDataRegionSpecified
        {
            get
            {
                return (this.MapSpatialDataRegion.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPointLayerTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapPointLayerTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerTemplateType> _mapMarkerTemplate;

        [System.Xml.Serialization.XmlElementAttribute("MapMarkerTemplate")]
        public System.Collections.Generic.List<MapMarkerTemplateType> MapMarkerTemplate
        {
            get
            {
                return this._mapMarkerTemplate;
            }
            private set
            {
                this._mapMarkerTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarkerTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkerTemplateSpecified
        {
            get
            {
                return (this.MapMarkerTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPointRulesType> _mapPointRules;

        [System.Xml.Serialization.XmlElementAttribute("MapPointRules")]
        public System.Collections.Generic.List<MapPointRulesType> MapPointRules
        {
            get
            {
                return this._mapPointRules;
            }
            private set
            {
                this._mapPointRules = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapPointRules collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapPointRulesSpecified
        {
            get
            {
                return (this.MapPointRules.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPointsType> _mapPoints;

        [System.Xml.Serialization.XmlElementAttribute("MapPoints")]
        public System.Collections.Generic.List<MapPointsType> MapPoints
        {
            get
            {
                return this._mapPoints;
            }
            private set
            {
                this._mapPoints = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapPoints collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapPointsSpecified
        {
            get
            {
                return (this.MapPoints.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPointLayerTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapPointLayerTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPointsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPointsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapPointType> _mapPoint;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapPoint")]
        public System.Collections.Generic.List<MapPointType> MapPoint
        {
            get
            {
                return this._mapPoint;
            }
            private set
            {
                this._mapPoint = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPointsType" /> class.</para>
        /// </summary>
        public MapPointsType()
        {
            this._mapPoint = new System.Collections.Generic.List<MapPointType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapPointType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapPointType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _vectorData;

        [System.Xml.Serialization.XmlElementAttribute("VectorData")]
        public System.Collections.Generic.List<string> VectorData
        {
            get
            {
                return this._vectorData;
            }
            private set
            {
                this._vectorData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VectorData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VectorDataSpecified
        {
            get
            {
                return (this.VectorData.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapPointType" /> class.</para>
        /// </summary>
        public MapPointType()
        {
            this._vectorData = new System.Collections.Generic.List<string>();
            this._mapFields = new System.Collections.Generic.List<MapFieldsType>();
            this._useCustomPointTemplate = new System.Collections.Generic.List<string>();
            this._mapMarkerTemplate = new System.Collections.Generic.List<MapMarkerTemplateType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldsType> _mapFields;

        [System.Xml.Serialization.XmlElementAttribute("MapFields")]
        public System.Collections.Generic.List<MapFieldsType> MapFields
        {
            get
            {
                return this._mapFields;
            }
            private set
            {
                this._mapFields = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapFields collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapFieldsSpecified
        {
            get
            {
                return (this.MapFields.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useCustomPointTemplate;

        [System.Xml.Serialization.XmlElementAttribute("UseCustomPointTemplate")]
        public System.Collections.Generic.List<string> UseCustomPointTemplate
        {
            get
            {
                return this._useCustomPointTemplate;
            }
            private set
            {
                this._useCustomPointTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseCustomPointTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseCustomPointTemplateSpecified
        {
            get
            {
                return (this.UseCustomPointTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMarkerTemplateType> _mapMarkerTemplate;

        [System.Xml.Serialization.XmlElementAttribute("MapMarkerTemplate")]
        public System.Collections.Generic.List<MapMarkerTemplateType> MapMarkerTemplate
        {
            get
            {
                return this._mapMarkerTemplate;
            }
            private set
            {
                this._mapMarkerTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMarkerTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMarkerTemplateSpecified
        {
            get
            {
                return (this.MapMarkerTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLineLayerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLineLayerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _visibilityMode;

        [System.Xml.Serialization.XmlElementAttribute("VisibilityMode")]
        public System.Collections.Generic.List<string> VisibilityMode
        {
            get
            {
                return this._visibilityMode;
            }
            private set
            {
                this._visibilityMode = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VisibilityMode collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilityModeSpecified
        {
            get
            {
                return (this.VisibilityMode.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLineLayerType" /> class.</para>
        /// </summary>
        public MapLineLayerType()
        {
            this._visibilityMode = new System.Collections.Generic.List<string>();
            this._minimumZoom = new System.Collections.Generic.List<string>();
            this._maximumZoom = new System.Collections.Generic.List<string>();
            this._transparency = new System.Collections.Generic.List<string>();
            this._mapDataRegionName = new System.Collections.Generic.List<string>();
            this._mapBindingFieldPairs = new System.Collections.Generic.List<MapBindingFieldPairsType>();
            this._mapFieldDefinitions = new System.Collections.Generic.List<MapFieldDefinitionsType>();
            this._mapShapefile = new System.Collections.Generic.List<MapShapefileType>();
            this._mapSpatialDataSet = new System.Collections.Generic.List<MapSpatialDataSetType>();
            this._mapSpatialDataRegion = new System.Collections.Generic.List<MapSpatialDataRegionType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapLineLayerTypeDataElementOutput>();
            this._mapLineTemplate = new System.Collections.Generic.List<MapLineTemplateType>();
            this._mapLineRules = new System.Collections.Generic.List<MapLineRulesType>();
            this._mapLines = new System.Collections.Generic.List<MapLinesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MinimumZoom")]
        public System.Collections.Generic.List<string> MinimumZoom
        {
            get
            {
                return this._minimumZoom;
            }
            private set
            {
                this._minimumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumZoomSpecified
        {
            get
            {
                return (this.MinimumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MaximumZoom")]
        public System.Collections.Generic.List<string> MaximumZoom
        {
            get
            {
                return this._maximumZoom;
            }
            private set
            {
                this._maximumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumZoomSpecified
        {
            get
            {
                return (this.MaximumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _transparency;

        [System.Xml.Serialization.XmlElementAttribute("Transparency")]
        public System.Collections.Generic.List<string> Transparency
        {
            get
            {
                return this._transparency;
            }
            private set
            {
                this._transparency = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transparency collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return (this.Transparency.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapDataRegionName;

        [System.Xml.Serialization.XmlElementAttribute("MapDataRegionName")]
        public System.Collections.Generic.List<string> MapDataRegionName
        {
            get
            {
                return this._mapDataRegionName;
            }
            private set
            {
                this._mapDataRegionName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapDataRegionName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapDataRegionNameSpecified
        {
            get
            {
                return (this.MapDataRegionName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBindingFieldPairsType> _mapBindingFieldPairs;

        [System.Xml.Serialization.XmlElementAttribute("MapBindingFieldPairs")]
        public System.Collections.Generic.List<MapBindingFieldPairsType> MapBindingFieldPairs
        {
            get
            {
                return this._mapBindingFieldPairs;
            }
            private set
            {
                this._mapBindingFieldPairs = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBindingFieldPairs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBindingFieldPairsSpecified
        {
            get
            {
                return (this.MapBindingFieldPairs.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldDefinitionsType> _mapFieldDefinitions;

        [System.Xml.Serialization.XmlElementAttribute("MapFieldDefinitions")]
        public System.Collections.Generic.List<MapFieldDefinitionsType> MapFieldDefinitions
        {
            get
            {
                return this._mapFieldDefinitions;
            }
            private set
            {
                this._mapFieldDefinitions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapFieldDefinitions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapFieldDefinitionsSpecified
        {
            get
            {
                return (this.MapFieldDefinitions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapShapefileType> _mapShapefile;

        [System.Xml.Serialization.XmlElementAttribute("MapShapefile")]
        public System.Collections.Generic.List<MapShapefileType> MapShapefile
        {
            get
            {
                return this._mapShapefile;
            }
            private set
            {
                this._mapShapefile = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapShapefile collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapShapefileSpecified
        {
            get
            {
                return (this.MapShapefile.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSpatialDataSetType> _mapSpatialDataSet;

        [System.Xml.Serialization.XmlElementAttribute("MapSpatialDataSet")]
        public System.Collections.Generic.List<MapSpatialDataSetType> MapSpatialDataSet
        {
            get
            {
                return this._mapSpatialDataSet;
            }
            private set
            {
                this._mapSpatialDataSet = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSpatialDataSet collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSpatialDataSetSpecified
        {
            get
            {
                return (this.MapSpatialDataSet.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSpatialDataRegionType> _mapSpatialDataRegion;

        [System.Xml.Serialization.XmlElementAttribute("MapSpatialDataRegion")]
        public System.Collections.Generic.List<MapSpatialDataRegionType> MapSpatialDataRegion
        {
            get
            {
                return this._mapSpatialDataRegion;
            }
            private set
            {
                this._mapSpatialDataRegion = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSpatialDataRegion collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSpatialDataRegionSpecified
        {
            get
            {
                return (this.MapSpatialDataRegion.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLineLayerTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapLineLayerTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLineTemplateType> _mapLineTemplate;

        [System.Xml.Serialization.XmlElementAttribute("MapLineTemplate")]
        public System.Collections.Generic.List<MapLineTemplateType> MapLineTemplate
        {
            get
            {
                return this._mapLineTemplate;
            }
            private set
            {
                this._mapLineTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLineTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLineTemplateSpecified
        {
            get
            {
                return (this.MapLineTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLineRulesType> _mapLineRules;

        [System.Xml.Serialization.XmlElementAttribute("MapLineRules")]
        public System.Collections.Generic.List<MapLineRulesType> MapLineRules
        {
            get
            {
                return this._mapLineRules;
            }
            private set
            {
                this._mapLineRules = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLineRules collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLineRulesSpecified
        {
            get
            {
                return (this.MapLineRules.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLinesType> _mapLines;

        [System.Xml.Serialization.XmlElementAttribute("MapLines")]
        public System.Collections.Generic.List<MapLinesType> MapLines
        {
            get
            {
                return this._mapLines;
            }
            private set
            {
                this._mapLines = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLines collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLinesSpecified
        {
            get
            {
                return (this.MapLines.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLineLayerTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapLineLayerTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLineTemplateType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLineTemplateType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLineTemplateType" /> class.</para>
        /// </summary>
        public MapLineTemplateType()
        {
            this._hidden = new System.Collections.Generic.List<string>();
            this._offsetX = new System.Collections.Generic.List<string>();
            this._offsetY = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._label = new System.Collections.Generic.List<string>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<MapLineTemplateTypeDataElementOutput>();
            this._dataElementLabel = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._labelPlacement = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetX;

        [System.Xml.Serialization.XmlElementAttribute("OffsetX")]
        public System.Collections.Generic.List<string> OffsetX
        {
            get
            {
                return this._offsetX;
            }
            private set
            {
                this._offsetX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetXSpecified
        {
            get
            {
                return (this.OffsetX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _offsetY;

        [System.Xml.Serialization.XmlElementAttribute("OffsetY")]
        public System.Collections.Generic.List<string> OffsetY
        {
            get
            {
                return this._offsetY;
            }
            private set
            {
                this._offsetY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetYSpecified
        {
            get
            {
                return (this.OffsetY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _label;

        [System.Xml.Serialization.XmlElementAttribute("Label")]
        public System.Collections.Generic.List<string> Label
        {
            get
            {
                return this._label;
            }
            private set
            {
                this._label = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Label collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelSpecified
        {
            get
            {
                return (this.Label.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLineTemplateTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<MapLineTemplateTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementLabel;

        [System.Xml.Serialization.XmlElementAttribute("DataElementLabel")]
        public System.Collections.Generic.List<string> DataElementLabel
        {
            get
            {
                return this._dataElementLabel;
            }
            private set
            {
                this._dataElementLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementLabelSpecified
        {
            get
            {
                return (this.DataElementLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelPlacement;

        [System.Xml.Serialization.XmlElementAttribute("LabelPlacement")]
        public System.Collections.Generic.List<string> LabelPlacement
        {
            get
            {
                return this._labelPlacement;
            }
            private set
            {
                this._labelPlacement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelPlacement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelPlacementSpecified
        {
            get
            {
                return (this.LabelPlacement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLineTemplateTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum MapLineTemplateTypeDataElementOutput
    {

        Output,

        NoOutput,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLineRulesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLineRulesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorRangeRuleType> _mapColorRangeRule;

        [System.Xml.Serialization.XmlElementAttribute("MapColorRangeRule")]
        public System.Collections.Generic.List<MapColorRangeRuleType> MapColorRangeRule
        {
            get
            {
                return this._mapColorRangeRule;
            }
            private set
            {
                this._mapColorRangeRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapColorRangeRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapColorRangeRuleSpecified
        {
            get
            {
                return (this.MapColorRangeRule.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLineRulesType" /> class.</para>
        /// </summary>
        public MapLineRulesType()
        {
            this._mapColorRangeRule = new System.Collections.Generic.List<MapColorRangeRuleType>();
            this._mapColorPaletteRule = new System.Collections.Generic.List<MapColorPaletteRuleType>();
            this._mapCustomColorRule = new System.Collections.Generic.List<MapCustomColorRuleType>();
            this._mapSizeRule = new System.Collections.Generic.List<MapSizeRuleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorPaletteRuleType> _mapColorPaletteRule;

        [System.Xml.Serialization.XmlElementAttribute("MapColorPaletteRule")]
        public System.Collections.Generic.List<MapColorPaletteRuleType> MapColorPaletteRule
        {
            get
            {
                return this._mapColorPaletteRule;
            }
            private set
            {
                this._mapColorPaletteRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapColorPaletteRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapColorPaletteRuleSpecified
        {
            get
            {
                return (this.MapColorPaletteRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapCustomColorRuleType> _mapCustomColorRule;

        [System.Xml.Serialization.XmlElementAttribute("MapCustomColorRule")]
        public System.Collections.Generic.List<MapCustomColorRuleType> MapCustomColorRule
        {
            get
            {
                return this._mapCustomColorRule;
            }
            private set
            {
                this._mapCustomColorRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapCustomColorRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapCustomColorRuleSpecified
        {
            get
            {
                return (this.MapCustomColorRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSizeRuleType> _mapSizeRule;

        [System.Xml.Serialization.XmlElementAttribute("MapSizeRule")]
        public System.Collections.Generic.List<MapSizeRuleType> MapSizeRule
        {
            get
            {
                return this._mapSizeRule;
            }
            private set
            {
                this._mapSizeRule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSizeRule collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSizeRuleSpecified
        {
            get
            {
                return (this.MapSizeRule.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLinesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLinesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLineType> _mapLine;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapLine")]
        public System.Collections.Generic.List<MapLineType> MapLine
        {
            get
            {
                return this._mapLine;
            }
            private set
            {
                this._mapLine = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLinesType" /> class.</para>
        /// </summary>
        public MapLinesType()
        {
            this._mapLine = new System.Collections.Generic.List<MapLineType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLineType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLineType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _vectorData;

        [System.Xml.Serialization.XmlElementAttribute("VectorData")]
        public System.Collections.Generic.List<string> VectorData
        {
            get
            {
                return this._vectorData;
            }
            private set
            {
                this._vectorData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VectorData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VectorDataSpecified
        {
            get
            {
                return (this.VectorData.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLineType" /> class.</para>
        /// </summary>
        public MapLineType()
        {
            this._vectorData = new System.Collections.Generic.List<string>();
            this._mapFields = new System.Collections.Generic.List<MapFieldsType>();
            this._useCustomLineTemplate = new System.Collections.Generic.List<string>();
            this._mapLineTemplate = new System.Collections.Generic.List<MapLineTemplateType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapFieldsType> _mapFields;

        [System.Xml.Serialization.XmlElementAttribute("MapFields")]
        public System.Collections.Generic.List<MapFieldsType> MapFields
        {
            get
            {
                return this._mapFields;
            }
            private set
            {
                this._mapFields = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapFields collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapFieldsSpecified
        {
            get
            {
                return (this.MapFields.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _useCustomLineTemplate;

        [System.Xml.Serialization.XmlElementAttribute("UseCustomLineTemplate")]
        public System.Collections.Generic.List<string> UseCustomLineTemplate
        {
            get
            {
                return this._useCustomLineTemplate;
            }
            private set
            {
                this._useCustomLineTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UseCustomLineTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseCustomLineTemplateSpecified
        {
            get
            {
                return (this.UseCustomLineTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLineTemplateType> _mapLineTemplate;

        [System.Xml.Serialization.XmlElementAttribute("MapLineTemplate")]
        public System.Collections.Generic.List<MapLineTemplateType> MapLineTemplate
        {
            get
            {
                return this._mapLineTemplate;
            }
            private set
            {
                this._mapLineTemplate = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLineTemplate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLineTemplateSpecified
        {
            get
            {
                return (this.MapLineTemplate.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapDataRegionsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapDataRegionsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapDataRegionType> _mapDataRegion;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapDataRegion")]
        public System.Collections.Generic.List<MapDataRegionType> MapDataRegion
        {
            get
            {
                return this._mapDataRegion;
            }
            private set
            {
                this._mapDataRegion = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapDataRegionsType" /> class.</para>
        /// </summary>
        public MapDataRegionsType()
        {
            this._mapDataRegion = new System.Collections.Generic.List<MapDataRegionType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapDataRegionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapDataRegionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSetName;

        [System.Xml.Serialization.XmlElementAttribute("DataSetName")]
        public System.Collections.Generic.List<string> DataSetName
        {
            get
            {
                return this._dataSetName;
            }
            private set
            {
                this._dataSetName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetNameSpecified
        {
            get
            {
                return (this.DataSetName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapDataRegionType" /> class.</para>
        /// </summary>
        public MapDataRegionType()
        {
            this._dataSetName = new System.Collections.Generic.List<string>();
            this._filters = new System.Collections.Generic.List<FiltersType>();
            this._mapMember = new System.Collections.Generic.List<MapMemberType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FiltersType> _filters;

        [System.Xml.Serialization.XmlElementAttribute("Filters")]
        public System.Collections.Generic.List<FiltersType> Filters
        {
            get
            {
                return this._filters;
            }
            private set
            {
                this._filters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMemberType> _mapMember;

        [System.Xml.Serialization.XmlElementAttribute("MapMember")]
        public System.Collections.Generic.List<MapMemberType> MapMember
        {
            get
            {
                return this._mapMember;
            }
            private set
            {
                this._mapMember = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMember collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMemberSpecified
        {
            get
            {
                return (this.MapMember.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapMemberType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapMemberType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GroupType> _group;

        [System.Xml.Serialization.XmlElementAttribute("Group")]
        public System.Collections.Generic.List<GroupType> Group
        {
            get
            {
                return this._group;
            }
            private set
            {
                this._group = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupSpecified
        {
            get
            {
                return (this.Group.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapMemberType" /> class.</para>
        /// </summary>
        public MapMemberType()
        {
            this._group = new System.Collections.Generic.List<GroupType>();
            this._mapMember = new System.Collections.Generic.List<MapMemberType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapMemberType> _mapMember;

        [System.Xml.Serialization.XmlElementAttribute("MapMember")]
        public System.Collections.Generic.List<MapMemberType> MapMember
        {
            get
            {
                return this._mapMember;
            }
            private set
            {
                this._mapMember = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMember collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMemberSpecified
        {
            get
            {
                return (this.MapMember.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapViewportType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapViewportType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapViewportType" /> class.</para>
        /// </summary>
        public MapViewportType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._mapLocation = new System.Collections.Generic.List<MapLocationType>();
            this._mapSize = new System.Collections.Generic.List<MapSizeType>();
            this._leftMargin = new System.Collections.Generic.List<string>();
            this._rightMargin = new System.Collections.Generic.List<string>();
            this._topMargin = new System.Collections.Generic.List<string>();
            this._bottomMargin = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._mapCoordinateSystem = new System.Collections.Generic.List<string>();
            this._mapProjection = new System.Collections.Generic.List<string>();
            this._projectionCenterX = new System.Collections.Generic.List<string>();
            this._projectionCenterY = new System.Collections.Generic.List<string>();
            this._mapCustomView = new System.Collections.Generic.List<MapCustomViewType>();
            this._mapElementView = new System.Collections.Generic.List<MapElementViewType>();
            this._mapDataBoundView = new System.Collections.Generic.List<MapDataBoundViewType>();
            this._mapLimits = new System.Collections.Generic.List<MapLimitsType>();
            this._maximumZoom = new System.Collections.Generic.List<string>();
            this._minimumZoom = new System.Collections.Generic.List<string>();
            this._simplificationResolution = new System.Collections.Generic.List<string>();
            this._contentMargin = new System.Collections.Generic.List<string>();
            this._mapMeridians = new System.Collections.Generic.List<MapGridLinesType>();
            this._mapParallels = new System.Collections.Generic.List<MapGridLinesType>();
            this._gridUnderContent = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLocationType> _mapLocation;

        [System.Xml.Serialization.XmlElementAttribute("MapLocation")]
        public System.Collections.Generic.List<MapLocationType> MapLocation
        {
            get
            {
                return this._mapLocation;
            }
            private set
            {
                this._mapLocation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLocationSpecified
        {
            get
            {
                return (this.MapLocation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSizeType> _mapSize;

        [System.Xml.Serialization.XmlElementAttribute("MapSize")]
        public System.Collections.Generic.List<MapSizeType> MapSize
        {
            get
            {
                return this._mapSize;
            }
            private set
            {
                this._mapSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSizeSpecified
        {
            get
            {
                return (this.MapSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _leftMargin;

        [System.Xml.Serialization.XmlElementAttribute("LeftMargin")]
        public System.Collections.Generic.List<string> LeftMargin
        {
            get
            {
                return this._leftMargin;
            }
            private set
            {
                this._leftMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftMarginSpecified
        {
            get
            {
                return (this.LeftMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rightMargin;

        [System.Xml.Serialization.XmlElementAttribute("RightMargin")]
        public System.Collections.Generic.List<string> RightMargin
        {
            get
            {
                return this._rightMargin;
            }
            private set
            {
                this._rightMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightMarginSpecified
        {
            get
            {
                return (this.RightMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _topMargin;

        [System.Xml.Serialization.XmlElementAttribute("TopMargin")]
        public System.Collections.Generic.List<string> TopMargin
        {
            get
            {
                return this._topMargin;
            }
            private set
            {
                this._topMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopMarginSpecified
        {
            get
            {
                return (this.TopMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bottomMargin;

        [System.Xml.Serialization.XmlElementAttribute("BottomMargin")]
        public System.Collections.Generic.List<string> BottomMargin
        {
            get
            {
                return this._bottomMargin;
            }
            private set
            {
                this._bottomMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BottomMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BottomMarginSpecified
        {
            get
            {
                return (this.BottomMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapCoordinateSystem;

        [System.Xml.Serialization.XmlElementAttribute("MapCoordinateSystem")]
        public System.Collections.Generic.List<string> MapCoordinateSystem
        {
            get
            {
                return this._mapCoordinateSystem;
            }
            private set
            {
                this._mapCoordinateSystem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapCoordinateSystem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapCoordinateSystemSpecified
        {
            get
            {
                return (this.MapCoordinateSystem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapProjection;

        [System.Xml.Serialization.XmlElementAttribute("MapProjection")]
        public System.Collections.Generic.List<string> MapProjection
        {
            get
            {
                return this._mapProjection;
            }
            private set
            {
                this._mapProjection = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapProjection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapProjectionSpecified
        {
            get
            {
                return (this.MapProjection.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _projectionCenterX;

        [System.Xml.Serialization.XmlElementAttribute("ProjectionCenterX")]
        public System.Collections.Generic.List<string> ProjectionCenterX
        {
            get
            {
                return this._projectionCenterX;
            }
            private set
            {
                this._projectionCenterX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ProjectionCenterX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProjectionCenterXSpecified
        {
            get
            {
                return (this.ProjectionCenterX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _projectionCenterY;

        [System.Xml.Serialization.XmlElementAttribute("ProjectionCenterY")]
        public System.Collections.Generic.List<string> ProjectionCenterY
        {
            get
            {
                return this._projectionCenterY;
            }
            private set
            {
                this._projectionCenterY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ProjectionCenterY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProjectionCenterYSpecified
        {
            get
            {
                return (this.ProjectionCenterY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapCustomViewType> _mapCustomView;

        [System.Xml.Serialization.XmlElementAttribute("MapCustomView")]
        public System.Collections.Generic.List<MapCustomViewType> MapCustomView
        {
            get
            {
                return this._mapCustomView;
            }
            private set
            {
                this._mapCustomView = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapCustomView collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapCustomViewSpecified
        {
            get
            {
                return (this.MapCustomView.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapElementViewType> _mapElementView;

        [System.Xml.Serialization.XmlElementAttribute("MapElementView")]
        public System.Collections.Generic.List<MapElementViewType> MapElementView
        {
            get
            {
                return this._mapElementView;
            }
            private set
            {
                this._mapElementView = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapElementView collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapElementViewSpecified
        {
            get
            {
                return (this.MapElementView.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapDataBoundViewType> _mapDataBoundView;

        [System.Xml.Serialization.XmlElementAttribute("MapDataBoundView")]
        public System.Collections.Generic.List<MapDataBoundViewType> MapDataBoundView
        {
            get
            {
                return this._mapDataBoundView;
            }
            private set
            {
                this._mapDataBoundView = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapDataBoundView collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapDataBoundViewSpecified
        {
            get
            {
                return (this.MapDataBoundView.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLimitsType> _mapLimits;

        [System.Xml.Serialization.XmlElementAttribute("MapLimits")]
        public System.Collections.Generic.List<MapLimitsType> MapLimits
        {
            get
            {
                return this._mapLimits;
            }
            private set
            {
                this._mapLimits = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLimits collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLimitsSpecified
        {
            get
            {
                return (this.MapLimits.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MaximumZoom")]
        public System.Collections.Generic.List<string> MaximumZoom
        {
            get
            {
                return this._maximumZoom;
            }
            private set
            {
                this._maximumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumZoomSpecified
        {
            get
            {
                return (this.MaximumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimumZoom;

        [System.Xml.Serialization.XmlElementAttribute("MinimumZoom")]
        public System.Collections.Generic.List<string> MinimumZoom
        {
            get
            {
                return this._minimumZoom;
            }
            private set
            {
                this._minimumZoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumZoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumZoomSpecified
        {
            get
            {
                return (this.MinimumZoom.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _simplificationResolution;

        [System.Xml.Serialization.XmlElementAttribute("SimplificationResolution")]
        public System.Collections.Generic.List<string> SimplificationResolution
        {
            get
            {
                return this._simplificationResolution;
            }
            private set
            {
                this._simplificationResolution = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SimplificationResolution collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SimplificationResolutionSpecified
        {
            get
            {
                return (this.SimplificationResolution.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _contentMargin;

        [System.Xml.Serialization.XmlElementAttribute("ContentMargin")]
        public System.Collections.Generic.List<string> ContentMargin
        {
            get
            {
                return this._contentMargin;
            }
            private set
            {
                this._contentMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ContentMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContentMarginSpecified
        {
            get
            {
                return (this.ContentMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapGridLinesType> _mapMeridians;

        [System.Xml.Serialization.XmlElementAttribute("MapMeridians")]
        public System.Collections.Generic.List<MapGridLinesType> MapMeridians
        {
            get
            {
                return this._mapMeridians;
            }
            private set
            {
                this._mapMeridians = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapMeridians collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapMeridiansSpecified
        {
            get
            {
                return (this.MapMeridians.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapGridLinesType> _mapParallels;

        [System.Xml.Serialization.XmlElementAttribute("MapParallels")]
        public System.Collections.Generic.List<MapGridLinesType> MapParallels
        {
            get
            {
                return this._mapParallels;
            }
            private set
            {
                this._mapParallels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapParallels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapParallelsSpecified
        {
            get
            {
                return (this.MapParallels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _gridUnderContent;

        [System.Xml.Serialization.XmlElementAttribute("GridUnderContent")]
        public System.Collections.Generic.List<string> GridUnderContent
        {
            get
            {
                return this._gridUnderContent;
            }
            private set
            {
                this._gridUnderContent = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GridUnderContent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GridUnderContentSpecified
        {
            get
            {
                return (this.GridUnderContent.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLocationType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLocationType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLocationType" /> class.</para>
        /// </summary>
        public MapLocationType()
        {
            this._left = new System.Collections.Generic.List<string>();
            this._top = new System.Collections.Generic.List<string>();
            this._unit = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _unit;

        [System.Xml.Serialization.XmlElementAttribute("Unit")]
        public System.Collections.Generic.List<string> Unit
        {
            get
            {
                return this._unit;
            }
            private set
            {
                this._unit = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Unit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitSpecified
        {
            get
            {
                return (this.Unit.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapSizeType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapSizeType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapSizeType" /> class.</para>
        /// </summary>
        public MapSizeType()
        {
            this._width = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._unit = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _unit;

        [System.Xml.Serialization.XmlElementAttribute("Unit")]
        public System.Collections.Generic.List<string> Unit
        {
            get
            {
                return this._unit;
            }
            private set
            {
                this._unit = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Unit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitSpecified
        {
            get
            {
                return (this.Unit.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapCustomViewType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapCustomViewType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zoom;

        [System.Xml.Serialization.XmlElementAttribute("Zoom")]
        public System.Collections.Generic.List<string> Zoom
        {
            get
            {
                return this._zoom;
            }
            private set
            {
                this._zoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Zoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZoomSpecified
        {
            get
            {
                return (this.Zoom.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapCustomViewType" /> class.</para>
        /// </summary>
        public MapCustomViewType()
        {
            this._zoom = new System.Collections.Generic.List<string>();
            this._centerX = new System.Collections.Generic.List<string>();
            this._centerY = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _centerX;

        [System.Xml.Serialization.XmlElementAttribute("CenterX")]
        public System.Collections.Generic.List<string> CenterX
        {
            get
            {
                return this._centerX;
            }
            private set
            {
                this._centerX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CenterX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CenterXSpecified
        {
            get
            {
                return (this.CenterX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _centerY;

        [System.Xml.Serialization.XmlElementAttribute("CenterY")]
        public System.Collections.Generic.List<string> CenterY
        {
            get
            {
                return this._centerY;
            }
            private set
            {
                this._centerY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CenterY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CenterYSpecified
        {
            get
            {
                return (this.CenterY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapElementViewType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapElementViewType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zoom;

        [System.Xml.Serialization.XmlElementAttribute("Zoom")]
        public System.Collections.Generic.List<string> Zoom
        {
            get
            {
                return this._zoom;
            }
            private set
            {
                this._zoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Zoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZoomSpecified
        {
            get
            {
                return (this.Zoom.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapElementViewType" /> class.</para>
        /// </summary>
        public MapElementViewType()
        {
            this._zoom = new System.Collections.Generic.List<string>();
            this._layerName = new System.Collections.Generic.List<string>();
            this._mapBindingFieldPairs = new System.Collections.Generic.List<MapBindingFieldPairsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _layerName;

        [System.Xml.Serialization.XmlElementAttribute("LayerName")]
        public System.Collections.Generic.List<string> LayerName
        {
            get
            {
                return this._layerName;
            }
            private set
            {
                this._layerName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LayerName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayerNameSpecified
        {
            get
            {
                return (this.LayerName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapBindingFieldPairsType> _mapBindingFieldPairs;

        [System.Xml.Serialization.XmlElementAttribute("MapBindingFieldPairs")]
        public System.Collections.Generic.List<MapBindingFieldPairsType> MapBindingFieldPairs
        {
            get
            {
                return this._mapBindingFieldPairs;
            }
            private set
            {
                this._mapBindingFieldPairs = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBindingFieldPairs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBindingFieldPairsSpecified
        {
            get
            {
                return (this.MapBindingFieldPairs.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapDataBoundViewType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapDataBoundViewType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zoom;

        [System.Xml.Serialization.XmlElementAttribute("Zoom")]
        public System.Collections.Generic.List<string> Zoom
        {
            get
            {
                return this._zoom;
            }
            private set
            {
                this._zoom = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Zoom collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZoomSpecified
        {
            get
            {
                return (this.Zoom.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapDataBoundViewType" /> class.</para>
        /// </summary>
        public MapDataBoundViewType()
        {
            this._zoom = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLimitsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLimitsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimumX;

        [System.Xml.Serialization.XmlElementAttribute("MinimumX")]
        public System.Collections.Generic.List<string> MinimumX
        {
            get
            {
                return this._minimumX;
            }
            private set
            {
                this._minimumX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumXSpecified
        {
            get
            {
                return (this.MinimumX.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLimitsType" /> class.</para>
        /// </summary>
        public MapLimitsType()
        {
            this._minimumX = new System.Collections.Generic.List<string>();
            this._minimumY = new System.Collections.Generic.List<string>();
            this._maximumX = new System.Collections.Generic.List<string>();
            this._maximumY = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minimumY;

        [System.Xml.Serialization.XmlElementAttribute("MinimumY")]
        public System.Collections.Generic.List<string> MinimumY
        {
            get
            {
                return this._minimumY;
            }
            private set
            {
                this._minimumY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinimumY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumYSpecified
        {
            get
            {
                return (this.MinimumY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximumX;

        [System.Xml.Serialization.XmlElementAttribute("MaximumX")]
        public System.Collections.Generic.List<string> MaximumX
        {
            get
            {
                return this._maximumX;
            }
            private set
            {
                this._maximumX = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumX collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumXSpecified
        {
            get
            {
                return (this.MaximumX.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _maximumY;

        [System.Xml.Serialization.XmlElementAttribute("MaximumY")]
        public System.Collections.Generic.List<string> MaximumY
        {
            get
            {
                return this._maximumY;
            }
            private set
            {
                this._maximumY = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MaximumY collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumYSpecified
        {
            get
            {
                return (this.MaximumY.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapGridLinesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapGridLinesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapGridLinesType" /> class.</para>
        /// </summary>
        public MapGridLinesType()
        {
            this._hidden = new System.Collections.Generic.List<string>();
            this._interval = new System.Collections.Generic.List<string>();
            this._showLabels = new System.Collections.Generic.List<string>();
            this._labelPosition = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interval;

        [System.Xml.Serialization.XmlElementAttribute("Interval")]
        public System.Collections.Generic.List<string> Interval
        {
            get
            {
                return this._interval;
            }
            private set
            {
                this._interval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _showLabels;

        [System.Xml.Serialization.XmlElementAttribute("ShowLabels")]
        public System.Collections.Generic.List<string> ShowLabels
        {
            get
            {
                return this._showLabels;
            }
            private set
            {
                this._showLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ShowLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowLabelsSpecified
        {
            get
            {
                return (this.ShowLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelPosition;

        [System.Xml.Serialization.XmlElementAttribute("LabelPosition")]
        public System.Collections.Generic.List<string> LabelPosition
        {
            get
            {
                return this._labelPosition;
            }
            private set
            {
                this._labelPosition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelPosition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelPositionSpecified
        {
            get
            {
                return (this.LabelPosition.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLegendsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLegendsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLegendType> _mapLegend;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapLegend")]
        public System.Collections.Generic.List<MapLegendType> MapLegend
        {
            get
            {
                return this._mapLegend;
            }
            private set
            {
                this._mapLegend = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLegendsType" /> class.</para>
        /// </summary>
        public MapLegendsType()
        {
            this._mapLegend = new System.Collections.Generic.List<MapLegendType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLegendType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLegendType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLegendType" /> class.</para>
        /// </summary>
        public MapLegendType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._mapLocation = new System.Collections.Generic.List<MapLocationType>();
            this._mapSize = new System.Collections.Generic.List<MapSizeType>();
            this._leftMargin = new System.Collections.Generic.List<string>();
            this._rightMargin = new System.Collections.Generic.List<string>();
            this._topMargin = new System.Collections.Generic.List<string>();
            this._bottomMargin = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._position = new System.Collections.Generic.List<string>();
            this._dockOutsideViewport = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._layout = new System.Collections.Generic.List<string>();
            this._mapLegendTitle = new System.Collections.Generic.List<MapLegendTitleType>();
            this._autoFitTextDisabled = new System.Collections.Generic.List<string>();
            this._minFontSize = new System.Collections.Generic.List<string>();
            this._interlacedRows = new System.Collections.Generic.List<string>();
            this._interlacedRowsColor = new System.Collections.Generic.List<string>();
            this._equallySpacedItems = new System.Collections.Generic.List<string>();
            this._textWrapThreshold = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLocationType> _mapLocation;

        [System.Xml.Serialization.XmlElementAttribute("MapLocation")]
        public System.Collections.Generic.List<MapLocationType> MapLocation
        {
            get
            {
                return this._mapLocation;
            }
            private set
            {
                this._mapLocation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLocationSpecified
        {
            get
            {
                return (this.MapLocation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSizeType> _mapSize;

        [System.Xml.Serialization.XmlElementAttribute("MapSize")]
        public System.Collections.Generic.List<MapSizeType> MapSize
        {
            get
            {
                return this._mapSize;
            }
            private set
            {
                this._mapSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSizeSpecified
        {
            get
            {
                return (this.MapSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _leftMargin;

        [System.Xml.Serialization.XmlElementAttribute("LeftMargin")]
        public System.Collections.Generic.List<string> LeftMargin
        {
            get
            {
                return this._leftMargin;
            }
            private set
            {
                this._leftMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftMarginSpecified
        {
            get
            {
                return (this.LeftMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rightMargin;

        [System.Xml.Serialization.XmlElementAttribute("RightMargin")]
        public System.Collections.Generic.List<string> RightMargin
        {
            get
            {
                return this._rightMargin;
            }
            private set
            {
                this._rightMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightMarginSpecified
        {
            get
            {
                return (this.RightMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _topMargin;

        [System.Xml.Serialization.XmlElementAttribute("TopMargin")]
        public System.Collections.Generic.List<string> TopMargin
        {
            get
            {
                return this._topMargin;
            }
            private set
            {
                this._topMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopMarginSpecified
        {
            get
            {
                return (this.TopMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bottomMargin;

        [System.Xml.Serialization.XmlElementAttribute("BottomMargin")]
        public System.Collections.Generic.List<string> BottomMargin
        {
            get
            {
                return this._bottomMargin;
            }
            private set
            {
                this._bottomMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BottomMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BottomMarginSpecified
        {
            get
            {
                return (this.BottomMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockOutsideViewport;

        [System.Xml.Serialization.XmlElementAttribute("DockOutsideViewport")]
        public System.Collections.Generic.List<string> DockOutsideViewport
        {
            get
            {
                return this._dockOutsideViewport;
            }
            private set
            {
                this._dockOutsideViewport = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockOutsideViewport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockOutsideViewportSpecified
        {
            get
            {
                return (this.DockOutsideViewport.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _layout;

        [System.Xml.Serialization.XmlElementAttribute("Layout")]
        public System.Collections.Generic.List<string> Layout
        {
            get
            {
                return this._layout;
            }
            private set
            {
                this._layout = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Layout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutSpecified
        {
            get
            {
                return (this.Layout.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLegendTitleType> _mapLegendTitle;

        [System.Xml.Serialization.XmlElementAttribute("MapLegendTitle")]
        public System.Collections.Generic.List<MapLegendTitleType> MapLegendTitle
        {
            get
            {
                return this._mapLegendTitle;
            }
            private set
            {
                this._mapLegendTitle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLegendTitle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLegendTitleSpecified
        {
            get
            {
                return (this.MapLegendTitle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _autoFitTextDisabled;

        [System.Xml.Serialization.XmlElementAttribute("AutoFitTextDisabled")]
        public System.Collections.Generic.List<string> AutoFitTextDisabled
        {
            get
            {
                return this._autoFitTextDisabled;
            }
            private set
            {
                this._autoFitTextDisabled = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AutoFitTextDisabled collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoFitTextDisabledSpecified
        {
            get
            {
                return (this.AutoFitTextDisabled.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _minFontSize;

        [System.Xml.Serialization.XmlElementAttribute("MinFontSize")]
        public System.Collections.Generic.List<string> MinFontSize
        {
            get
            {
                return this._minFontSize;
            }
            private set
            {
                this._minFontSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MinFontSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinFontSizeSpecified
        {
            get
            {
                return (this.MinFontSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interlacedRows;

        [System.Xml.Serialization.XmlElementAttribute("InterlacedRows")]
        public System.Collections.Generic.List<string> InterlacedRows
        {
            get
            {
                return this._interlacedRows;
            }
            private set
            {
                this._interlacedRows = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InterlacedRows collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterlacedRowsSpecified
        {
            get
            {
                return (this.InterlacedRows.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interlacedRowsColor;

        [System.Xml.Serialization.XmlElementAttribute("InterlacedRowsColor")]
        public System.Collections.Generic.List<string> InterlacedRowsColor
        {
            get
            {
                return this._interlacedRowsColor;
            }
            private set
            {
                this._interlacedRowsColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InterlacedRowsColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterlacedRowsColorSpecified
        {
            get
            {
                return (this.InterlacedRowsColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _equallySpacedItems;

        [System.Xml.Serialization.XmlElementAttribute("EquallySpacedItems")]
        public System.Collections.Generic.List<string> EquallySpacedItems
        {
            get
            {
                return this._equallySpacedItems;
            }
            private set
            {
                this._equallySpacedItems = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EquallySpacedItems collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquallySpacedItemsSpecified
        {
            get
            {
                return (this.EquallySpacedItems.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textWrapThreshold;

        [System.Xml.Serialization.XmlElementAttribute("TextWrapThreshold")]
        public System.Collections.Generic.List<string> TextWrapThreshold
        {
            get
            {
                return this._textWrapThreshold;
            }
            private set
            {
                this._textWrapThreshold = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextWrapThreshold collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextWrapThresholdSpecified
        {
            get
            {
                return (this.TextWrapThreshold.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapLegendTitleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapLegendTitleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _caption;

        [System.Xml.Serialization.XmlElementAttribute("Caption")]
        public System.Collections.Generic.List<string> Caption
        {
            get
            {
                return this._caption;
            }
            private set
            {
                this._caption = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Caption collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaptionSpecified
        {
            get
            {
                return (this.Caption.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapLegendTitleType" /> class.</para>
        /// </summary>
        public MapLegendTitleType()
        {
            this._caption = new System.Collections.Generic.List<string>();
            this._titleSeparator = new System.Collections.Generic.List<string>();
            this._titleSeparatorColor = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _titleSeparator;

        [System.Xml.Serialization.XmlElementAttribute("TitleSeparator")]
        public System.Collections.Generic.List<string> TitleSeparator
        {
            get
            {
                return this._titleSeparator;
            }
            private set
            {
                this._titleSeparator = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TitleSeparator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TitleSeparatorSpecified
        {
            get
            {
                return (this.TitleSeparator.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _titleSeparatorColor;

        [System.Xml.Serialization.XmlElementAttribute("TitleSeparatorColor")]
        public System.Collections.Generic.List<string> TitleSeparatorColor
        {
            get
            {
                return this._titleSeparatorColor;
            }
            private set
            {
                this._titleSeparatorColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TitleSeparatorColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TitleSeparatorColorSpecified
        {
            get
            {
                return (this.TitleSeparatorColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapTitlesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapTitlesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapTitleType> _mapTitle;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MapTitle")]
        public System.Collections.Generic.List<MapTitleType> MapTitle
        {
            get
            {
                return this._mapTitle;
            }
            private set
            {
                this._mapTitle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapTitlesType" /> class.</para>
        /// </summary>
        public MapTitlesType()
        {
            this._mapTitle = new System.Collections.Generic.List<MapTitleType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapTitleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapTitleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapTitleType" /> class.</para>
        /// </summary>
        public MapTitleType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._mapLocation = new System.Collections.Generic.List<MapLocationType>();
            this._mapSize = new System.Collections.Generic.List<MapSizeType>();
            this._leftMargin = new System.Collections.Generic.List<string>();
            this._rightMargin = new System.Collections.Generic.List<string>();
            this._topMargin = new System.Collections.Generic.List<string>();
            this._bottomMargin = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._position = new System.Collections.Generic.List<string>();
            this._dockOutsideViewport = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._text = new System.Collections.Generic.List<string>();
            this._angle = new System.Collections.Generic.List<string>();
            this._textShadowOffset = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLocationType> _mapLocation;

        [System.Xml.Serialization.XmlElementAttribute("MapLocation")]
        public System.Collections.Generic.List<MapLocationType> MapLocation
        {
            get
            {
                return this._mapLocation;
            }
            private set
            {
                this._mapLocation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLocationSpecified
        {
            get
            {
                return (this.MapLocation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSizeType> _mapSize;

        [System.Xml.Serialization.XmlElementAttribute("MapSize")]
        public System.Collections.Generic.List<MapSizeType> MapSize
        {
            get
            {
                return this._mapSize;
            }
            private set
            {
                this._mapSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSizeSpecified
        {
            get
            {
                return (this.MapSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _leftMargin;

        [System.Xml.Serialization.XmlElementAttribute("LeftMargin")]
        public System.Collections.Generic.List<string> LeftMargin
        {
            get
            {
                return this._leftMargin;
            }
            private set
            {
                this._leftMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftMarginSpecified
        {
            get
            {
                return (this.LeftMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rightMargin;

        [System.Xml.Serialization.XmlElementAttribute("RightMargin")]
        public System.Collections.Generic.List<string> RightMargin
        {
            get
            {
                return this._rightMargin;
            }
            private set
            {
                this._rightMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightMarginSpecified
        {
            get
            {
                return (this.RightMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _topMargin;

        [System.Xml.Serialization.XmlElementAttribute("TopMargin")]
        public System.Collections.Generic.List<string> TopMargin
        {
            get
            {
                return this._topMargin;
            }
            private set
            {
                this._topMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopMarginSpecified
        {
            get
            {
                return (this.TopMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bottomMargin;

        [System.Xml.Serialization.XmlElementAttribute("BottomMargin")]
        public System.Collections.Generic.List<string> BottomMargin
        {
            get
            {
                return this._bottomMargin;
            }
            private set
            {
                this._bottomMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BottomMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BottomMarginSpecified
        {
            get
            {
                return (this.BottomMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockOutsideViewport;

        [System.Xml.Serialization.XmlElementAttribute("DockOutsideViewport")]
        public System.Collections.Generic.List<string> DockOutsideViewport
        {
            get
            {
                return this._dockOutsideViewport;
            }
            private set
            {
                this._dockOutsideViewport = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockOutsideViewport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockOutsideViewportSpecified
        {
            get
            {
                return (this.DockOutsideViewport.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _text;

        [System.Xml.Serialization.XmlElementAttribute("Text")]
        public System.Collections.Generic.List<string> Text
        {
            get
            {
                return this._text;
            }
            private set
            {
                this._text = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Text collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextSpecified
        {
            get
            {
                return (this.Text.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _angle;

        [System.Xml.Serialization.XmlElementAttribute("Angle")]
        public System.Collections.Generic.List<string> Angle
        {
            get
            {
                return this._angle;
            }
            private set
            {
                this._angle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Angle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AngleSpecified
        {
            get
            {
                return (this.Angle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _textShadowOffset;

        [System.Xml.Serialization.XmlElementAttribute("TextShadowOffset")]
        public System.Collections.Generic.List<string> TextShadowOffset
        {
            get
            {
                return this._textShadowOffset;
            }
            private set
            {
                this._textShadowOffset = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TextShadowOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextShadowOffsetSpecified
        {
            get
            {
                return (this.TextShadowOffset.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapDistanceScaleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapDistanceScaleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapDistanceScaleType" /> class.</para>
        /// </summary>
        public MapDistanceScaleType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._mapLocation = new System.Collections.Generic.List<MapLocationType>();
            this._mapSize = new System.Collections.Generic.List<MapSizeType>();
            this._leftMargin = new System.Collections.Generic.List<string>();
            this._rightMargin = new System.Collections.Generic.List<string>();
            this._topMargin = new System.Collections.Generic.List<string>();
            this._bottomMargin = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._position = new System.Collections.Generic.List<string>();
            this._dockOutsideViewport = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._scaleColor = new System.Collections.Generic.List<string>();
            this._scaleBorderColor = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLocationType> _mapLocation;

        [System.Xml.Serialization.XmlElementAttribute("MapLocation")]
        public System.Collections.Generic.List<MapLocationType> MapLocation
        {
            get
            {
                return this._mapLocation;
            }
            private set
            {
                this._mapLocation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLocationSpecified
        {
            get
            {
                return (this.MapLocation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSizeType> _mapSize;

        [System.Xml.Serialization.XmlElementAttribute("MapSize")]
        public System.Collections.Generic.List<MapSizeType> MapSize
        {
            get
            {
                return this._mapSize;
            }
            private set
            {
                this._mapSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSizeSpecified
        {
            get
            {
                return (this.MapSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _leftMargin;

        [System.Xml.Serialization.XmlElementAttribute("LeftMargin")]
        public System.Collections.Generic.List<string> LeftMargin
        {
            get
            {
                return this._leftMargin;
            }
            private set
            {
                this._leftMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftMarginSpecified
        {
            get
            {
                return (this.LeftMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rightMargin;

        [System.Xml.Serialization.XmlElementAttribute("RightMargin")]
        public System.Collections.Generic.List<string> RightMargin
        {
            get
            {
                return this._rightMargin;
            }
            private set
            {
                this._rightMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightMarginSpecified
        {
            get
            {
                return (this.RightMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _topMargin;

        [System.Xml.Serialization.XmlElementAttribute("TopMargin")]
        public System.Collections.Generic.List<string> TopMargin
        {
            get
            {
                return this._topMargin;
            }
            private set
            {
                this._topMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopMarginSpecified
        {
            get
            {
                return (this.TopMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bottomMargin;

        [System.Xml.Serialization.XmlElementAttribute("BottomMargin")]
        public System.Collections.Generic.List<string> BottomMargin
        {
            get
            {
                return this._bottomMargin;
            }
            private set
            {
                this._bottomMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BottomMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BottomMarginSpecified
        {
            get
            {
                return (this.BottomMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockOutsideViewport;

        [System.Xml.Serialization.XmlElementAttribute("DockOutsideViewport")]
        public System.Collections.Generic.List<string> DockOutsideViewport
        {
            get
            {
                return this._dockOutsideViewport;
            }
            private set
            {
                this._dockOutsideViewport = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockOutsideViewport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockOutsideViewportSpecified
        {
            get
            {
                return (this.DockOutsideViewport.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _scaleColor;

        [System.Xml.Serialization.XmlElementAttribute("ScaleColor")]
        public System.Collections.Generic.List<string> ScaleColor
        {
            get
            {
                return this._scaleColor;
            }
            private set
            {
                this._scaleColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleColorSpecified
        {
            get
            {
                return (this.ScaleColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _scaleBorderColor;

        [System.Xml.Serialization.XmlElementAttribute("ScaleBorderColor")]
        public System.Collections.Generic.List<string> ScaleBorderColor
        {
            get
            {
                return this._scaleBorderColor;
            }
            private set
            {
                this._scaleBorderColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ScaleBorderColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleBorderColorSpecified
        {
            get
            {
                return (this.ScaleBorderColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapColorScaleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapColorScaleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapColorScaleType" /> class.</para>
        /// </summary>
        public MapColorScaleType()
        {
            this._style = new System.Collections.Generic.List<StyleType>();
            this._mapLocation = new System.Collections.Generic.List<MapLocationType>();
            this._mapSize = new System.Collections.Generic.List<MapSizeType>();
            this._leftMargin = new System.Collections.Generic.List<string>();
            this._rightMargin = new System.Collections.Generic.List<string>();
            this._topMargin = new System.Collections.Generic.List<string>();
            this._bottomMargin = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<string>();
            this._position = new System.Collections.Generic.List<string>();
            this._dockOutsideViewport = new System.Collections.Generic.List<string>();
            this._hidden = new System.Collections.Generic.List<string>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<string>();
            this._mapColorScaleTitle = new System.Collections.Generic.List<MapColorScaleTitleType>();
            this._tickMarkLength = new System.Collections.Generic.List<string>();
            this._colorBarBorderColor = new System.Collections.Generic.List<string>();
            this._labelInterval = new System.Collections.Generic.List<string>();
            this._labelFormat = new System.Collections.Generic.List<string>();
            this._labelPlacement = new System.Collections.Generic.List<string>();
            this._labelBehavior = new System.Collections.Generic.List<string>();
            this._hideEndLabels = new System.Collections.Generic.List<string>();
            this._rangeGapColor = new System.Collections.Generic.List<string>();
            this._noDataText = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapLocationType> _mapLocation;

        [System.Xml.Serialization.XmlElementAttribute("MapLocation")]
        public System.Collections.Generic.List<MapLocationType> MapLocation
        {
            get
            {
                return this._mapLocation;
            }
            private set
            {
                this._mapLocation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapLocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapLocationSpecified
        {
            get
            {
                return (this.MapLocation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapSizeType> _mapSize;

        [System.Xml.Serialization.XmlElementAttribute("MapSize")]
        public System.Collections.Generic.List<MapSizeType> MapSize
        {
            get
            {
                return this._mapSize;
            }
            private set
            {
                this._mapSize = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapSize collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSizeSpecified
        {
            get
            {
                return (this.MapSize.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _leftMargin;

        [System.Xml.Serialization.XmlElementAttribute("LeftMargin")]
        public System.Collections.Generic.List<string> LeftMargin
        {
            get
            {
                return this._leftMargin;
            }
            private set
            {
                this._leftMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftMarginSpecified
        {
            get
            {
                return (this.LeftMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rightMargin;

        [System.Xml.Serialization.XmlElementAttribute("RightMargin")]
        public System.Collections.Generic.List<string> RightMargin
        {
            get
            {
                return this._rightMargin;
            }
            private set
            {
                this._rightMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightMarginSpecified
        {
            get
            {
                return (this.RightMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _topMargin;

        [System.Xml.Serialization.XmlElementAttribute("TopMargin")]
        public System.Collections.Generic.List<string> TopMargin
        {
            get
            {
                return this._topMargin;
            }
            private set
            {
                this._topMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopMarginSpecified
        {
            get
            {
                return (this.TopMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bottomMargin;

        [System.Xml.Serialization.XmlElementAttribute("BottomMargin")]
        public System.Collections.Generic.List<string> BottomMargin
        {
            get
            {
                return this._bottomMargin;
            }
            private set
            {
                this._bottomMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BottomMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BottomMarginSpecified
        {
            get
            {
                return (this.BottomMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<string> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _position;

        [System.Xml.Serialization.XmlElementAttribute("Position")]
        public System.Collections.Generic.List<string> Position
        {
            get
            {
                return this._position;
            }
            private set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dockOutsideViewport;

        [System.Xml.Serialization.XmlElementAttribute("DockOutsideViewport")]
        public System.Collections.Generic.List<string> DockOutsideViewport
        {
            get
            {
                return this._dockOutsideViewport;
            }
            private set
            {
                this._dockOutsideViewport = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DockOutsideViewport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DockOutsideViewportSpecified
        {
            get
            {
                return (this.DockOutsideViewport.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<string> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<string> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapColorScaleTitleType> _mapColorScaleTitle;

        [System.Xml.Serialization.XmlElementAttribute("MapColorScaleTitle")]
        public System.Collections.Generic.List<MapColorScaleTitleType> MapColorScaleTitle
        {
            get
            {
                return this._mapColorScaleTitle;
            }
            private set
            {
                this._mapColorScaleTitle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapColorScaleTitle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapColorScaleTitleSpecified
        {
            get
            {
                return (this.MapColorScaleTitle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _tickMarkLength;

        [System.Xml.Serialization.XmlElementAttribute("TickMarkLength")]
        public System.Collections.Generic.List<string> TickMarkLength
        {
            get
            {
                return this._tickMarkLength;
            }
            private set
            {
                this._tickMarkLength = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TickMarkLength collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TickMarkLengthSpecified
        {
            get
            {
                return (this.TickMarkLength.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _colorBarBorderColor;

        [System.Xml.Serialization.XmlElementAttribute("ColorBarBorderColor")]
        public System.Collections.Generic.List<string> ColorBarBorderColor
        {
            get
            {
                return this._colorBarBorderColor;
            }
            private set
            {
                this._colorBarBorderColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ColorBarBorderColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColorBarBorderColorSpecified
        {
            get
            {
                return (this.ColorBarBorderColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelInterval;

        [System.Xml.Serialization.XmlElementAttribute("LabelInterval")]
        public System.Collections.Generic.List<string> LabelInterval
        {
            get
            {
                return this._labelInterval;
            }
            private set
            {
                this._labelInterval = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelInterval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelIntervalSpecified
        {
            get
            {
                return (this.LabelInterval.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelFormat;

        [System.Xml.Serialization.XmlElementAttribute("LabelFormat")]
        public System.Collections.Generic.List<string> LabelFormat
        {
            get
            {
                return this._labelFormat;
            }
            private set
            {
                this._labelFormat = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelFormat collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelFormatSpecified
        {
            get
            {
                return (this.LabelFormat.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelPlacement;

        [System.Xml.Serialization.XmlElementAttribute("LabelPlacement")]
        public System.Collections.Generic.List<string> LabelPlacement
        {
            get
            {
                return this._labelPlacement;
            }
            private set
            {
                this._labelPlacement = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelPlacement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelPlacementSpecified
        {
            get
            {
                return (this.LabelPlacement.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelBehavior;

        [System.Xml.Serialization.XmlElementAttribute("LabelBehavior")]
        public System.Collections.Generic.List<string> LabelBehavior
        {
            get
            {
                return this._labelBehavior;
            }
            private set
            {
                this._labelBehavior = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelBehavior collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelBehaviorSpecified
        {
            get
            {
                return (this.LabelBehavior.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _hideEndLabels;

        [System.Xml.Serialization.XmlElementAttribute("HideEndLabels")]
        public System.Collections.Generic.List<string> HideEndLabels
        {
            get
            {
                return this._hideEndLabels;
            }
            private set
            {
                this._hideEndLabels = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HideEndLabels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideEndLabelsSpecified
        {
            get
            {
                return (this.HideEndLabels.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rangeGapColor;

        [System.Xml.Serialization.XmlElementAttribute("RangeGapColor")]
        public System.Collections.Generic.List<string> RangeGapColor
        {
            get
            {
                return this._rangeGapColor;
            }
            private set
            {
                this._rangeGapColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RangeGapColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RangeGapColorSpecified
        {
            get
            {
                return (this.RangeGapColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _noDataText;

        [System.Xml.Serialization.XmlElementAttribute("NoDataText")]
        public System.Collections.Generic.List<string> NoDataText
        {
            get
            {
                return this._noDataText;
            }
            private set
            {
                this._noDataText = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NoDataText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoDataTextSpecified
        {
            get
            {
                return (this.NoDataText.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapColorScaleTitleType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapColorScaleTitleType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _caption;

        [System.Xml.Serialization.XmlElementAttribute("Caption")]
        public System.Collections.Generic.List<string> Caption
        {
            get
            {
                return this._caption;
            }
            private set
            {
                this._caption = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Caption collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaptionSpecified
        {
            get
            {
                return (this.Caption.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapColorScaleTitleType" /> class.</para>
        /// </summary>
        public MapColorScaleTitleType()
        {
            this._caption = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MapBorderSkinType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapBorderSkinType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mapBorderSkinTypeProperty;

        [System.Xml.Serialization.XmlElementAttribute("MapBorderSkinType")]
        public System.Collections.Generic.List<string> MapBorderSkinTypeProperty
        {
            get
            {
                return this._mapBorderSkinTypeProperty;
            }
            private set
            {
                this._mapBorderSkinTypeProperty = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MapBorderSkinTypeProperty collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapBorderSkinTypePropertySpecified
        {
            get
            {
                return (this.MapBorderSkinTypeProperty.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MapBorderSkinType" /> class.</para>
        /// </summary>
        public MapBorderSkinType()
        {
            this._mapBorderSkinTypeProperty = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixCornerType> _tablixCorner;

        [System.Xml.Serialization.XmlElementAttribute("TablixCorner")]
        public System.Collections.Generic.List<TablixCornerType> TablixCorner
        {
            get
            {
                return this._tablixCorner;
            }
            private set
            {
                this._tablixCorner = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixCorner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixCornerSpecified
        {
            get
            {
                return (this.TablixCorner.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixType" /> class.</para>
        /// </summary>
        public TablixType()
        {
            this._tablixCorner = new System.Collections.Generic.List<TablixCornerType>();
            this._tablixBody = new System.Collections.Generic.List<TablixBodyType>();
            this._tablixColumnHierarchy = new System.Collections.Generic.List<TablixHierarchyType>();
            this._tablixRowHierarchy = new System.Collections.Generic.List<TablixHierarchyType>();
            this._layoutDirection = new System.Collections.Generic.List<TablixTypeLayoutDirection>();
            this._groupsBeforeRowHeaders = new System.Collections.Generic.List<uint>();
            this._repeatColumnHeaders = new System.Collections.Generic.List<bool>();
            this._repeatRowHeaders = new System.Collections.Generic.List<bool>();
            this._fixedColumnHeaders = new System.Collections.Generic.List<bool>();
            this._fixedRowHeaders = new System.Collections.Generic.List<bool>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._sortExpressions = new System.Collections.Generic.List<SortExpressionsType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._pageBreak = new System.Collections.Generic.List<PageBreakType>();
            this._pageName = new System.Collections.Generic.List<string>();
            this._keepTogether = new System.Collections.Generic.List<bool>();
            this._noRowsMessage = new System.Collections.Generic.List<string>();
            this._dataSetName = new System.Collections.Generic.List<string>();
            this._filters = new System.Collections.Generic.List<FiltersType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._omitBorderOnPageBreak = new System.Collections.Generic.List<bool>();
            this._dataElementOutput = new System.Collections.Generic.List<TablixTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixBodyType> _tablixBody;

        [System.Xml.Serialization.XmlElementAttribute("TablixBody")]
        public System.Collections.Generic.List<TablixBodyType> TablixBody
        {
            get
            {
                return this._tablixBody;
            }
            private set
            {
                this._tablixBody = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixBody collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixBodySpecified
        {
            get
            {
                return (this.TablixBody.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixHierarchyType> _tablixColumnHierarchy;

        [System.Xml.Serialization.XmlElementAttribute("TablixColumnHierarchy")]
        public System.Collections.Generic.List<TablixHierarchyType> TablixColumnHierarchy
        {
            get
            {
                return this._tablixColumnHierarchy;
            }
            private set
            {
                this._tablixColumnHierarchy = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixColumnHierarchy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixColumnHierarchySpecified
        {
            get
            {
                return (this.TablixColumnHierarchy.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixHierarchyType> _tablixRowHierarchy;

        [System.Xml.Serialization.XmlElementAttribute("TablixRowHierarchy")]
        public System.Collections.Generic.List<TablixHierarchyType> TablixRowHierarchy
        {
            get
            {
                return this._tablixRowHierarchy;
            }
            private set
            {
                this._tablixRowHierarchy = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixRowHierarchy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixRowHierarchySpecified
        {
            get
            {
                return (this.TablixRowHierarchy.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixTypeLayoutDirection> _layoutDirection;

        [System.Xml.Serialization.XmlElementAttribute("LayoutDirection")]
        public System.Collections.Generic.List<TablixTypeLayoutDirection> LayoutDirection
        {
            get
            {
                return this._layoutDirection;
            }
            private set
            {
                this._layoutDirection = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LayoutDirection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutDirectionSpecified
        {
            get
            {
                return (this.LayoutDirection.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _groupsBeforeRowHeaders;

        [System.Xml.Serialization.XmlElementAttribute("GroupsBeforeRowHeaders")]
        public System.Collections.Generic.List<uint> GroupsBeforeRowHeaders
        {
            get
            {
                return this._groupsBeforeRowHeaders;
            }
            private set
            {
                this._groupsBeforeRowHeaders = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GroupsBeforeRowHeaders collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupsBeforeRowHeadersSpecified
        {
            get
            {
                return (this.GroupsBeforeRowHeaders.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _repeatColumnHeaders;

        [System.Xml.Serialization.XmlElementAttribute("RepeatColumnHeaders")]
        public System.Collections.Generic.List<bool> RepeatColumnHeaders
        {
            get
            {
                return this._repeatColumnHeaders;
            }
            private set
            {
                this._repeatColumnHeaders = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatColumnHeaders collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatColumnHeadersSpecified
        {
            get
            {
                return (this.RepeatColumnHeaders.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _repeatRowHeaders;

        [System.Xml.Serialization.XmlElementAttribute("RepeatRowHeaders")]
        public System.Collections.Generic.List<bool> RepeatRowHeaders
        {
            get
            {
                return this._repeatRowHeaders;
            }
            private set
            {
                this._repeatRowHeaders = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatRowHeaders collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatRowHeadersSpecified
        {
            get
            {
                return (this.RepeatRowHeaders.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _fixedColumnHeaders;

        [System.Xml.Serialization.XmlElementAttribute("FixedColumnHeaders")]
        public System.Collections.Generic.List<bool> FixedColumnHeaders
        {
            get
            {
                return this._fixedColumnHeaders;
            }
            private set
            {
                this._fixedColumnHeaders = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FixedColumnHeaders collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedColumnHeadersSpecified
        {
            get
            {
                return (this.FixedColumnHeaders.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _fixedRowHeaders;

        [System.Xml.Serialization.XmlElementAttribute("FixedRowHeaders")]
        public System.Collections.Generic.List<bool> FixedRowHeaders
        {
            get
            {
                return this._fixedRowHeaders;
            }
            private set
            {
                this._fixedRowHeaders = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FixedRowHeaders collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedRowHeadersSpecified
        {
            get
            {
                return (this.FixedRowHeaders.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionsType> _sortExpressions;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressions")]
        public System.Collections.Generic.List<SortExpressionsType> SortExpressions
        {
            get
            {
                return this._sortExpressions;
            }
            private set
            {
                this._sortExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionsSpecified
        {
            get
            {
                return (this.SortExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageBreakType> _pageBreak;

        [System.Xml.Serialization.XmlElementAttribute("PageBreak")]
        public System.Collections.Generic.List<PageBreakType> PageBreak
        {
            get
            {
                return this._pageBreak;
            }
            private set
            {
                this._pageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageBreakSpecified
        {
            get
            {
                return (this.PageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pageName;

        [System.Xml.Serialization.XmlElementAttribute("PageName")]
        public System.Collections.Generic.List<string> PageName
        {
            get
            {
                return this._pageName;
            }
            private set
            {
                this._pageName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageNameSpecified
        {
            get
            {
                return (this.PageName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _keepTogether;

        [System.Xml.Serialization.XmlElementAttribute("KeepTogether")]
        public System.Collections.Generic.List<bool> KeepTogether
        {
            get
            {
                return this._keepTogether;
            }
            private set
            {
                this._keepTogether = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KeepTogether collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepTogetherSpecified
        {
            get
            {
                return (this.KeepTogether.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _noRowsMessage;

        [System.Xml.Serialization.XmlElementAttribute("NoRowsMessage")]
        public System.Collections.Generic.List<string> NoRowsMessage
        {
            get
            {
                return this._noRowsMessage;
            }
            private set
            {
                this._noRowsMessage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NoRowsMessage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoRowsMessageSpecified
        {
            get
            {
                return (this.NoRowsMessage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSetName;

        [System.Xml.Serialization.XmlElementAttribute("DataSetName")]
        public System.Collections.Generic.List<string> DataSetName
        {
            get
            {
                return this._dataSetName;
            }
            private set
            {
                this._dataSetName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetNameSpecified
        {
            get
            {
                return (this.DataSetName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FiltersType> _filters;

        [System.Xml.Serialization.XmlElementAttribute("Filters")]
        public System.Collections.Generic.List<FiltersType> Filters
        {
            get
            {
                return this._filters;
            }
            private set
            {
                this._filters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _omitBorderOnPageBreak;

        [System.Xml.Serialization.XmlElementAttribute("OmitBorderOnPageBreak")]
        public System.Collections.Generic.List<bool> OmitBorderOnPageBreak
        {
            get
            {
                return this._omitBorderOnPageBreak;
            }
            private set
            {
                this._omitBorderOnPageBreak = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OmitBorderOnPageBreak collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OmitBorderOnPageBreakSpecified
        {
            get
            {
                return (this.OmitBorderOnPageBreak.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<TablixTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixCornerType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixCornerType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixCornerRowsType> _tablixCornerRows;

        [System.Xml.Serialization.XmlElementAttribute("TablixCornerRows")]
        public System.Collections.Generic.List<TablixCornerRowsType> TablixCornerRows
        {
            get
            {
                return this._tablixCornerRows;
            }
            private set
            {
                this._tablixCornerRows = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixCornerRows collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixCornerRowsSpecified
        {
            get
            {
                return (this.TablixCornerRows.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixCornerType" /> class.</para>
        /// </summary>
        public TablixCornerType()
        {
            this._tablixCornerRows = new System.Collections.Generic.List<TablixCornerRowsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixCornerRowsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixCornerRowsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixCornerRowType> _tablixCornerRow;

        [System.Xml.Serialization.XmlElementAttribute("TablixCornerRow")]
        public System.Collections.Generic.List<TablixCornerRowType> TablixCornerRow
        {
            get
            {
                return this._tablixCornerRow;
            }
            private set
            {
                this._tablixCornerRow = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixCornerRow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixCornerRowSpecified
        {
            get
            {
                return (this.TablixCornerRow.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixCornerRowsType" /> class.</para>
        /// </summary>
        public TablixCornerRowsType()
        {
            this._tablixCornerRow = new System.Collections.Generic.List<TablixCornerRowType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixCornerRowType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixCornerRowType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixCornerCellType> _tablixCornerCell;

        [System.Xml.Serialization.XmlElementAttribute("TablixCornerCell")]
        public System.Collections.Generic.List<TablixCornerCellType> TablixCornerCell
        {
            get
            {
                return this._tablixCornerCell;
            }
            private set
            {
                this._tablixCornerCell = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixCornerCell collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixCornerCellSpecified
        {
            get
            {
                return (this.TablixCornerCell.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixCornerRowType" /> class.</para>
        /// </summary>
        public TablixCornerRowType()
        {
            this._tablixCornerCell = new System.Collections.Generic.List<TablixCornerCellType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixCornerCellType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixCornerCellType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CellContentsType> _cellContents;

        [System.Xml.Serialization.XmlElementAttribute("CellContents")]
        public System.Collections.Generic.List<CellContentsType> CellContents
        {
            get
            {
                return this._cellContents;
            }
            private set
            {
                this._cellContents = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CellContents collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellContentsSpecified
        {
            get
            {
                return (this.CellContents.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixCornerCellType" /> class.</para>
        /// </summary>
        public TablixCornerCellType()
        {
            this._cellContents = new System.Collections.Generic.List<CellContentsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CellContentsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CellContentsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _colSpan;

        [System.Xml.Serialization.XmlElementAttribute("ColSpan")]
        public System.Collections.Generic.List<uint> ColSpan
        {
            get
            {
                return this._colSpan;
            }
            private set
            {
                this._colSpan = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ColSpan collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColSpanSpecified
        {
            get
            {
                return (this.ColSpan.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CellContentsType" /> class.</para>
        /// </summary>
        public CellContentsType()
        {
            this._colSpan = new System.Collections.Generic.List<uint>();
            this._rowSpan = new System.Collections.Generic.List<uint>();
            this._line = new System.Collections.Generic.List<LineType>();
            this._rectangle = new System.Collections.Generic.List<RectangleType>();
            this._textbox = new System.Collections.Generic.List<TextboxType>();
            this._image = new System.Collections.Generic.List<ImageType>();
            this._subreport = new System.Collections.Generic.List<SubreportType>();
            this._chart = new System.Collections.Generic.List<ChartType>();
            this._gaugePanel = new System.Collections.Generic.List<GaugePanelType>();
            this._map = new System.Collections.Generic.List<MapType>();
            this._customReportItem = new System.Collections.Generic.List<CustomReportItemType>();
            this._tablix = new System.Collections.Generic.List<TablixType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _rowSpan;

        [System.Xml.Serialization.XmlElementAttribute("RowSpan")]
        public System.Collections.Generic.List<uint> RowSpan
        {
            get
            {
                return this._rowSpan;
            }
            private set
            {
                this._rowSpan = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RowSpan collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowSpanSpecified
        {
            get
            {
                return (this.RowSpan.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<LineType> _line;

        [System.Xml.Serialization.XmlElementAttribute("Line")]
        public System.Collections.Generic.List<LineType> Line
        {
            get
            {
                return this._line;
            }
            private set
            {
                this._line = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Line collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LineSpecified
        {
            get
            {
                return (this.Line.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<RectangleType> _rectangle;

        [System.Xml.Serialization.XmlElementAttribute("Rectangle")]
        public System.Collections.Generic.List<RectangleType> Rectangle
        {
            get
            {
                return this._rectangle;
            }
            private set
            {
                this._rectangle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Rectangle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RectangleSpecified
        {
            get
            {
                return (this.Rectangle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TextboxType> _textbox;

        [System.Xml.Serialization.XmlElementAttribute("Textbox")]
        public System.Collections.Generic.List<TextboxType> Textbox
        {
            get
            {
                return this._textbox;
            }
            private set
            {
                this._textbox = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Textbox collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextboxSpecified
        {
            get
            {
                return (this.Textbox.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ImageType> _image;

        [System.Xml.Serialization.XmlElementAttribute("Image")]
        public System.Collections.Generic.List<ImageType> Image
        {
            get
            {
                return this._image;
            }
            private set
            {
                this._image = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Image collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageSpecified
        {
            get
            {
                return (this.Image.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SubreportType> _subreport;

        [System.Xml.Serialization.XmlElementAttribute("Subreport")]
        public System.Collections.Generic.List<SubreportType> Subreport
        {
            get
            {
                return this._subreport;
            }
            private set
            {
                this._subreport = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Subreport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubreportSpecified
        {
            get
            {
                return (this.Subreport.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartType> _chart;

        [System.Xml.Serialization.XmlElementAttribute("Chart")]
        public System.Collections.Generic.List<ChartType> Chart
        {
            get
            {
                return this._chart;
            }
            private set
            {
                this._chart = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Chart collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartSpecified
        {
            get
            {
                return (this.Chart.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GaugePanelType> _gaugePanel;

        [System.Xml.Serialization.XmlElementAttribute("GaugePanel")]
        public System.Collections.Generic.List<GaugePanelType> GaugePanel
        {
            get
            {
                return this._gaugePanel;
            }
            private set
            {
                this._gaugePanel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GaugePanel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GaugePanelSpecified
        {
            get
            {
                return (this.GaugePanel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MapType> _map;

        [System.Xml.Serialization.XmlElementAttribute("Map")]
        public System.Collections.Generic.List<MapType> Map
        {
            get
            {
                return this._map;
            }
            private set
            {
                this._map = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Map collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MapSpecified
        {
            get
            {
                return (this.Map.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomReportItemType> _customReportItem;

        [System.Xml.Serialization.XmlElementAttribute("CustomReportItem")]
        public System.Collections.Generic.List<CustomReportItemType> CustomReportItem
        {
            get
            {
                return this._customReportItem;
            }
            private set
            {
                this._customReportItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomReportItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomReportItemSpecified
        {
            get
            {
                return (this.CustomReportItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixType> _tablix;

        [System.Xml.Serialization.XmlElementAttribute("Tablix")]
        public System.Collections.Generic.List<TablixType> Tablix
        {
            get
            {
                return this._tablix;
            }
            private set
            {
                this._tablix = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Tablix collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixSpecified
        {
            get
            {
                return (this.Tablix.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CustomReportItemType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomReportItemType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _type;

        [System.Xml.Serialization.XmlElementAttribute("Type")]
        public System.Collections.Generic.List<string> Type
        {
            get
            {
                return this._type;
            }
            private set
            {
                this._type = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Type collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return (this.Type.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CustomReportItemType" /> class.</para>
        /// </summary>
        public CustomReportItemType()
        {
            this._type = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._top = new System.Collections.Generic.List<string>();
            this._left = new System.Collections.Generic.List<string>();
            this._height = new System.Collections.Generic.List<string>();
            this._width = new System.Collections.Generic.List<string>();
            this._zIndex = new System.Collections.Generic.List<uint>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._documentMapLabel = new System.Collections.Generic.List<StringLocIDType>();
            this._bookmark = new System.Collections.Generic.List<string>();
            this._repeatWith = new System.Collections.Generic.List<string>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._altReportItem = new System.Collections.Generic.List<ReportItemsType>();
            this._customData = new System.Collections.Generic.List<CustomDataType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<CustomReportItemTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _top;

        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public System.Collections.Generic.List<string> Top
        {
            get
            {
                return this._top;
            }
            private set
            {
                this._top = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Top collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopSpecified
        {
            get
            {
                return (this.Top.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _left;

        [System.Xml.Serialization.XmlElementAttribute("Left")]
        public System.Collections.Generic.List<string> Left
        {
            get
            {
                return this._left;
            }
            private set
            {
                this._left = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Left collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftSpecified
        {
            get
            {
                return (this.Left.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _zIndex;

        [System.Xml.Serialization.XmlElementAttribute("ZIndex")]
        public System.Collections.Generic.List<uint> ZIndex
        {
            get
            {
                return this._zIndex;
            }
            private set
            {
                this._zIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ZIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZIndexSpecified
        {
            get
            {
                return (this.ZIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _documentMapLabel;

        [System.Xml.Serialization.XmlElementAttribute("DocumentMapLabel")]
        public System.Collections.Generic.List<StringLocIDType> DocumentMapLabel
        {
            get
            {
                return this._documentMapLabel;
            }
            private set
            {
                this._documentMapLabel = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DocumentMapLabel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentMapLabelSpecified
        {
            get
            {
                return (this.DocumentMapLabel.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bookmark;

        [System.Xml.Serialization.XmlElementAttribute("Bookmark")]
        public System.Collections.Generic.List<string> Bookmark
        {
            get
            {
                return this._bookmark;
            }
            private set
            {
                this._bookmark = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Bookmark collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BookmarkSpecified
        {
            get
            {
                return (this.Bookmark.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _repeatWith;

        [System.Xml.Serialization.XmlElementAttribute("RepeatWith")]
        public System.Collections.Generic.List<string> RepeatWith
        {
            get
            {
                return this._repeatWith;
            }
            private set
            {
                this._repeatWith = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatWith collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatWithSpecified
        {
            get
            {
                return (this.RepeatWith.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportItemsType> _altReportItem;

        [System.Xml.Serialization.XmlElementAttribute("AltReportItem")]
        public System.Collections.Generic.List<ReportItemsType> AltReportItem
        {
            get
            {
                return this._altReportItem;
            }
            private set
            {
                this._altReportItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AltReportItem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AltReportItemSpecified
        {
            get
            {
                return (this.AltReportItem.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomDataType> _customData;

        [System.Xml.Serialization.XmlElementAttribute("CustomData")]
        public System.Collections.Generic.List<CustomDataType> CustomData
        {
            get
            {
                return this._customData;
            }
            private set
            {
                this._customData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomDataSpecified
        {
            get
            {
                return (this.CustomData.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomReportItemTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<CustomReportItemTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CustomDataType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomDataType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSetName;

        [System.Xml.Serialization.XmlElementAttribute("DataSetName")]
        public System.Collections.Generic.List<string> DataSetName
        {
            get
            {
                return this._dataSetName;
            }
            private set
            {
                this._dataSetName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetNameSpecified
        {
            get
            {
                return (this.DataSetName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CustomDataType" /> class.</para>
        /// </summary>
        public CustomDataType()
        {
            this._dataSetName = new System.Collections.Generic.List<string>();
            this._filters = new System.Collections.Generic.List<FiltersType>();
            this._sortExpressions = new System.Collections.Generic.List<SortExpressionsType>();
            this._dataColumnHierarchy = new System.Collections.Generic.List<DataColumnHierarchyType>();
            this._dataRowHierarchy = new System.Collections.Generic.List<DataRowHierarchyType>();
            this._dataRows = new System.Collections.Generic.List<DataRowsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FiltersType> _filters;

        [System.Xml.Serialization.XmlElementAttribute("Filters")]
        public System.Collections.Generic.List<FiltersType> Filters
        {
            get
            {
                return this._filters;
            }
            private set
            {
                this._filters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionsType> _sortExpressions;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressions")]
        public System.Collections.Generic.List<SortExpressionsType> SortExpressions
        {
            get
            {
                return this._sortExpressions;
            }
            private set
            {
                this._sortExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionsSpecified
        {
            get
            {
                return (this.SortExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataColumnHierarchyType> _dataColumnHierarchy;

        [System.Xml.Serialization.XmlElementAttribute("DataColumnHierarchy")]
        public System.Collections.Generic.List<DataColumnHierarchyType> DataColumnHierarchy
        {
            get
            {
                return this._dataColumnHierarchy;
            }
            private set
            {
                this._dataColumnHierarchy = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataColumnHierarchy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataColumnHierarchySpecified
        {
            get
            {
                return (this.DataColumnHierarchy.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataRowHierarchyType> _dataRowHierarchy;

        [System.Xml.Serialization.XmlElementAttribute("DataRowHierarchy")]
        public System.Collections.Generic.List<DataRowHierarchyType> DataRowHierarchy
        {
            get
            {
                return this._dataRowHierarchy;
            }
            private set
            {
                this._dataRowHierarchy = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataRowHierarchy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataRowHierarchySpecified
        {
            get
            {
                return (this.DataRowHierarchy.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataRowsType> _dataRows;

        [System.Xml.Serialization.XmlElementAttribute("DataRows")]
        public System.Collections.Generic.List<DataRowsType> DataRows
        {
            get
            {
                return this._dataRows;
            }
            private set
            {
                this._dataRows = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataRows collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataRowsSpecified
        {
            get
            {
                return (this.DataRows.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataColumnHierarchyType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataColumnHierarchyType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataMembersType> _dataMembers;

        [System.Xml.Serialization.XmlElementAttribute("DataMembers")]
        public System.Collections.Generic.List<DataMembersType> DataMembers
        {
            get
            {
                return this._dataMembers;
            }
            private set
            {
                this._dataMembers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataMembers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataMembersSpecified
        {
            get
            {
                return (this.DataMembers.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataColumnHierarchyType" /> class.</para>
        /// </summary>
        public DataColumnHierarchyType()
        {
            this._dataMembers = new System.Collections.Generic.List<DataMembersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataMembersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMembersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataMemberType> _dataMember;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("DataMember")]
        public System.Collections.Generic.List<DataMemberType> DataMember
        {
            get
            {
                return this._dataMember;
            }
            private set
            {
                this._dataMember = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataMembersType" /> class.</para>
        /// </summary>
        public DataMembersType()
        {
            this._dataMember = new System.Collections.Generic.List<DataMemberType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataMemberType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMemberType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GroupType> _group;

        [System.Xml.Serialization.XmlElementAttribute("Group")]
        public System.Collections.Generic.List<GroupType> Group
        {
            get
            {
                return this._group;
            }
            private set
            {
                this._group = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupSpecified
        {
            get
            {
                return (this.Group.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataMemberType" /> class.</para>
        /// </summary>
        public DataMemberType()
        {
            this._group = new System.Collections.Generic.List<GroupType>();
            this._sortExpressions = new System.Collections.Generic.List<SortExpressionsType>();
            this._subtotal = new System.Collections.Generic.List<bool>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._dataMembers = new System.Collections.Generic.List<DataMembersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionsType> _sortExpressions;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressions")]
        public System.Collections.Generic.List<SortExpressionsType> SortExpressions
        {
            get
            {
                return this._sortExpressions;
            }
            private set
            {
                this._sortExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionsSpecified
        {
            get
            {
                return (this.SortExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _subtotal;

        [System.Xml.Serialization.XmlElementAttribute("Subtotal")]
        public System.Collections.Generic.List<bool> Subtotal
        {
            get
            {
                return this._subtotal;
            }
            private set
            {
                this._subtotal = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Subtotal collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubtotalSpecified
        {
            get
            {
                return (this.Subtotal.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataMembersType> _dataMembers;

        [System.Xml.Serialization.XmlElementAttribute("DataMembers")]
        public System.Collections.Generic.List<DataMembersType> DataMembers
        {
            get
            {
                return this._dataMembers;
            }
            private set
            {
                this._dataMembers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataMembers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataMembersSpecified
        {
            get
            {
                return (this.DataMembers.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataRowHierarchyType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataRowHierarchyType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataMembersType> _dataMembers;

        [System.Xml.Serialization.XmlElementAttribute("DataMembers")]
        public System.Collections.Generic.List<DataMembersType> DataMembers
        {
            get
            {
                return this._dataMembers;
            }
            private set
            {
                this._dataMembers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataMembers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataMembersSpecified
        {
            get
            {
                return (this.DataMembers.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataRowHierarchyType" /> class.</para>
        /// </summary>
        public DataRowHierarchyType()
        {
            this._dataMembers = new System.Collections.Generic.List<DataMembersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataRowsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataRowsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataRowType> _dataRow;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("DataRow")]
        public System.Collections.Generic.List<DataRowType> DataRow
        {
            get
            {
                return this._dataRow;
            }
            private set
            {
                this._dataRow = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataRowsType" /> class.</para>
        /// </summary>
        public DataRowsType()
        {
            this._dataRow = new System.Collections.Generic.List<DataRowType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataRowType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataRowType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataCellType> _dataCell;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("DataCell")]
        public System.Collections.Generic.List<DataCellType> DataCell
        {
            get
            {
                return this._dataCell;
            }
            private set
            {
                this._dataCell = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataRowType" /> class.</para>
        /// </summary>
        public DataRowType()
        {
            this._dataCell = new System.Collections.Generic.List<DataCellType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataCellType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataCellType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataValueType> _dataValue;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("DataValue")]
        public System.Collections.Generic.List<DataValueType> DataValue
        {
            get
            {
                return this._dataValue;
            }
            private set
            {
                this._dataValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataCellType" /> class.</para>
        /// </summary>
        public DataCellType()
        {
            this._dataValue = new System.Collections.Generic.List<DataValueType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataValueType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataValueType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _name;

        [System.Xml.Serialization.XmlElementAttribute("Name")]
        public System.Collections.Generic.List<string> Name
        {
            get
            {
                return this._name;
            }
            private set
            {
                this._name = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Name collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified
        {
            get
            {
                return (this.Name.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataValueType" /> class.</para>
        /// </summary>
        public DataValueType()
        {
            this._name = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CustomReportItemTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum CustomReportItemTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixBodyType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixBodyType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixColumnsType> _tablixColumns;

        [System.Xml.Serialization.XmlElementAttribute("TablixColumns")]
        public System.Collections.Generic.List<TablixColumnsType> TablixColumns
        {
            get
            {
                return this._tablixColumns;
            }
            private set
            {
                this._tablixColumns = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixColumns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixColumnsSpecified
        {
            get
            {
                return (this.TablixColumns.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixBodyType" /> class.</para>
        /// </summary>
        public TablixBodyType()
        {
            this._tablixColumns = new System.Collections.Generic.List<TablixColumnsType>();
            this._tablixRows = new System.Collections.Generic.List<TablixRowsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixRowsType> _tablixRows;

        [System.Xml.Serialization.XmlElementAttribute("TablixRows")]
        public System.Collections.Generic.List<TablixRowsType> TablixRows
        {
            get
            {
                return this._tablixRows;
            }
            private set
            {
                this._tablixRows = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixRows collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixRowsSpecified
        {
            get
            {
                return (this.TablixRows.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixColumnsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixColumnsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixColumnType> _tablixColumn;

        [System.Xml.Serialization.XmlElementAttribute("TablixColumn")]
        public System.Collections.Generic.List<TablixColumnType> TablixColumn
        {
            get
            {
                return this._tablixColumn;
            }
            private set
            {
                this._tablixColumn = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixColumn collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixColumnSpecified
        {
            get
            {
                return (this.TablixColumn.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixColumnsType" /> class.</para>
        /// </summary>
        public TablixColumnsType()
        {
            this._tablixColumn = new System.Collections.Generic.List<TablixColumnType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixColumnType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixColumnType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _width;

        [System.Xml.Serialization.XmlElementAttribute("Width")]
        public System.Collections.Generic.List<string> Width
        {
            get
            {
                return this._width;
            }
            private set
            {
                this._width = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Width collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return (this.Width.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixColumnType" /> class.</para>
        /// </summary>
        public TablixColumnType()
        {
            this._width = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixRowsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixRowsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixRowType> _tablixRow;

        [System.Xml.Serialization.XmlElementAttribute("TablixRow")]
        public System.Collections.Generic.List<TablixRowType> TablixRow
        {
            get
            {
                return this._tablixRow;
            }
            private set
            {
                this._tablixRow = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixRow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixRowSpecified
        {
            get
            {
                return (this.TablixRow.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixRowsType" /> class.</para>
        /// </summary>
        public TablixRowsType()
        {
            this._tablixRow = new System.Collections.Generic.List<TablixRowType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixRowType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixRowType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixRowType" /> class.</para>
        /// </summary>
        public TablixRowType()
        {
            this._height = new System.Collections.Generic.List<string>();
            this._tablixCells = new System.Collections.Generic.List<TablixCellsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixCellsType> _tablixCells;

        [System.Xml.Serialization.XmlElementAttribute("TablixCells")]
        public System.Collections.Generic.List<TablixCellsType> TablixCells
        {
            get
            {
                return this._tablixCells;
            }
            private set
            {
                this._tablixCells = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixCells collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixCellsSpecified
        {
            get
            {
                return (this.TablixCells.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixCellsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixCellsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixCellType> _tablixCell;

        [System.Xml.Serialization.XmlElementAttribute("TablixCell")]
        public System.Collections.Generic.List<TablixCellType> TablixCell
        {
            get
            {
                return this._tablixCell;
            }
            private set
            {
                this._tablixCell = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixCell collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixCellSpecified
        {
            get
            {
                return (this.TablixCell.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixCellsType" /> class.</para>
        /// </summary>
        public TablixCellsType()
        {
            this._tablixCell = new System.Collections.Generic.List<TablixCellType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixCellType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixCellType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CellContentsType> _cellContents;

        [System.Xml.Serialization.XmlElementAttribute("CellContents")]
        public System.Collections.Generic.List<CellContentsType> CellContents
        {
            get
            {
                return this._cellContents;
            }
            private set
            {
                this._cellContents = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CellContents collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellContentsSpecified
        {
            get
            {
                return (this.CellContents.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixCellType" /> class.</para>
        /// </summary>
        public TablixCellType()
        {
            this._cellContents = new System.Collections.Generic.List<CellContentsType>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<TablixCellTypeDataElementOutput>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixCellTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<TablixCellTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixCellTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum TablixCellTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixHierarchyType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixHierarchyType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixMembersType> _tablixMembers;

        [System.Xml.Serialization.XmlElementAttribute("TablixMembers")]
        public System.Collections.Generic.List<TablixMembersType> TablixMembers
        {
            get
            {
                return this._tablixMembers;
            }
            private set
            {
                this._tablixMembers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixMembers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixMembersSpecified
        {
            get
            {
                return (this.TablixMembers.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixHierarchyType" /> class.</para>
        /// </summary>
        public TablixHierarchyType()
        {
            this._tablixMembers = new System.Collections.Generic.List<TablixMembersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixMembersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixMembersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixMemberType> _tablixMember;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("TablixMember")]
        public System.Collections.Generic.List<TablixMemberType> TablixMember
        {
            get
            {
                return this._tablixMember;
            }
            private set
            {
                this._tablixMember = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixMembersType" /> class.</para>
        /// </summary>
        public TablixMembersType()
        {
            this._tablixMember = new System.Collections.Generic.List<TablixMemberType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixMemberType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixMemberType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<GroupType> _group;

        [System.Xml.Serialization.XmlElementAttribute("Group")]
        public System.Collections.Generic.List<GroupType> Group
        {
            get
            {
                return this._group;
            }
            private set
            {
                this._group = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupSpecified
        {
            get
            {
                return (this.Group.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixMemberType" /> class.</para>
        /// </summary>
        public TablixMemberType()
        {
            this._group = new System.Collections.Generic.List<GroupType>();
            this._sortExpressions = new System.Collections.Generic.List<SortExpressionsType>();
            this._tablixHeader = new System.Collections.Generic.List<TablixHeaderType>();
            this._tablixMembers = new System.Collections.Generic.List<TablixMembersType>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._fixedData = new System.Collections.Generic.List<bool>();
            this._visibility = new System.Collections.Generic.List<VisibilityType>();
            this._hideIfNoRows = new System.Collections.Generic.List<bool>();
            this._repeatOnNewPage = new System.Collections.Generic.List<bool>();
            this._keepWithGroup = new System.Collections.Generic.List<TablixMemberTypeKeepWithGroup>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementOutput = new System.Collections.Generic.List<TablixMemberTypeDataElementOutput>();
            this._keepTogether = new System.Collections.Generic.List<bool>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SortExpressionsType> _sortExpressions;

        [System.Xml.Serialization.XmlElementAttribute("SortExpressions")]
        public System.Collections.Generic.List<SortExpressionsType> SortExpressions
        {
            get
            {
                return this._sortExpressions;
            }
            private set
            {
                this._sortExpressions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SortExpressions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortExpressionsSpecified
        {
            get
            {
                return (this.SortExpressions.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixHeaderType> _tablixHeader;

        [System.Xml.Serialization.XmlElementAttribute("TablixHeader")]
        public System.Collections.Generic.List<TablixHeaderType> TablixHeader
        {
            get
            {
                return this._tablixHeader;
            }
            private set
            {
                this._tablixHeader = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixHeader collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixHeaderSpecified
        {
            get
            {
                return (this.TablixHeader.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixMembersType> _tablixMembers;

        [System.Xml.Serialization.XmlElementAttribute("TablixMembers")]
        public System.Collections.Generic.List<TablixMembersType> TablixMembers
        {
            get
            {
                return this._tablixMembers;
            }
            private set
            {
                this._tablixMembers = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TablixMembers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablixMembersSpecified
        {
            get
            {
                return (this.TablixMembers.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _fixedData;

        [System.Xml.Serialization.XmlElementAttribute("FixedData")]
        public System.Collections.Generic.List<bool> FixedData
        {
            get
            {
                return this._fixedData;
            }
            private set
            {
                this._fixedData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FixedData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedDataSpecified
        {
            get
            {
                return (this.FixedData.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VisibilityType> _visibility;

        [System.Xml.Serialization.XmlElementAttribute("Visibility")]
        public System.Collections.Generic.List<VisibilityType> Visibility
        {
            get
            {
                return this._visibility;
            }
            private set
            {
                this._visibility = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Visibility collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified
        {
            get
            {
                return (this.Visibility.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _hideIfNoRows;

        [System.Xml.Serialization.XmlElementAttribute("HideIfNoRows")]
        public System.Collections.Generic.List<bool> HideIfNoRows
        {
            get
            {
                return this._hideIfNoRows;
            }
            private set
            {
                this._hideIfNoRows = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the HideIfNoRows collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideIfNoRowsSpecified
        {
            get
            {
                return (this.HideIfNoRows.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _repeatOnNewPage;

        [System.Xml.Serialization.XmlElementAttribute("RepeatOnNewPage")]
        public System.Collections.Generic.List<bool> RepeatOnNewPage
        {
            get
            {
                return this._repeatOnNewPage;
            }
            private set
            {
                this._repeatOnNewPage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RepeatOnNewPage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatOnNewPageSpecified
        {
            get
            {
                return (this.RepeatOnNewPage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixMemberTypeKeepWithGroup> _keepWithGroup;

        [System.Xml.Serialization.XmlElementAttribute("KeepWithGroup")]
        public System.Collections.Generic.List<TablixMemberTypeKeepWithGroup> KeepWithGroup
        {
            get
            {
                return this._keepWithGroup;
            }
            private set
            {
                this._keepWithGroup = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KeepWithGroup collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepWithGroupSpecified
        {
            get
            {
                return (this.KeepWithGroup.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<TablixMemberTypeDataElementOutput> _dataElementOutput;

        [System.Xml.Serialization.XmlElementAttribute("DataElementOutput")]
        public System.Collections.Generic.List<TablixMemberTypeDataElementOutput> DataElementOutput
        {
            get
            {
                return this._dataElementOutput;
            }
            private set
            {
                this._dataElementOutput = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementOutput collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementOutputSpecified
        {
            get
            {
                return (this.DataElementOutput.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _keepTogether;

        [System.Xml.Serialization.XmlElementAttribute("KeepTogether")]
        public System.Collections.Generic.List<bool> KeepTogether
        {
            get
            {
                return this._keepTogether;
            }
            private set
            {
                this._keepTogether = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KeepTogether collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepTogetherSpecified
        {
            get
            {
                return (this.KeepTogether.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixHeaderType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TablixHeaderType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _size;

        [System.Xml.Serialization.XmlElementAttribute("Size")]
        public System.Collections.Generic.List<string> Size
        {
            get
            {
                return this._size;
            }
            private set
            {
                this._size = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Size collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified
        {
            get
            {
                return (this.Size.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TablixHeaderType" /> class.</para>
        /// </summary>
        public TablixHeaderType()
        {
            this._size = new System.Collections.Generic.List<string>();
            this._cellContents = new System.Collections.Generic.List<CellContentsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CellContentsType> _cellContents;

        [System.Xml.Serialization.XmlElementAttribute("CellContents")]
        public System.Collections.Generic.List<CellContentsType> CellContents
        {
            get
            {
                return this._cellContents;
            }
            private set
            {
                this._cellContents = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CellContents collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellContentsSpecified
        {
            get
            {
                return (this.CellContents.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixMemberTypeKeepWithGroup", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum TablixMemberTypeKeepWithGroup
    {

        None,

        Before,

        After,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixMemberTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum TablixMemberTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixTypeLayoutDirection", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum TablixTypeLayoutDirection
    {

        LTR,

        RTL,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TablixTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum TablixTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageSectionType> _pageHeader;

        [System.Xml.Serialization.XmlElementAttribute("PageHeader")]
        public System.Collections.Generic.List<PageSectionType> PageHeader
        {
            get
            {
                return this._pageHeader;
            }
            private set
            {
                this._pageHeader = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageHeader collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageHeaderSpecified
        {
            get
            {
                return (this.PageHeader.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PageType" /> class.</para>
        /// </summary>
        public PageType()
        {
            this._pageHeader = new System.Collections.Generic.List<PageSectionType>();
            this._pageFooter = new System.Collections.Generic.List<PageSectionType>();
            this._pageHeight = new System.Collections.Generic.List<string>();
            this._pageWidth = new System.Collections.Generic.List<string>();
            this._interactiveHeight = new System.Collections.Generic.List<string>();
            this._interactiveWidth = new System.Collections.Generic.List<string>();
            this._leftMargin = new System.Collections.Generic.List<string>();
            this._rightMargin = new System.Collections.Generic.List<string>();
            this._topMargin = new System.Collections.Generic.List<string>();
            this._bottomMargin = new System.Collections.Generic.List<string>();
            this._columns = new System.Collections.Generic.List<int>();
            this._columnSpacing = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PageSectionType> _pageFooter;

        [System.Xml.Serialization.XmlElementAttribute("PageFooter")]
        public System.Collections.Generic.List<PageSectionType> PageFooter
        {
            get
            {
                return this._pageFooter;
            }
            private set
            {
                this._pageFooter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageFooter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageFooterSpecified
        {
            get
            {
                return (this.PageFooter.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pageHeight;

        [System.Xml.Serialization.XmlElementAttribute("PageHeight")]
        public System.Collections.Generic.List<string> PageHeight
        {
            get
            {
                return this._pageHeight;
            }
            private set
            {
                this._pageHeight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageHeight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageHeightSpecified
        {
            get
            {
                return (this.PageHeight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _pageWidth;

        [System.Xml.Serialization.XmlElementAttribute("PageWidth")]
        public System.Collections.Generic.List<string> PageWidth
        {
            get
            {
                return this._pageWidth;
            }
            private set
            {
                this._pageWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PageWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PageWidthSpecified
        {
            get
            {
                return (this.PageWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interactiveHeight;

        [System.Xml.Serialization.XmlElementAttribute("InteractiveHeight")]
        public System.Collections.Generic.List<string> InteractiveHeight
        {
            get
            {
                return this._interactiveHeight;
            }
            private set
            {
                this._interactiveHeight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InteractiveHeight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteractiveHeightSpecified
        {
            get
            {
                return (this.InteractiveHeight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _interactiveWidth;

        [System.Xml.Serialization.XmlElementAttribute("InteractiveWidth")]
        public System.Collections.Generic.List<string> InteractiveWidth
        {
            get
            {
                return this._interactiveWidth;
            }
            private set
            {
                this._interactiveWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InteractiveWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteractiveWidthSpecified
        {
            get
            {
                return (this.InteractiveWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _leftMargin;

        [System.Xml.Serialization.XmlElementAttribute("LeftMargin")]
        public System.Collections.Generic.List<string> LeftMargin
        {
            get
            {
                return this._leftMargin;
            }
            private set
            {
                this._leftMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftMarginSpecified
        {
            get
            {
                return (this.LeftMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rightMargin;

        [System.Xml.Serialization.XmlElementAttribute("RightMargin")]
        public System.Collections.Generic.List<string> RightMargin
        {
            get
            {
                return this._rightMargin;
            }
            private set
            {
                this._rightMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightMarginSpecified
        {
            get
            {
                return (this.RightMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _topMargin;

        [System.Xml.Serialization.XmlElementAttribute("TopMargin")]
        public System.Collections.Generic.List<string> TopMargin
        {
            get
            {
                return this._topMargin;
            }
            private set
            {
                this._topMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopMarginSpecified
        {
            get
            {
                return (this.TopMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bottomMargin;

        [System.Xml.Serialization.XmlElementAttribute("BottomMargin")]
        public System.Collections.Generic.List<string> BottomMargin
        {
            get
            {
                return this._bottomMargin;
            }
            private set
            {
                this._bottomMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BottomMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BottomMarginSpecified
        {
            get
            {
                return (this.BottomMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<int> _columns;

        [System.Xml.Serialization.XmlElementAttribute("Columns")]
        public System.Collections.Generic.List<int> Columns
        {
            get
            {
                return this._columns;
            }
            private set
            {
                this._columns = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Columns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnsSpecified
        {
            get
            {
                return (this.Columns.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _columnSpacing;

        [System.Xml.Serialization.XmlElementAttribute("ColumnSpacing")]
        public System.Collections.Generic.List<string> ColumnSpacing
        {
            get
            {
                return this._columnSpacing;
            }
            private set
            {
                this._columnSpacing = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ColumnSpacing collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnSpacingSpecified
        {
            get
            {
                return (this.ColumnSpacing.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PageSectionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PageSectionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _height;

        [System.Xml.Serialization.XmlElementAttribute("Height")]
        public System.Collections.Generic.List<string> Height
        {
            get
            {
                return this._height;
            }
            private set
            {
                this._height = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Height collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return (this.Height.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PageSectionType" /> class.</para>
        /// </summary>
        public PageSectionType()
        {
            this._height = new System.Collections.Generic.List<string>();
            this._printOnFirstPage = new System.Collections.Generic.List<bool>();
            this._printOnLastPage = new System.Collections.Generic.List<bool>();
            this._printBetweenSections = new System.Collections.Generic.List<bool>();
            this._reportItems = new System.Collections.Generic.List<ReportItemsType>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _printOnFirstPage;

        [System.Xml.Serialization.XmlElementAttribute("PrintOnFirstPage")]
        public System.Collections.Generic.List<bool> PrintOnFirstPage
        {
            get
            {
                return this._printOnFirstPage;
            }
            private set
            {
                this._printOnFirstPage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrintOnFirstPage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrintOnFirstPageSpecified
        {
            get
            {
                return (this.PrintOnFirstPage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _printOnLastPage;

        [System.Xml.Serialization.XmlElementAttribute("PrintOnLastPage")]
        public System.Collections.Generic.List<bool> PrintOnLastPage
        {
            get
            {
                return this._printOnLastPage;
            }
            private set
            {
                this._printOnLastPage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrintOnLastPage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrintOnLastPageSpecified
        {
            get
            {
                return (this.PrintOnLastPage.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _printBetweenSections;

        [System.Xml.Serialization.XmlElementAttribute("PrintBetweenSections")]
        public System.Collections.Generic.List<bool> PrintBetweenSections
        {
            get
            {
                return this._printBetweenSections;
            }
            private set
            {
                this._printBetweenSections = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PrintBetweenSections collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrintBetweenSectionsSpecified
        {
            get
            {
                return (this.PrintBetweenSections.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportItemsType> _reportItems;

        [System.Xml.Serialization.XmlElementAttribute("ReportItems")]
        public System.Collections.Generic.List<ReportItemsType> ReportItems
        {
            get
            {
                return this._reportItems;
            }
            private set
            {
                this._reportItems = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReportItems collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportItemsSpecified
        {
            get
            {
                return (this.ReportItems.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportSectionTypeDataElementOutput", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ReportSectionTypeDataElementOutput
    {

        Output,

        NoOutput,

        ContentsOnly,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportParametersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportParametersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportParameterType> _reportParameter;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ReportParameter")]
        public System.Collections.Generic.List<ReportParameterType> ReportParameter
        {
            get
            {
                return this._reportParameter;
            }
            private set
            {
                this._reportParameter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportParametersType" /> class.</para>
        /// </summary>
        public ReportParametersType()
        {
            this._reportParameter = new System.Collections.Generic.List<ReportParameterType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportParameterType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportParameterType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportParameterTypeDataType> _dataType;

        [System.Xml.Serialization.XmlElementAttribute("DataType")]
        public System.Collections.Generic.List<ReportParameterTypeDataType> DataType
        {
            get
            {
                return this._dataType;
            }
            private set
            {
                this._dataType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataTypeSpecified
        {
            get
            {
                return (this.DataType.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReportParameterType" /> class.</para>
        /// </summary>
        public ReportParameterType()
        {
            this._dataType = new System.Collections.Generic.List<ReportParameterTypeDataType>();
            this._nullable = new System.Collections.Generic.List<bool>();
            this._defaultValue = new System.Collections.Generic.List<DefaultValueType>();
            this._allowBlank = new System.Collections.Generic.List<bool>();
            this._prompt = new System.Collections.Generic.List<StringLocIDType>();
            this._validValues = new System.Collections.Generic.List<ValidValuesType>();
            this._hidden = new System.Collections.Generic.List<bool>();
            this._multiValue = new System.Collections.Generic.List<bool>();
            this._usedInQuery = new System.Collections.Generic.List<ReportParameterTypeUsedInQuery>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _nullable;

        [System.Xml.Serialization.XmlElementAttribute("Nullable")]
        public System.Collections.Generic.List<bool> Nullable
        {
            get
            {
                return this._nullable;
            }
            private set
            {
                this._nullable = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Nullable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NullableSpecified
        {
            get
            {
                return (this.Nullable.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DefaultValueType> _defaultValue;

        [System.Xml.Serialization.XmlElementAttribute("DefaultValue")]
        public System.Collections.Generic.List<DefaultValueType> DefaultValue
        {
            get
            {
                return this._defaultValue;
            }
            private set
            {
                this._defaultValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DefaultValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultValueSpecified
        {
            get
            {
                return (this.DefaultValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _allowBlank;

        [System.Xml.Serialization.XmlElementAttribute("AllowBlank")]
        public System.Collections.Generic.List<bool> AllowBlank
        {
            get
            {
                return this._allowBlank;
            }
            private set
            {
                this._allowBlank = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AllowBlank collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowBlankSpecified
        {
            get
            {
                return (this.AllowBlank.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _prompt;

        [System.Xml.Serialization.XmlElementAttribute("Prompt")]
        public System.Collections.Generic.List<StringLocIDType> Prompt
        {
            get
            {
                return this._prompt;
            }
            private set
            {
                this._prompt = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Prompt collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptSpecified
        {
            get
            {
                return (this.Prompt.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ValidValuesType> _validValues;

        [System.Xml.Serialization.XmlElementAttribute("ValidValues")]
        public System.Collections.Generic.List<ValidValuesType> ValidValues
        {
            get
            {
                return this._validValues;
            }
            private set
            {
                this._validValues = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ValidValues collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidValuesSpecified
        {
            get
            {
                return (this.ValidValues.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _hidden;

        [System.Xml.Serialization.XmlElementAttribute("Hidden")]
        public System.Collections.Generic.List<bool> Hidden
        {
            get
            {
                return this._hidden;
            }
            private set
            {
                this._hidden = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Hidden collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified
        {
            get
            {
                return (this.Hidden.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _multiValue;

        [System.Xml.Serialization.XmlElementAttribute("MultiValue")]
        public System.Collections.Generic.List<bool> MultiValue
        {
            get
            {
                return this._multiValue;
            }
            private set
            {
                this._multiValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MultiValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiValueSpecified
        {
            get
            {
                return (this.MultiValue.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportParameterTypeUsedInQuery> _usedInQuery;

        [System.Xml.Serialization.XmlElementAttribute("UsedInQuery")]
        public System.Collections.Generic.List<ReportParameterTypeUsedInQuery> UsedInQuery
        {
            get
            {
                return this._usedInQuery;
            }
            private set
            {
                this._usedInQuery = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the UsedInQuery collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsedInQuerySpecified
        {
            get
            {
                return (this.UsedInQuery.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportParameterTypeDataType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ReportParameterTypeDataType
    {

        Boolean,

        DateTime,

        Integer,

        Float,

        String,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DefaultValueType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DefaultValueType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetReferenceType> _dataSetReference;

        [System.Xml.Serialization.XmlElementAttribute("DataSetReference")]
        public System.Collections.Generic.List<DataSetReferenceType> DataSetReference
        {
            get
            {
                return this._dataSetReference;
            }
            private set
            {
                this._dataSetReference = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetReferenceSpecified
        {
            get
            {
                return (this.DataSetReference.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DefaultValueType" /> class.</para>
        /// </summary>
        public DefaultValueType()
        {
            this._dataSetReference = new System.Collections.Generic.List<DataSetReferenceType>();
            this._values = new System.Collections.Generic.List<ValuesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ValuesType> _values;

        [System.Xml.Serialization.XmlElementAttribute("Values")]
        public System.Collections.Generic.List<ValuesType> Values
        {
            get
            {
                return this._values;
            }
            private set
            {
                this._values = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Values collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValuesSpecified
        {
            get
            {
                return (this.Values.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSetReferenceType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataSetReferenceType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSetName;

        [System.Xml.Serialization.XmlElementAttribute("DataSetName")]
        public System.Collections.Generic.List<string> DataSetName
        {
            get
            {
                return this._dataSetName;
            }
            private set
            {
                this._dataSetName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetNameSpecified
        {
            get
            {
                return (this.DataSetName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataSetReferenceType" /> class.</para>
        /// </summary>
        public DataSetReferenceType()
        {
            this._dataSetName = new System.Collections.Generic.List<string>();
            this._valueField = new System.Collections.Generic.List<string>();
            this._labelField = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _valueField;

        [System.Xml.Serialization.XmlElementAttribute("ValueField")]
        public System.Collections.Generic.List<string> ValueField
        {
            get
            {
                return this._valueField;
            }
            private set
            {
                this._valueField = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ValueField collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueFieldSpecified
        {
            get
            {
                return (this.ValueField.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _labelField;

        [System.Xml.Serialization.XmlElementAttribute("LabelField")]
        public System.Collections.Generic.List<string> LabelField
        {
            get
            {
                return this._labelField;
            }
            private set
            {
                this._labelField = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LabelField collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelFieldSpecified
        {
            get
            {
                return (this.LabelField.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ValuesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Value", IsNullable = true)]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ValuesType" /> class.</para>
        /// </summary>
        public ValuesType()
        {
            this._value = new System.Collections.Generic.List<string>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ValidValuesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidValuesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetReferenceType> _dataSetReference;

        [System.Xml.Serialization.XmlElementAttribute("DataSetReference")]
        public System.Collections.Generic.List<DataSetReferenceType> DataSetReference
        {
            get
            {
                return this._dataSetReference;
            }
            private set
            {
                this._dataSetReference = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSetReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetReferenceSpecified
        {
            get
            {
                return (this.DataSetReference.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ValidValuesType" /> class.</para>
        /// </summary>
        public ValidValuesType()
        {
            this._dataSetReference = new System.Collections.Generic.List<DataSetReferenceType>();
            this._parameterValues = new System.Collections.Generic.List<ParameterValuesType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ParameterValuesType> _parameterValues;

        [System.Xml.Serialization.XmlElementAttribute("ParameterValues")]
        public System.Collections.Generic.List<ParameterValuesType> ParameterValues
        {
            get
            {
                return this._parameterValues;
            }
            private set
            {
                this._parameterValues = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParameterValues collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParameterValuesSpecified
        {
            get
            {
                return (this.ParameterValues.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParameterValuesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParameterValuesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ParameterValueType> _parameterValue;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ParameterValue")]
        public System.Collections.Generic.List<ParameterValueType> ParameterValue
        {
            get
            {
                return this._parameterValue;
            }
            private set
            {
                this._parameterValue = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParameterValuesType" /> class.</para>
        /// </summary>
        public ParameterValuesType()
        {
            this._parameterValue = new System.Collections.Generic.List<ParameterValueType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParameterValueType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParameterValueType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParameterValueType" /> class.</para>
        /// </summary>
        public ParameterValueType()
        {
            this._value = new System.Collections.Generic.List<string>();
            this._label = new System.Collections.Generic.List<StringLocIDType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _label;

        [System.Xml.Serialization.XmlElementAttribute("Label")]
        public System.Collections.Generic.List<StringLocIDType> Label
        {
            get
            {
                return this._label;
            }
            private set
            {
                this._label = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Label collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelSpecified
        {
            get
            {
                return (this.Label.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportParameterTypeUsedInQuery", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ReportParameterTypeUsedInQuery
    {

        False,

        True,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSetsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataSetsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetType> _dataSet;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("DataSet")]
        public System.Collections.Generic.List<DataSetType> DataSet
        {
            get
            {
                return this._dataSet;
            }
            private set
            {
                this._dataSet = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataSetsType" /> class.</para>
        /// </summary>
        public DataSetsType()
        {
            this._dataSet = new System.Collections.Generic.List<DataSetType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSetType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataSetType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FieldsType> _fields;

        [System.Xml.Serialization.XmlElementAttribute("Fields")]
        public System.Collections.Generic.List<FieldsType> Fields
        {
            get
            {
                return this._fields;
            }
            private set
            {
                this._fields = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Fields collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldsSpecified
        {
            get
            {
                return (this.Fields.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataSetType" /> class.</para>
        /// </summary>
        public DataSetType()
        {
            this._fields = new System.Collections.Generic.List<FieldsType>();
            this._query = new System.Collections.Generic.List<QueryType>();
            this._sharedDataSet = new System.Collections.Generic.List<SharedDataSetType>();
            this._caseSensitivity = new System.Collections.Generic.List<DataSetTypeCaseSensitivity>();
            this._collation = new System.Collections.Generic.List<string>();
            this._accentSensitivity = new System.Collections.Generic.List<DataSetTypeAccentSensitivity>();
            this._kanatypeSensitivity = new System.Collections.Generic.List<DataSetTypeKanatypeSensitivity>();
            this._widthSensitivity = new System.Collections.Generic.List<DataSetTypeWidthSensitivity>();
            this._filters = new System.Collections.Generic.List<FiltersType>();
            this._interpretSubtotalsAsDetails = new System.Collections.Generic.List<DataSetTypeInterpretSubtotalsAsDetails>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<QueryType> _query;

        [System.Xml.Serialization.XmlElementAttribute("Query")]
        public System.Collections.Generic.List<QueryType> Query
        {
            get
            {
                return this._query;
            }
            private set
            {
                this._query = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Query collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuerySpecified
        {
            get
            {
                return (this.Query.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SharedDataSetType> _sharedDataSet;

        [System.Xml.Serialization.XmlElementAttribute("SharedDataSet")]
        public System.Collections.Generic.List<SharedDataSetType> SharedDataSet
        {
            get
            {
                return this._sharedDataSet;
            }
            private set
            {
                this._sharedDataSet = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SharedDataSet collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharedDataSetSpecified
        {
            get
            {
                return (this.SharedDataSet.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetTypeCaseSensitivity> _caseSensitivity;

        [System.Xml.Serialization.XmlElementAttribute("CaseSensitivity")]
        public System.Collections.Generic.List<DataSetTypeCaseSensitivity> CaseSensitivity
        {
            get
            {
                return this._caseSensitivity;
            }
            private set
            {
                this._caseSensitivity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CaseSensitivity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseSensitivitySpecified
        {
            get
            {
                return (this.CaseSensitivity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _collation;

        [System.Xml.Serialization.XmlElementAttribute("Collation")]
        public System.Collections.Generic.List<string> Collation
        {
            get
            {
                return this._collation;
            }
            private set
            {
                this._collation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Collation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CollationSpecified
        {
            get
            {
                return (this.Collation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetTypeAccentSensitivity> _accentSensitivity;

        [System.Xml.Serialization.XmlElementAttribute("AccentSensitivity")]
        public System.Collections.Generic.List<DataSetTypeAccentSensitivity> AccentSensitivity
        {
            get
            {
                return this._accentSensitivity;
            }
            private set
            {
                this._accentSensitivity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AccentSensitivity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccentSensitivitySpecified
        {
            get
            {
                return (this.AccentSensitivity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetTypeKanatypeSensitivity> _kanatypeSensitivity;

        [System.Xml.Serialization.XmlElementAttribute("KanatypeSensitivity")]
        public System.Collections.Generic.List<DataSetTypeKanatypeSensitivity> KanatypeSensitivity
        {
            get
            {
                return this._kanatypeSensitivity;
            }
            private set
            {
                this._kanatypeSensitivity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the KanatypeSensitivity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KanatypeSensitivitySpecified
        {
            get
            {
                return (this.KanatypeSensitivity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetTypeWidthSensitivity> _widthSensitivity;

        [System.Xml.Serialization.XmlElementAttribute("WidthSensitivity")]
        public System.Collections.Generic.List<DataSetTypeWidthSensitivity> WidthSensitivity
        {
            get
            {
                return this._widthSensitivity;
            }
            private set
            {
                this._widthSensitivity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WidthSensitivity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSensitivitySpecified
        {
            get
            {
                return (this.WidthSensitivity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FiltersType> _filters;

        [System.Xml.Serialization.XmlElementAttribute("Filters")]
        public System.Collections.Generic.List<FiltersType> Filters
        {
            get
            {
                return this._filters;
            }
            private set
            {
                this._filters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiltersSpecified
        {
            get
            {
                return (this.Filters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetTypeInterpretSubtotalsAsDetails> _interpretSubtotalsAsDetails;

        [System.Xml.Serialization.XmlElementAttribute("InterpretSubtotalsAsDetails")]
        public System.Collections.Generic.List<DataSetTypeInterpretSubtotalsAsDetails> InterpretSubtotalsAsDetails
        {
            get
            {
                return this._interpretSubtotalsAsDetails;
            }
            private set
            {
                this._interpretSubtotalsAsDetails = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InterpretSubtotalsAsDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterpretSubtotalsAsDetailsSpecified
        {
            get
            {
                return (this.InterpretSubtotalsAsDetails.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FieldsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FieldsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FieldType> _field;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Field")]
        public System.Collections.Generic.List<FieldType> Field
        {
            get
            {
                return this._field;
            }
            private set
            {
                this._field = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FieldsType" /> class.</para>
        /// </summary>
        public FieldsType()
        {
            this._field = new System.Collections.Generic.List<FieldType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FieldType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FieldType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataField;

        [System.Xml.Serialization.XmlElementAttribute("DataField")]
        public System.Collections.Generic.List<string> DataField
        {
            get
            {
                return this._dataField;
            }
            private set
            {
                this._dataField = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataField collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataFieldSpecified
        {
            get
            {
                return (this.DataField.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FieldType" /> class.</para>
        /// </summary>
        public FieldType()
        {
            this._dataField = new System.Collections.Generic.List<string>();
            this._value = new System.Collections.Generic.List<StringWithDataTypeAttribute>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringWithDataTypeAttribute> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<StringWithDataTypeAttribute> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("QueryType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSourceName;

        [System.Xml.Serialization.XmlElementAttribute("DataSourceName")]
        public System.Collections.Generic.List<string> DataSourceName
        {
            get
            {
                return this._dataSourceName;
            }
            private set
            {
                this._dataSourceName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSourceName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSourceNameSpecified
        {
            get
            {
                return (this.DataSourceName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="QueryType" /> class.</para>
        /// </summary>
        public QueryType()
        {
            this._dataSourceName = new System.Collections.Generic.List<string>();
            this._commandType = new System.Collections.Generic.List<QueryTypeCommandType>();
            this._commandText = new System.Collections.Generic.List<string>();
            this._queryParameters = new System.Collections.Generic.List<QueryParametersType>();
            this._timeout = new System.Collections.Generic.List<uint>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<QueryTypeCommandType> _commandType;

        [System.Xml.Serialization.XmlElementAttribute("CommandType")]
        public System.Collections.Generic.List<QueryTypeCommandType> CommandType
        {
            get
            {
                return this._commandType;
            }
            private set
            {
                this._commandType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CommandType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommandTypeSpecified
        {
            get
            {
                return (this.CommandType.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _commandText;

        [System.Xml.Serialization.XmlElementAttribute("CommandText")]
        public System.Collections.Generic.List<string> CommandText
        {
            get
            {
                return this._commandText;
            }
            private set
            {
                this._commandText = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CommandText collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommandTextSpecified
        {
            get
            {
                return (this.CommandText.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<QueryParametersType> _queryParameters;

        [System.Xml.Serialization.XmlElementAttribute("QueryParameters")]
        public System.Collections.Generic.List<QueryParametersType> QueryParameters
        {
            get
            {
                return this._queryParameters;
            }
            private set
            {
                this._queryParameters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the QueryParameters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryParametersSpecified
        {
            get
            {
                return (this.QueryParameters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _timeout;

        [System.Xml.Serialization.XmlElementAttribute("Timeout")]
        public System.Collections.Generic.List<uint> Timeout
        {
            get
            {
                return this._timeout;
            }
            private set
            {
                this._timeout = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Timeout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeoutSpecified
        {
            get
            {
                return (this.Timeout.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("QueryTypeCommandType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum QueryTypeCommandType
    {

        Text,

        StoredProcedure,

        TableDirect,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("QueryParametersType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParametersType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<QueryParameterType> _queryParameter;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("QueryParameter")]
        public System.Collections.Generic.List<QueryParameterType> QueryParameter
        {
            get
            {
                return this._queryParameter;
            }
            private set
            {
                this._queryParameter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="QueryParametersType" /> class.</para>
        /// </summary>
        public QueryParametersType()
        {
            this._queryParameter = new System.Collections.Generic.List<QueryParameterType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("QueryParameterType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParameterType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringWithDataTypeAttribute> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<StringWithDataTypeAttribute> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="QueryParameterType" /> class.</para>
        /// </summary>
        public QueryParameterType()
        {
            this._value = new System.Collections.Generic.List<StringWithDataTypeAttribute>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SharedDataSetType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SharedDataSetType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _sharedDataSetReference;

        [System.Xml.Serialization.XmlElementAttribute("SharedDataSetReference")]
        public System.Collections.Generic.List<string> SharedDataSetReference
        {
            get
            {
                return this._sharedDataSetReference;
            }
            private set
            {
                this._sharedDataSetReference = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SharedDataSetReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharedDataSetReferenceSpecified
        {
            get
            {
                return (this.SharedDataSetReference.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SharedDataSetType" /> class.</para>
        /// </summary>
        public SharedDataSetType()
        {
            this._sharedDataSetReference = new System.Collections.Generic.List<string>();
            this._queryParameters = new System.Collections.Generic.List<QueryParametersType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<QueryParametersType> _queryParameters;

        [System.Xml.Serialization.XmlElementAttribute("QueryParameters")]
        public System.Collections.Generic.List<QueryParametersType> QueryParameters
        {
            get
            {
                return this._queryParameters;
            }
            private set
            {
                this._queryParameters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the QueryParameters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryParametersSpecified
        {
            get
            {
                return (this.QueryParameters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSetTypeCaseSensitivity", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum DataSetTypeCaseSensitivity
    {

        True,

        False,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSetTypeAccentSensitivity", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum DataSetTypeAccentSensitivity
    {

        True,

        False,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSetTypeKanatypeSensitivity", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum DataSetTypeKanatypeSensitivity
    {

        True,

        False,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSetTypeWidthSensitivity", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum DataSetTypeWidthSensitivity
    {

        True,

        False,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSetTypeInterpretSubtotalsAsDetails", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum DataSetTypeInterpretSubtotalsAsDetails
    {

        True,

        False,

        Auto,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSourcesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataSourcesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSourceType> _dataSource;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("DataSource")]
        public System.Collections.Generic.List<DataSourceType> DataSource
        {
            get
            {
                return this._dataSource;
            }
            private set
            {
                this._dataSource = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataSourcesType" /> class.</para>
        /// </summary>
        public DataSourcesType()
        {
            this._dataSource = new System.Collections.Generic.List<DataSourceType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DataSourceType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataSourceType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _transaction;

        [System.Xml.Serialization.XmlElementAttribute("Transaction")]
        public System.Collections.Generic.List<bool> Transaction
        {
            get
            {
                return this._transaction;
            }
            private set
            {
                this._transaction = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transaction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransactionSpecified
        {
            get
            {
                return (this.Transaction.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DataSourceType" /> class.</para>
        /// </summary>
        public DataSourceType()
        {
            this._transaction = new System.Collections.Generic.List<bool>();
            this._connectionProperties = new System.Collections.Generic.List<ConnectionPropertiesType>();
            this._dataSourceReference = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ConnectionPropertiesType> _connectionProperties;

        [System.Xml.Serialization.XmlElementAttribute("ConnectionProperties")]
        public System.Collections.Generic.List<ConnectionPropertiesType> ConnectionProperties
        {
            get
            {
                return this._connectionProperties;
            }
            private set
            {
                this._connectionProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ConnectionProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectionPropertiesSpecified
        {
            get
            {
                return (this.ConnectionProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSourceReference;

        [System.Xml.Serialization.XmlElementAttribute("DataSourceReference")]
        public System.Collections.Generic.List<string> DataSourceReference
        {
            get
            {
                return this._dataSourceReference;
            }
            private set
            {
                this._dataSourceReference = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSourceReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSourceReferenceSpecified
        {
            get
            {
                return (this.DataSourceReference.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionPropertiesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectionPropertiesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataProvider;

        [System.Xml.Serialization.XmlElementAttribute("DataProvider")]
        public System.Collections.Generic.List<string> DataProvider
        {
            get
            {
                return this._dataProvider;
            }
            private set
            {
                this._dataProvider = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataProvider collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataProviderSpecified
        {
            get
            {
                return (this.DataProvider.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConnectionPropertiesType" /> class.</para>
        /// </summary>
        public ConnectionPropertiesType()
        {
            this._dataProvider = new System.Collections.Generic.List<string>();
            this._connectString = new System.Collections.Generic.List<string>();
            this._integratedSecurity = new System.Collections.Generic.List<bool>();
            this._prompt = new System.Collections.Generic.List<StringLocIDType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _connectString;

        [System.Xml.Serialization.XmlElementAttribute("ConnectString")]
        public System.Collections.Generic.List<string> ConnectString
        {
            get
            {
                return this._connectString;
            }
            private set
            {
                this._connectString = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ConnectString collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectStringSpecified
        {
            get
            {
                return (this.ConnectString.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _integratedSecurity;

        [System.Xml.Serialization.XmlElementAttribute("IntegratedSecurity")]
        public System.Collections.Generic.List<bool> IntegratedSecurity
        {
            get
            {
                return this._integratedSecurity;
            }
            private set
            {
                this._integratedSecurity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the IntegratedSecurity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntegratedSecuritySpecified
        {
            get
            {
                return (this.IntegratedSecurity.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _prompt;

        [System.Xml.Serialization.XmlElementAttribute("Prompt")]
        public System.Collections.Generic.List<StringLocIDType> Prompt
        {
            get
            {
                return this._prompt;
            }
            private set
            {
                this._prompt = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Prompt collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptSpecified
        {
            get
            {
                return (this.Prompt.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CodeModulesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CodeModulesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _codeModule;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("CodeModule")]
        public System.Collections.Generic.List<string> CodeModule
        {
            get
            {
                return this._codeModule;
            }
            private set
            {
                this._codeModule = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CodeModulesType" /> class.</para>
        /// </summary>
        public CodeModulesType()
        {
            this._codeModule = new System.Collections.Generic.List<string>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ClassesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClassesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ClassType> _class;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Class")]
        public System.Collections.Generic.List<ClassType> Class
        {
            get
            {
                return this._class;
            }
            private set
            {
                this._class = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ClassesType" /> class.</para>
        /// </summary>
        public ClassesType()
        {
            this._class = new System.Collections.Generic.List<ClassType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ClassType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClassType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _className;

        [System.Xml.Serialization.XmlElementAttribute("ClassName")]
        public System.Collections.Generic.List<string> ClassName
        {
            get
            {
                return this._className;
            }
            private set
            {
                this._className = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ClassName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClassNameSpecified
        {
            get
            {
                return (this.ClassName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ClassType" /> class.</para>
        /// </summary>
        public ClassType()
        {
            this._className = new System.Collections.Generic.List<string>();
            this._instanceName = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _instanceName;

        [System.Xml.Serialization.XmlElementAttribute("InstanceName")]
        public System.Collections.Generic.List<string> InstanceName
        {
            get
            {
                return this._instanceName;
            }
            private set
            {
                this._instanceName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InstanceName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstanceNameSpecified
        {
            get
            {
                return (this.InstanceName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EmbeddedImagesType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmbeddedImagesType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<EmbeddedImageType> _embeddedImage;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("EmbeddedImage")]
        public System.Collections.Generic.List<EmbeddedImageType> EmbeddedImage
        {
            get
            {
                return this._embeddedImage;
            }
            private set
            {
                this._embeddedImage = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EmbeddedImagesType" /> class.</para>
        /// </summary>
        public EmbeddedImagesType()
        {
            this._embeddedImage = new System.Collections.Generic.List<EmbeddedImageType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EmbeddedImageType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmbeddedImageType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _mIMEType;

        [System.Xml.Serialization.XmlElementAttribute("MIMEType")]
        public System.Collections.Generic.List<string> MIMEType
        {
            get
            {
                return this._mIMEType;
            }
            private set
            {
                this._mIMEType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MIMEType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MIMETypeSpecified
        {
            get
            {
                return (this.MIMEType.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EmbeddedImageType" /> class.</para>
        /// </summary>
        public EmbeddedImageType()
        {
            this._mIMEType = new System.Collections.Generic.List<string>();
            this._imageData = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _imageData;

        [System.Xml.Serialization.XmlElementAttribute("ImageData")]
        public System.Collections.Generic.List<string> ImageData
        {
            get
            {
                return this._imageData;
            }
            private set
            {
                this._imageData = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ImageData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageDataSpecified
        {
            get
            {
                return (this.ImageData.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendColumnHeaderType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendColumnHeaderType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _value;

        [System.Xml.Serialization.XmlElementAttribute("Value")]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendColumnHeaderType" /> class.</para>
        /// </summary>
        public ChartLegendColumnHeaderType()
        {
            this._value = new System.Collections.Generic.List<string>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendCustomItemsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendCustomItemsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendCustomItemType> _chartLegendCustomItem;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartLegendCustomItem")]
        public System.Collections.Generic.List<ChartLegendCustomItemType> ChartLegendCustomItem
        {
            get
            {
                return this._chartLegendCustomItem;
            }
            private set
            {
                this._chartLegendCustomItem = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendCustomItemsType" /> class.</para>
        /// </summary>
        public ChartLegendCustomItemsType()
        {
            this._chartLegendCustomItem = new System.Collections.Generic.List<ChartLegendCustomItemType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendCustomItemType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendCustomItemType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendCustomItemCellsType> _chartLegendCustomItemCells;

        [System.Xml.Serialization.XmlElementAttribute("ChartLegendCustomItemCells")]
        public System.Collections.Generic.List<ChartLegendCustomItemCellsType> ChartLegendCustomItemCells
        {
            get
            {
                return this._chartLegendCustomItemCells;
            }
            private set
            {
                this._chartLegendCustomItemCells = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartLegendCustomItemCells collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartLegendCustomItemCellsSpecified
        {
            get
            {
                return (this.ChartLegendCustomItemCells.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendCustomItemType" /> class.</para>
        /// </summary>
        public ChartLegendCustomItemType()
        {
            this._chartLegendCustomItemCells = new System.Collections.Generic.List<ChartLegendCustomItemCellsType>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._chartMarker = new System.Collections.Generic.List<ChartMarkerType>();
            this._separator = new System.Collections.Generic.List<string>();
            this._separatorColor = new System.Collections.Generic.List<string>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartMarkerType> _chartMarker;

        [System.Xml.Serialization.XmlElementAttribute("ChartMarker")]
        public System.Collections.Generic.List<ChartMarkerType> ChartMarker
        {
            get
            {
                return this._chartMarker;
            }
            private set
            {
                this._chartMarker = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChartMarker collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMarkerSpecified
        {
            get
            {
                return (this.ChartMarker.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _separator;

        [System.Xml.Serialization.XmlElementAttribute("Separator")]
        public System.Collections.Generic.List<string> Separator
        {
            get
            {
                return this._separator;
            }
            private set
            {
                this._separator = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Separator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeparatorSpecified
        {
            get
            {
                return (this.Separator.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _separatorColor;

        [System.Xml.Serialization.XmlElementAttribute("SeparatorColor")]
        public System.Collections.Generic.List<string> SeparatorColor
        {
            get
            {
                return this._separatorColor;
            }
            private set
            {
                this._separatorColor = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SeparatorColor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeparatorColorSpecified
        {
            get
            {
                return (this.SeparatorColor.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendCustomItemCellsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendCustomItemCellsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendCustomItemCellType> _chartLegendCustomItemCell;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ChartLegendCustomItemCell")]
        public System.Collections.Generic.List<ChartLegendCustomItemCellType> ChartLegendCustomItemCell
        {
            get
            {
                return this._chartLegendCustomItemCell;
            }
            private set
            {
                this._chartLegendCustomItemCell = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendCustomItemCellsType" /> class.</para>
        /// </summary>
        public ChartLegendCustomItemCellsType()
        {
            this._chartLegendCustomItemCell = new System.Collections.Generic.List<ChartLegendCustomItemCellType>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendCustomItemCellType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChartLegendCustomItemCellType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ChartLegendCustomItemCellTypeCellType> _cellType;

        [System.Xml.Serialization.XmlElementAttribute("CellType")]
        public System.Collections.Generic.List<ChartLegendCustomItemCellTypeCellType> CellType
        {
            get
            {
                return this._cellType;
            }
            private set
            {
                this._cellType = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CellType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellTypeSpecified
        {
            get
            {
                return (this.CellType.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChartLegendCustomItemCellType" /> class.</para>
        /// </summary>
        public ChartLegendCustomItemCellType()
        {
            this._cellType = new System.Collections.Generic.List<ChartLegendCustomItemCellTypeCellType>();
            this._text = new System.Collections.Generic.List<string>();
            this._cellSpan = new System.Collections.Generic.List<uint>();
            this._style = new System.Collections.Generic.List<StyleType>();
            this._actionInfo = new System.Collections.Generic.List<ActionInfoType>();
            this._toolTip = new System.Collections.Generic.List<StringLocIDType>();
            this._imageHeight = new System.Collections.Generic.List<string>();
            this._imageWidth = new System.Collections.Generic.List<string>();
            this._symbolHeight = new System.Collections.Generic.List<string>();
            this._symbolWidth = new System.Collections.Generic.List<string>();
            this._alignment = new System.Collections.Generic.List<string>();
            this._topMargin = new System.Collections.Generic.List<string>();
            this._bottomMargin = new System.Collections.Generic.List<string>();
            this._leftMargin = new System.Collections.Generic.List<string>();
            this._rightMargin = new System.Collections.Generic.List<string>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _text;

        [System.Xml.Serialization.XmlElementAttribute("Text")]
        public System.Collections.Generic.List<string> Text
        {
            get
            {
                return this._text;
            }
            private set
            {
                this._text = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Text collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextSpecified
        {
            get
            {
                return (this.Text.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<uint> _cellSpan;

        [System.Xml.Serialization.XmlElementAttribute("CellSpan")]
        public System.Collections.Generic.List<uint> CellSpan
        {
            get
            {
                return this._cellSpan;
            }
            private set
            {
                this._cellSpan = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CellSpan collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellSpanSpecified
        {
            get
            {
                return (this.CellSpan.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StyleType> _style;

        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public System.Collections.Generic.List<StyleType> Style
        {
            get
            {
                return this._style;
            }
            private set
            {
                this._style = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Style collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StyleSpecified
        {
            get
            {
                return (this.Style.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ActionInfoType> _actionInfo;

        [System.Xml.Serialization.XmlElementAttribute("ActionInfo")]
        public System.Collections.Generic.List<ActionInfoType> ActionInfo
        {
            get
            {
                return this._actionInfo;
            }
            private set
            {
                this._actionInfo = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ActionInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionInfoSpecified
        {
            get
            {
                return (this.ActionInfo.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _toolTip;

        [System.Xml.Serialization.XmlElementAttribute("ToolTip")]
        public System.Collections.Generic.List<StringLocIDType> ToolTip
        {
            get
            {
                return this._toolTip;
            }
            private set
            {
                this._toolTip = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ToolTip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToolTipSpecified
        {
            get
            {
                return (this.ToolTip.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _imageHeight;

        [System.Xml.Serialization.XmlElementAttribute("ImageHeight")]
        public System.Collections.Generic.List<string> ImageHeight
        {
            get
            {
                return this._imageHeight;
            }
            private set
            {
                this._imageHeight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ImageHeight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageHeightSpecified
        {
            get
            {
                return (this.ImageHeight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _imageWidth;

        [System.Xml.Serialization.XmlElementAttribute("ImageWidth")]
        public System.Collections.Generic.List<string> ImageWidth
        {
            get
            {
                return this._imageWidth;
            }
            private set
            {
                this._imageWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ImageWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageWidthSpecified
        {
            get
            {
                return (this.ImageWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _symbolHeight;

        [System.Xml.Serialization.XmlElementAttribute("SymbolHeight")]
        public System.Collections.Generic.List<string> SymbolHeight
        {
            get
            {
                return this._symbolHeight;
            }
            private set
            {
                this._symbolHeight = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SymbolHeight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SymbolHeightSpecified
        {
            get
            {
                return (this.SymbolHeight.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _symbolWidth;

        [System.Xml.Serialization.XmlElementAttribute("SymbolWidth")]
        public System.Collections.Generic.List<string> SymbolWidth
        {
            get
            {
                return this._symbolWidth;
            }
            private set
            {
                this._symbolWidth = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SymbolWidth collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SymbolWidthSpecified
        {
            get
            {
                return (this.SymbolWidth.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _alignment;

        [System.Xml.Serialization.XmlElementAttribute("Alignment")]
        public System.Collections.Generic.List<string> Alignment
        {
            get
            {
                return this._alignment;
            }
            private set
            {
                this._alignment = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Alignment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlignmentSpecified
        {
            get
            {
                return (this.Alignment.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _topMargin;

        [System.Xml.Serialization.XmlElementAttribute("TopMargin")]
        public System.Collections.Generic.List<string> TopMargin
        {
            get
            {
                return this._topMargin;
            }
            private set
            {
                this._topMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TopMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopMarginSpecified
        {
            get
            {
                return (this.TopMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _bottomMargin;

        [System.Xml.Serialization.XmlElementAttribute("BottomMargin")]
        public System.Collections.Generic.List<string> BottomMargin
        {
            get
            {
                return this._bottomMargin;
            }
            private set
            {
                this._bottomMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BottomMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BottomMarginSpecified
        {
            get
            {
                return (this.BottomMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _leftMargin;

        [System.Xml.Serialization.XmlElementAttribute("LeftMargin")]
        public System.Collections.Generic.List<string> LeftMargin
        {
            get
            {
                return this._leftMargin;
            }
            private set
            {
                this._leftMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LeftMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftMarginSpecified
        {
            get
            {
                return (this.LeftMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _rightMargin;

        [System.Xml.Serialization.XmlElementAttribute("RightMargin")]
        public System.Collections.Generic.List<string> RightMargin
        {
            get
            {
                return this._rightMargin;
            }
            private set
            {
                this._rightMargin = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RightMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightMarginSpecified
        {
            get
            {
                return (this.RightMargin.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChartLegendCustomItemCellTypeCellType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ChartLegendCustomItemCellTypeCellType
    {

        Text,

        SeriesSymbol,

        Image,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportParametersLayoutType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportParametersLayoutType
    {

        [System.Xml.Serialization.XmlElementAttribute("GridLayoutDefinition")]
        public GridLayoutDefinitionType GridLayoutDefinition { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GridLayoutDefinitionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GridLayoutDefinitionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<int> _numberOfColumns;

        [System.Xml.Serialization.XmlElementAttribute("NumberOfColumns")]
        public System.Collections.Generic.List<int> NumberOfColumns
        {
            get
            {
                return this._numberOfColumns;
            }
            private set
            {
                this._numberOfColumns = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NumberOfColumns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfColumnsSpecified
        {
            get
            {
                return (this.NumberOfColumns.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GridLayoutDefinitionType" /> class.</para>
        /// </summary>
        public GridLayoutDefinitionType()
        {
            this._numberOfColumns = new System.Collections.Generic.List<int>();
            this._numberOfRows = new System.Collections.Generic.List<int>();
            this._cellDefinitions = new System.Collections.Generic.List<CellDefinitionsType>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<int> _numberOfRows;

        [System.Xml.Serialization.XmlElementAttribute("NumberOfRows")]
        public System.Collections.Generic.List<int> NumberOfRows
        {
            get
            {
                return this._numberOfRows;
            }
            private set
            {
                this._numberOfRows = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NumberOfRows collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRowsSpecified
        {
            get
            {
                return (this.NumberOfRows.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CellDefinitionsType> _cellDefinitions;

        [System.Xml.Serialization.XmlElementAttribute("CellDefinitions")]
        public System.Collections.Generic.List<CellDefinitionsType> CellDefinitions
        {
            get
            {
                return this._cellDefinitions;
            }
            private set
            {
                this._cellDefinitions = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CellDefinitions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellDefinitionsSpecified
        {
            get
            {
                return (this.CellDefinitions.Count != 0);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CellDefinitionsType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CellDefinitionsType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CellDefinitionType> _cellDefinition;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("CellDefinition")]
        public System.Collections.Generic.List<CellDefinitionType> CellDefinition
        {
            get
            {
                return this._cellDefinition;
            }
            private set
            {
                this._cellDefinition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CellDefinitionsType" /> class.</para>
        /// </summary>
        public CellDefinitionsType()
        {
            this._cellDefinition = new System.Collections.Generic.List<CellDefinitionType>();
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CellDefinitionType", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CellDefinitionType
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<int> _columnIndex;

        [System.Xml.Serialization.XmlElementAttribute("ColumnIndex")]
        public System.Collections.Generic.List<int> ColumnIndex
        {
            get
            {
                return this._columnIndex;
            }
            private set
            {
                this._columnIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ColumnIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnIndexSpecified
        {
            get
            {
                return (this.ColumnIndex.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CellDefinitionType" /> class.</para>
        /// </summary>
        public CellDefinitionType()
        {
            this._columnIndex = new System.Collections.Generic.List<int>();
            this._rowIndex = new System.Collections.Generic.List<int>();
            this._parameterName = new System.Collections.Generic.List<string>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<int> _rowIndex;

        [System.Xml.Serialization.XmlElementAttribute("RowIndex")]
        public System.Collections.Generic.List<int> RowIndex
        {
            get
            {
                return this._rowIndex;
            }
            private set
            {
                this._rowIndex = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RowIndex collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowIndexSpecified
        {
            get
            {
                return (this.RowIndex.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _parameterName;

        [System.Xml.Serialization.XmlElementAttribute("ParameterName")]
        public System.Collections.Generic.List<string> ParameterName
        {
            get
            {
                return this._parameterName;
            }
            private set
            {
                this._parameterName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParameterName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParameterNameSpecified
        {
            get
            {
                return (this.ParameterName.Count != 0);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Report", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("Report", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition")]
    public partial class Report
    {

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _defaultFontFamily;

        [System.Xml.Serialization.XmlElementAttribute("DefaultFontFamily")]
        public System.Collections.Generic.List<string> DefaultFontFamily
        {
            get
            {
                return this._defaultFontFamily;
            }
            private set
            {
                this._defaultFontFamily = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DefaultFontFamily collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultFontFamilySpecified
        {
            get
            {
                return (this.DefaultFontFamily.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Report" /> class.</para>
        /// </summary>
        public Report()
        {
            this._defaultFontFamily = new System.Collections.Generic.List<string>();
            this._description = new System.Collections.Generic.List<StringLocIDType>();
            this._author = new System.Collections.Generic.List<string>();
            this._autoRefresh = new System.Collections.Generic.List<string>();
            this._initialPageName = new System.Collections.Generic.List<string>();
            this._dataSources = new System.Collections.Generic.List<DataSourcesType>();
            this._dataSets = new System.Collections.Generic.List<DataSetsType>();
            this._reportParameters = new System.Collections.Generic.List<ReportParametersType>();
            this._reportParametersLayout = new System.Collections.Generic.List<ReportParametersLayoutType>();
            this._code = new System.Collections.Generic.List<string>();
            this._embeddedImages = new System.Collections.Generic.List<EmbeddedImagesType>();
            this._language = new System.Collections.Generic.List<string>();
            this._codeModules = new System.Collections.Generic.List<CodeModulesType>();
            this._classes = new System.Collections.Generic.List<ClassesType>();
            this._customProperties = new System.Collections.Generic.List<CustomPropertiesType>();
            this._variables = new System.Collections.Generic.List<VariablesType>();
            this._deferVariableEvaluation = new System.Collections.Generic.List<bool>();
            this._consumeContainerWhitespace = new System.Collections.Generic.List<bool>();
            this._dataTransform = new System.Collections.Generic.List<string>();
            this._dataSchema = new System.Collections.Generic.List<string>();
            this._dataElementName = new System.Collections.Generic.List<string>();
            this._dataElementStyle = new System.Collections.Generic.List<ReportDataElementStyle>();
            this._reportSections = new System.Collections.Generic.List<ReportSectionsType>();
            this._any = new System.Collections.Generic.List<System.Xml.XmlElement>();
            this.MustUnderstand = new System.Collections.Generic.List<string>();
            this._anyAttribute = new System.Collections.Generic.List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<StringLocIDType> _description;

        [System.Xml.Serialization.XmlElementAttribute("Description")]
        public System.Collections.Generic.List<StringLocIDType> Description
        {
            get
            {
                return this._description;
            }
            private set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Description collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DescriptionSpecified
        {
            get
            {
                return (this.Description.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _author;

        [System.Xml.Serialization.XmlElementAttribute("Author")]
        public System.Collections.Generic.List<string> Author
        {
            get
            {
                return this._author;
            }
            private set
            {
                this._author = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Author collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AuthorSpecified
        {
            get
            {
                return (this.Author.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _autoRefresh;

        [System.Xml.Serialization.XmlElementAttribute("AutoRefresh")]
        public System.Collections.Generic.List<string> AutoRefresh
        {
            get
            {
                return this._autoRefresh;
            }
            private set
            {
                this._autoRefresh = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AutoRefresh collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoRefreshSpecified
        {
            get
            {
                return (this.AutoRefresh.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _initialPageName;

        [System.Xml.Serialization.XmlElementAttribute("InitialPageName")]
        public System.Collections.Generic.List<string> InitialPageName
        {
            get
            {
                return this._initialPageName;
            }
            private set
            {
                this._initialPageName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InitialPageName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InitialPageNameSpecified
        {
            get
            {
                return (this.InitialPageName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSourcesType> _dataSources;

        [System.Xml.Serialization.XmlElementAttribute("DataSources")]
        public System.Collections.Generic.List<DataSourcesType> DataSources
        {
            get
            {
                return this._dataSources;
            }
            private set
            {
                this._dataSources = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSources collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSourcesSpecified
        {
            get
            {
                return (this.DataSources.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DataSetsType> _dataSets;

        [System.Xml.Serialization.XmlElementAttribute("DataSets")]
        public System.Collections.Generic.List<DataSetsType> DataSets
        {
            get
            {
                return this._dataSets;
            }
            private set
            {
                this._dataSets = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSets collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSetsSpecified
        {
            get
            {
                return (this.DataSets.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportParametersType> _reportParameters;

        [System.Xml.Serialization.XmlElementAttribute("ReportParameters")]
        public System.Collections.Generic.List<ReportParametersType> ReportParameters
        {
            get
            {
                return this._reportParameters;
            }
            private set
            {
                this._reportParameters = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReportParameters collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportParametersSpecified
        {
            get
            {
                return (this.ReportParameters.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportParametersLayoutType> _reportParametersLayout;

        [System.Xml.Serialization.XmlElementAttribute("ReportParametersLayout")]
        public System.Collections.Generic.List<ReportParametersLayoutType> ReportParametersLayout
        {
            get
            {
                return this._reportParametersLayout;
            }
            private set
            {
                this._reportParametersLayout = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReportParametersLayout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportParametersLayoutSpecified
        {
            get
            {
                return (this.ReportParametersLayout.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _code;

        [System.Xml.Serialization.XmlElementAttribute("Code")]
        public System.Collections.Generic.List<string> Code
        {
            get
            {
                return this._code;
            }
            private set
            {
                this._code = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Code collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSpecified
        {
            get
            {
                return (this.Code.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<EmbeddedImagesType> _embeddedImages;

        [System.Xml.Serialization.XmlElementAttribute("EmbeddedImages")]
        public System.Collections.Generic.List<EmbeddedImagesType> EmbeddedImages
        {
            get
            {
                return this._embeddedImages;
            }
            private set
            {
                this._embeddedImages = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EmbeddedImages collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmbeddedImagesSpecified
        {
            get
            {
                return (this.EmbeddedImages.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _language;

        [System.Xml.Serialization.XmlElementAttribute("Language")]
        public System.Collections.Generic.List<string> Language
        {
            get
            {
                return this._language;
            }
            private set
            {
                this._language = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Language collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LanguageSpecified
        {
            get
            {
                return (this.Language.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CodeModulesType> _codeModules;

        [System.Xml.Serialization.XmlElementAttribute("CodeModules")]
        public System.Collections.Generic.List<CodeModulesType> CodeModules
        {
            get
            {
                return this._codeModules;
            }
            private set
            {
                this._codeModules = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CodeModules collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeModulesSpecified
        {
            get
            {
                return (this.CodeModules.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ClassesType> _classes;

        [System.Xml.Serialization.XmlElementAttribute("Classes")]
        public System.Collections.Generic.List<ClassesType> Classes
        {
            get
            {
                return this._classes;
            }
            private set
            {
                this._classes = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Classes collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClassesSpecified
        {
            get
            {
                return (this.Classes.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CustomPropertiesType> _customProperties;

        [System.Xml.Serialization.XmlElementAttribute("CustomProperties")]
        public System.Collections.Generic.List<CustomPropertiesType> CustomProperties
        {
            get
            {
                return this._customProperties;
            }
            private set
            {
                this._customProperties = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CustomProperties collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomPropertiesSpecified
        {
            get
            {
                return (this.CustomProperties.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VariablesType> _variables;

        [System.Xml.Serialization.XmlElementAttribute("Variables")]
        public System.Collections.Generic.List<VariablesType> Variables
        {
            get
            {
                return this._variables;
            }
            private set
            {
                this._variables = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Variables collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VariablesSpecified
        {
            get
            {
                return (this.Variables.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _deferVariableEvaluation;

        [System.Xml.Serialization.XmlElementAttribute("DeferVariableEvaluation")]
        public System.Collections.Generic.List<bool> DeferVariableEvaluation
        {
            get
            {
                return this._deferVariableEvaluation;
            }
            private set
            {
                this._deferVariableEvaluation = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DeferVariableEvaluation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeferVariableEvaluationSpecified
        {
            get
            {
                return (this.DeferVariableEvaluation.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<bool> _consumeContainerWhitespace;

        [System.Xml.Serialization.XmlElementAttribute("ConsumeContainerWhitespace")]
        public System.Collections.Generic.List<bool> ConsumeContainerWhitespace
        {
            get
            {
                return this._consumeContainerWhitespace;
            }
            private set
            {
                this._consumeContainerWhitespace = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ConsumeContainerWhitespace collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConsumeContainerWhitespaceSpecified
        {
            get
            {
                return (this.ConsumeContainerWhitespace.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataTransform;

        [System.Xml.Serialization.XmlElementAttribute("DataTransform")]
        public System.Collections.Generic.List<string> DataTransform
        {
            get
            {
                return this._dataTransform;
            }
            private set
            {
                this._dataTransform = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataTransform collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataTransformSpecified
        {
            get
            {
                return (this.DataTransform.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataSchema;

        [System.Xml.Serialization.XmlElementAttribute("DataSchema")]
        public System.Collections.Generic.List<string> DataSchema
        {
            get
            {
                return this._dataSchema;
            }
            private set
            {
                this._dataSchema = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataSchema collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSchemaSpecified
        {
            get
            {
                return (this.DataSchema.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<string> _dataElementName;

        [System.Xml.Serialization.XmlElementAttribute("DataElementName")]
        public System.Collections.Generic.List<string> DataElementName
        {
            get
            {
                return this._dataElementName;
            }
            private set
            {
                this._dataElementName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementName collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementNameSpecified
        {
            get
            {
                return (this.DataElementName.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportDataElementStyle> _dataElementStyle;

        [System.Xml.Serialization.XmlElementAttribute("DataElementStyle")]
        public System.Collections.Generic.List<ReportDataElementStyle> DataElementStyle
        {
            get
            {
                return this._dataElementStyle;
            }
            private set
            {
                this._dataElementStyle = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DataElementStyle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataElementStyleSpecified
        {
            get
            {
                return (this.DataElementStyle.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ReportSectionsType> _reportSections;

        [System.Xml.Serialization.XmlElementAttribute("ReportSections")]
        public System.Collections.Generic.List<ReportSectionsType> ReportSections
        {
            get
            {
                return this._reportSections;
            }
            private set
            {
                this._reportSections = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ReportSections collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportSectionsSpecified
        {
            get
            {
                return (this.ReportSections.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlElement> _any;

        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute("MustUnderstand")]
        public System.Collections.Generic.List<string> MustUnderstand { get; private set; }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MustUnderstand collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MustUnderstandSpecified
        {
            get
            {
                return (this.MustUnderstand.Count != 0);
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<System.Xml.XmlAttribute> _anyAttribute;

        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.Generic.List<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.566.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReportDataElementStyle", Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition", AnonymousType = true)]
    public enum ReportDataElementStyle
    {

        Attribute,

        Element,
    }
}
